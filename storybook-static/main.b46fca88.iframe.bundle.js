(window.webpackJsonp = window.webpackJsonp || []).push([
  [1],
  {
    1128: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'DashboardLayout', function() {
          return layout_stories_DashboardLayout;
        }),
        __webpack_require__.d(__webpack_exports__, 'Header', function() {
          return layout_stories_Header;
        });
      var _templateObject,
        _templateObject2,
        _templateObject3,
        _templateObject4,
        _templateObject5,
        styled_templateObject,
        styled_templateObject2,
        styled_templateObject3,
        aside_menu_styled_templateObject,
        aside_menu_styled_templateObject2,
        aside_menu_styled_templateObject3,
        styled_templateObject4,
        styled_templateObject5,
        _templateObject6,
        _templateObject7,
        _templateObject8,
        _templateObject9,
        _templateObject10,
        _templateObject11,
        _templateObject12,
        _templateObject13,
        _templateObject14,
        _templateObject15,
        _templateObject16,
        _templateObject17,
        objectSpread2 = __webpack_require__(38),
        react = __webpack_require__(0),
        react_default = __webpack_require__.n(react),
        react_router_dom = __webpack_require__(245),
        blocks = __webpack_require__(10),
        taggedTemplateLiteral = __webpack_require__(19),
        styled_components_browser_esm = __webpack_require__(20),
        breakpoints = __webpack_require__(53),
        colors = __webpack_require__(56),
        Container = styled_components_browser_esm.a.div(
          _templateObject ||
            (_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  //background-color: ',
              ';\n  display: flex;\n'
            ])),
          colors.a.background
        ),
        Workspace = styled_components_browser_esm.a.div(
          _templateObject2 ||
            (_templateObject2 = Object(taggedTemplateLiteral.a)([
              '\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: flex-start;\n  align-items: stretch;\n  width: 100%;\n'
            ]))
        ),
        Content = styled_components_browser_esm.a.main(
          _templateObject3 ||
            (_templateObject3 = Object(taggedTemplateLiteral.a)([
              '\n  height: calc(100% - 60px);\n  width: 100%;\n  padding: 9px;\n  background: #eff4ff;\n'
            ]))
        ),
        ContentWrap = styled_components_browser_esm.a.div(
          _templateObject4 ||
            (_templateObject4 = Object(taggedTemplateLiteral.a)([
              '\n  padding: 20px;\n  background: #ffffff;\n  box-shadow: 0 0 12px rgba(0, 93, 226, 0.1);\n  border-radius: 8px;\n  overflow-x: auto;\n'
            ]))
        ),
        CheckedInput = styled_components_browser_esm.a.input(
          _templateObject5 ||
            (_templateObject5 = Object(taggedTemplateLiteral.a)([
              '\n  display: none;\n\n  &:checked {\n    & ~ .dashboard-workspace {\n      .aside-toggle-header-label {\n        .aside-menu-activation__close {\n          display: block;\n        }\n        .aside-menu-activation__open {\n          display: none;\n        }\n      }\n    }\n\n    & ~ .aside-menu {\n      @media screen and (max-width: ',
              ') {\n        left: 0;\n        top: 0;\n        position: fixed;\n        transition: all 0.5s;\n        height: 100%;\n        z-index: 101;\n\n        bottom: 0;\n        opacity: 1;\n        padding: 0 10px 20px 10px;\n      }\n\n      @media screen and (max-width: ',
              ') {\n        left: 0;\n        top: 0;\n        position: fixed;\n        //transition: all 0.5s;\n        height: 100%;\n        z-index: 101;\n        bottom: 0;\n        width: 100%;\n        opacity: 1;\n        padding: 0 10px 20px 10px;\n\n        .aside-menu__close {\n          display: block;\n        }\n      }\n    }\n  }\n\n  & ~ .aside-menu {\n    @media screen and (max-width: ',
              ') {\n      position: fixed;\n      left: -260px;\n    }\n\n    .aside-menu__mini-logo,\n    .aside-menu__close {\n      display: none;\n    }\n  }\n'
            ])),
          breakpoints.b,
          breakpoints.c,
          breakpoints.b
        ),
        HeaderStyled = styled_components_browser_esm.a.header(
          styled_templateObject ||
            (styled_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  padding: 0 20px;\n  position: sticky;\n  top: 0;\n  z-index: 100;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  height: 60px;\n  ',
              '\n  background: #fff;\n  border-bottom: 1px solid #d7e7ff;\n'
            ])),
          function(_ref) {
            return _ref.supplier ? 'padding: 0 35px;' : '';
          }
        ),
        WidgetBlock = styled_components_browser_esm.a.div(
          styled_templateObject2 ||
            (styled_templateObject2 = Object(taggedTemplateLiteral.a)([
              '\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  flex: 1;\n'
            ]))
        ),
        AsideToggleLabel = styled_components_browser_esm.a.label(
          styled_templateObject3 ||
            (styled_templateObject3 = Object(taggedTemplateLiteral.a)([
              '\n  display: none;\n  @media screen and (max-width: ',
              ') {\n    display: block;\n    cursor: pointer;\n    width: 26px;\n    height: 26px;\n    transition: 0.2s;\n    margin-left: 20px;\n\n    .aside-menu-activation__open {\n      display: block;\n    }\n    .aside-menu-activation__close {\n      display: none;\n    }\n  }\n'
            ])),
          breakpoints.b
        ),
        header_AsideToggle = function AsideToggle(_ref) {
          var htmlFor = _ref.htmlFor;
          return react_default.a.createElement(
            AsideToggleLabel,
            { className: 'aside-toggle-header-label', htmlFor: htmlFor },
            react_default.a.createElement(
              'span',
              { className: 'aside-menu-activation__open' },
              react_default.a.createElement(
                'svg',
                { width: '30', height: '18', viewBox: '0 0 30 18', fill: 'gray' },
                react_default.a.createElement('rect', { width: '30', height: '2', rx: '1' }),
                react_default.a.createElement('rect', {
                  y: '8',
                  width: '30',
                  height: '2',
                  rx: '1'
                }),
                react_default.a.createElement('rect', {
                  y: '16',
                  width: '30',
                  height: '2',
                  rx: '1'
                })
              )
            ),
            react_default.a.createElement(
              'span',
              { className: 'aside-menu-activation__close' },
              react_default.a.createElement(
                'svg',
                {
                  id: 'Capa_1',
                  enableBackground: 'new 0 0 413.348 413.348',
                  fill: 'gray',
                  height: '18',
                  viewBox: '0 0 413.348 413.348',
                  width: '30'
                },
                react_default.a.createElement('path', {
                  d:
                    'm413.348 24.354-24.354-24.354-182.32 182.32-182.32-182.32-24.354 24.354 182.32 182.32-182.32 182.32 24.354 24.354 182.32-182.32 182.32 182.32 24.354-24.354-182.32-182.32z'
                })
              )
            )
          );
        },
        header = function Header(_ref2) {
          var htmlFor = _ref2.htmlFor,
            widgets = _ref2.widgets;
          return react_default.a.createElement(
            HeaderStyled,
            null,
            react_default.a.createElement(WidgetBlock, null, widgets),
            react_default.a.createElement(header_AsideToggle, { htmlFor: htmlFor })
          );
        },
        slicedToArray = __webpack_require__(110),
        react_router = __webpack_require__(71),
        Modal = __webpack_require__(291),
        Modal_default = __webpack_require__.n(Modal),
        Aside = styled_components_browser_esm.a.aside(
          aside_menu_styled_templateObject ||
            (aside_menu_styled_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  border-right: 1px solid #d7e7ff;\n  min-width: 240px;\n  height: 100vh;\n  background: #eff4ff;\n  transition: 0.2s;\n  box-sizing: border-box;\n  padding: 0 10px 20px 10px;\n  position: sticky;\n  top: 0;\n  left: 0;\n  z-index: 911;\n'
            ]))
        ),
        AsideHeadline = styled_components_browser_esm.a.div(
          aside_menu_styled_templateObject2 ||
            (aside_menu_styled_templateObject2 = Object(taggedTemplateLiteral.a)([
              '\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  border-bottom: 1px solid #d7e7ff;\n  height: 60px;\n  flex: 1;\n'
            ]))
        ),
        AsideLogo = styled_components_browser_esm.a.a(
          aside_menu_styled_templateObject3 ||
            (aside_menu_styled_templateObject3 = Object(taggedTemplateLiteral.a)([
              '\n  @media screen and (max-width: ',
              ') {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    padding: 0 10px;\n  }\n'
            ])),
          breakpoints.b
        ),
        AsideHeadlineRole = styled_components_browser_esm.a.span(
          styled_templateObject4 ||
            (styled_templateObject4 = Object(taggedTemplateLiteral.a)([
              '\n  margin-left: 5px;\n  font-size: 11px;\n  text-transform: uppercase;\n  font-weight: bold;\n  color: black;\n  margin-bottom: -0.15em;\n'
            ]))
        ),
        AsideCloseIcon = styled_components_browser_esm.a.label(
          styled_templateObject5 ||
            (styled_templateObject5 = Object(taggedTemplateLiteral.a)([
              '\n  cursor: pointer;\n  width: 20px;\n  height: 20px;\n'
            ]))
        ),
        InlineFlexDiv = styled_components_browser_esm.a.a(
          _templateObject6 ||
            (_templateObject6 = Object(taggedTemplateLiteral.a)([
              '\n  display: inline-flex;\n  align-items: flex-end;\n'
            ]))
        ),
        NavigationWrapper = styled_components_browser_esm.a.div(
          _templateObject7 ||
            (_templateObject7 = Object(taggedTemplateLiteral.a)([
              '\n  overflow-y: auto;\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - 60px);\n  justify-content: space-between;\n  max-height: -webkit-fill-available;\n  -webkit-overflow-scrolling: touch;\n'
            ]))
        ),
        NavigationList = styled_components_browser_esm.a.ul(
          _templateObject8 ||
            (_templateObject8 = Object(taggedTemplateLiteral.a)([
              '\n  list-style: none;\n  margin: 0;\n  padding: 0;\n'
            ]))
        ),
        NavigationItem = styled_components_browser_esm.a.li(
          _templateObject9 ||
            (_templateObject9 = Object(taggedTemplateLiteral.a)([
              '\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  text-decoration: none;\n  height: 50px;\n  line-height: 30px;\n  margin: 0 5px;\n  padding: 4px;\n\n  .anticon {\n    vertical-align: middle;\n    font-size: 20px;\n  }\n\n  svg path,\n  svg circle {\n    stroke: #a8ccff;\n  }\n\n  ',
              '\n'
            ])),
          function(_ref) {
            return _ref.isActive
              ? '\n      padding: 0;\n      color: #005de2;\n      .navigation-item__link {\n        color: #005DE2 !important;\n        background: white;\n        box-shadow: 0px 2px 4px rgba(0, 93, 226, 0.06);\n        border-radius: 4px;\n        align-items: center;\n        padding: 4px;\n      }\n      \n      svg path, svg circle {\n        stroke: #005de2\n      }\n      '
              : '';
          }
        ),
        NavigationCountWidget = styled_components_browser_esm.a.div(
          _templateObject10 ||
            (_templateObject10 = Object(taggedTemplateLiteral.a)([
              '\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 30px;\n  min-height: 30px;\n  border-radius: 50%;\n  background: #ff7f03;\n  color: white;\n  font-weight: 600;\n'
            ]))
        ),
        NavigationLinkText = styled_components_browser_esm.a.span(
          _templateObject11 ||
            (_templateObject11 = Object(taggedTemplateLiteral.a)([
              '\n  margin-left: 10px;\n  transition: 0.2s;\n  color: #6fa7f5;\n  pointer-events: auto;\n  line-height: normal;\n  display: inline-flex;\n  align-items: center;\n\n  .navigation-item--active & {\n    color: #005de2;\n  }\n'
            ]))
        ),
        NavigationLink = Object(styled_components_browser_esm.a)(react_router_dom.b)(
          _templateObject12 ||
            (_templateObject12 = Object(taggedTemplateLiteral.a)([
              '\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n  color: #6fa7f5;\n  font-weight: bold;\n  ',
              '\n  width: 100%;\n  line-height: 1.5;\n'
            ])),
          function(_ref2) {
            return _ref2.disabled ? 'pointer-events: none;\n  opacity: 0.5;\n  ' : '';
          }
        ),
        NavigationExternalLink = styled_components_browser_esm.a.a(
          _templateObject13 ||
            (_templateObject13 = Object(taggedTemplateLiteral.a)([
              '\n  color: #6fa7f5;\n  background: transparent;\n  font-weight: bold;\n  width: 100%;\n  line-height: 1.5;\n'
            ]))
        ),
        NavigationLinkContent = styled_components_browser_esm.a.div(
          _templateObject14 ||
            (_templateObject14 = Object(taggedTemplateLiteral.a)([
              '\n  display: flex;\n  align-items: center;\n  flex: 1;\n'
            ]))
        ),
        NavigationLinkIcon = styled_components_browser_esm.a.div(
          _templateObject15 ||
            (_templateObject15 = Object(taggedTemplateLiteral.a)([
              '\n  width: 26px;\n  height: 26px;\n'
            ]))
        ),
        WidgetWrapper = styled_components_browser_esm.a.div(
          _templateObject16 ||
            (_templateObject16 = Object(taggedTemplateLiteral.a)([
              '\n  padding: 0;\n  background: transparent;\n  height: 30px;\n  width: 30px;\n  text-align: center;\n\n  div:first-child {\n    padding: 2px;\n  }\n'
            ]))
        ),
        NavigationDivider = styled_components_browser_esm.a.div(
          _templateObject17 ||
            (_templateObject17 = Object(taggedTemplateLiteral.a)([
              '\n  width: 80%;\n  min-height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  background: #d7e7ff;\n'
            ]))
        );
      function LogoMin_SvgLogoMin(props) {
        return react.createElement(
          'svg',
          Object.assign(
            { width: 23, height: 24, fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            props
          ),
          react.createElement('path', {
            d:
              'M5.479 4.364C5.809 1.98 8.259 0 11.054 0c2.794 0 5.245 1.98 5.575 4.364h3.233c1.24 0 2.246.976 2.246 2.181 0 .104-.008.207-.023.309L20.16 22.127C20.003 23.202 19.055 24 17.938 24H4.17c-1.118 0-2.065-.798-2.223-1.873L.023 6.854C-.153 5.661.7 4.556 1.928 4.386a2.31 2.31 0 01.317-.022H5.48zm8.861 0c-.34-1.159-1.717-2.182-3.286-2.182-1.57 0-2.946 1.023-3.287 2.181h6.574zM2.245 6.545h3.196v2.181h2.245V6.546h6.735v2.181h2.245V6.546h3.196l-1.924 15.272H4.17L2.245 6.546z',
            fill: '#F47E1F'
          }),
          react.createElement('path', {
            d:
              'M13.37 13.091v-2.182h2.245v2.182H13.37zm1.43 2.507l1.837 1.255c-1.253 1.73-3.293 2.783-5.512 2.783-2.22 0-4.26-1.052-5.513-2.783l1.837-1.255a4.522 4.522 0 003.676 1.857c1.48 0 2.839-.701 3.675-1.857zm-8.166-4.689v2.182H8.88v-2.182H6.634z',
            fill: '#F47E1F'
          })
        );
      }
      var LogoMin = LogoMin_SvgLogoMin;
      try {
        (LogoMin_SvgLogoMin.displayName = 'SvgLogoMin'),
          (LogoMin_SvgLogoMin.__docgenInfo = {
            description: '',
            displayName: 'SvgLogoMin',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/LogoMin.tsx#SvgLogoMin'] = {
              docgenInfo: LogoMin_SvgLogoMin.__docgenInfo,
              name: 'SvgLogoMin',
              path: 'src/icons/LogoMin.tsx#SvgLogoMin'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      function Logo_SvgLogo(props) {
        return react.createElement(
          'svg',
          Object.assign(
            { width: 132, height: 24, fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            props
          ),
          react.createElement('path', {
            d:
              'M37.043 19.94c3.408 0 6.139-1.534 6.139-4.68 0-2.813-2.205-3.58-6.139-4.501-2.004-.46-2.63-.588-2.63-1.253 0-.767.876-1.177 2.305-1.177 1.653 0 2.405.537 2.68 1.433h3.634c-.476-2.61-2.356-4.502-6.19-4.502-3.632 0-6.038 1.714-6.038 4.68 0 2.43 1.604 3.325 5.513 4.272 2.08.511 3.157.588 3.157 1.534 0 .768-.752 1.151-2.33 1.151-2.23 0-3.057-.767-3.333-1.892h-3.633c.5 3.094 3.182 4.936 6.865 4.936zM54.553 5.567v7.392c0 2.301-1.078 3.503-3.057 3.503-1.855 0-2.531-1.023-2.531-2.864v-8.03h-3.583v8.823c0 3.427 1.88 5.55 4.911 5.55 1.904 0 3.257-.819 4.26-2.251v1.944h3.583V5.567h-3.583zM78.113 5.627L76.96 10.05l-1.227 5.601-1.203-5.6-1.153-4.425h-4.284L67.94 10.05l-1.203 5.652-1.228-5.652-1.152-4.424h-3.558l3.783 14.066h4.135l1.278-4.731 1.002-5.704h.476l1.002 5.704 1.278 4.731h4.134l3.784-14.066h-3.558zM89.78 5.32c-3.959 0-7.166 3.094-7.166 7.34 0 4.22 3.157 7.34 7.166 7.34 4.034 0 7.191-3.095 7.191-7.34 0-4.246-3.207-7.34-7.191-7.34zm0 3.478c2.004 0 3.558 1.56 3.558 3.862 0 2.327-1.553 3.862-3.558 3.862s-3.558-1.535-3.558-3.862c0-2.302 1.553-3.862 3.558-3.862zM107.373 5.32c-1.954 0-3.457.92-4.309 2.762V5.627h-3.583v14.066h3.583v-6.266c0-3.325 1.954-4.348 4.234-4.348.401 0 .602.026.877.051V5.37a6.685 6.685 0 00-.802-.05zM110.15 19.693h3.583V0h-3.583v19.693zM127.083 0v7.596c-.952-1.356-2.405-2.276-4.36-2.276-3.532 0-6.264 2.992-6.264 7.34 0 4.322 2.706 7.34 6.29 7.34 1.929 0 3.382-.87 4.334-2.2v1.893h3.583V0h-3.583zm-3.533 16.522c-1.979 0-3.482-1.535-3.482-3.862 0-2.302 1.478-3.862 3.482-3.862 2.005 0 3.533 1.56 3.533 3.862 0 2.327-1.528 3.862-3.533 3.862z',
            fill: '#005DE2'
          }),
          react.createElement('path', {
            d:
              'M5.479 4.364C5.809 1.98 8.259 0 11.054 0c2.794 0 5.245 1.98 5.575 4.364h3.233c1.24 0 2.246.976 2.246 2.181 0 .104-.008.207-.023.309L20.16 22.127C20.003 23.202 19.055 24 17.938 24H4.17c-1.118 0-2.065-.798-2.223-1.873L.023 6.854C-.153 5.661.7 4.556 1.928 4.386a2.31 2.31 0 01.317-.022H5.48zm8.861 0c-.34-1.159-1.717-2.182-3.286-2.182-1.57 0-2.946 1.023-3.287 2.181h6.574zM2.245 6.545h3.196v2.181h2.245V6.546h6.735v2.181h2.245V6.546h3.196l-1.924 15.272H4.17L2.245 6.546z',
            fill: '#F47E1F'
          }),
          react.createElement('path', {
            d:
              'M13.37 13.091v-2.182h2.245v2.182H13.37zm1.43 2.507l1.837 1.255c-1.253 1.73-3.293 2.783-5.512 2.783-2.22 0-4.26-1.052-5.513-2.783l1.837-1.255a4.522 4.522 0 003.676 1.857c1.48 0 2.839-.701 3.675-1.857zm-8.166-4.689v2.182H8.88v-2.182H6.634z',
            fill: '#F47E1F'
          })
        );
      }
      var Logo = Logo_SvgLogo;
      try {
        (Logo_SvgLogo.displayName = 'SvgLogo'),
          (Logo_SvgLogo.__docgenInfo = {
            description: '',
            displayName: 'SvgLogo',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/Logo.tsx#SvgLogo'] = {
              docgenInfo: Logo_SvgLogo.__docgenInfo,
              name: 'SvgLogo',
              path: 'src/icons/Logo.tsx#SvgLogo'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var toggleId = 'aside-aside-menu-toggle',
        navigation_ExternalLinkList = function ExternalLinkList(_ref) {
          var links = _ref.links;
          return react_default.a.createElement(
            NavigationList,
            null,
            links.map(function(link, iter) {
              return react_default.a.createElement(
                NavigationItem,
                { key: ''.concat(link.to + iter) },
                react_default.a.createElement(
                  NavigationExternalLink,
                  { href: link.to },
                  link.icon,
                  react_default.a.createElement(
                    NavigationLinkText,
                    { className: 'navigation-link-text' },
                    link.text
                  )
                )
              );
            })
          );
        },
        navigation_LinkList = function LinkList(_ref2) {
          var links = _ref2.links,
            isHasSupplierStatus = _ref2.isHasSupplierStatus,
            _Modal$useModal = Modal_default.a.useModal(),
            _Modal$useModal2 = Object(slicedToArray.a)(_Modal$useModal, 2),
            modal = _Modal$useModal2[0],
            contextHolder = _Modal$useModal2[1],
            location = Object(react_router.d)(),
            sortedLinks = Object(react.useMemo)(
              function() {
                return links
                  .filter(function(link) {
                    return !link.hidden;
                  })
                  .map(function(link) {
                    var _location$pathname, _location$pathname$sp, _link$to, _link$to$split;
                    return Object(objectSpread2.a)(
                      Object(objectSpread2.a)({}, link),
                      {},
                      {
                        to: link.to.replace(/\/:[0-9a-z_]+\??/gi, ''),
                        isActive:
                          (null === (_location$pathname = location.pathname) ||
                          void 0 === _location$pathname ||
                          null === (_location$pathname$sp = _location$pathname.split('/')) ||
                          void 0 === _location$pathname$sp
                            ? void 0
                            : _location$pathname$sp[1]) ===
                          (null === (_link$to = link.to) ||
                          void 0 === _link$to ||
                          null === (_link$to$split = _link$to.split('/')) ||
                          void 0 === _link$to$split
                            ? void 0
                            : _link$to$split[1])
                      }
                    );
                  });
              },
              [location.pathname, links]
            );
          return react_default.a.createElement(
            'nav',
            { style: { flex: 1 } },
            react_default.a.createElement(
              NavigationList,
              null,
              sortedLinks.map(function(link) {
                return react_default.a.createElement(
                  NavigationItem,
                  {
                    key: link.to,
                    isActive: link.isActive,
                    className: link.isActive ? 'navigation-item--active' : void 0
                  },
                  react_default.a.createElement(
                    NavigationLink,
                    {
                      className: 'navigation-item__link',
                      to: link.to,
                      disabled: !isHasSupplierStatus && link.supplierOnly,
                      onClick: function onClick(e) {
                        return (function onItemClick(isProtectLink, event) {
                          if (isProtectLink) {
                            var modalConfig = {
                              title: 'Необходимо заполнить данные поставщика',
                              content: react_default.a.createElement(
                                'p',
                                null,
                                'Раздел станет доступным после заполнения информации на странице «Данные компании».'
                              )
                            };
                            return event.preventDefault(), modal.error(modalConfig), !1;
                          }
                          return (
                            window.matchMedia('(max-width: '.concat(breakpoints.a, ')')).matches &&
                              (document.getElementById(toggleId).checked = !1),
                            !0
                          );
                        })(!(isHasSupplierStatus || !link.supplierOnly), e);
                      }
                    },
                    react_default.a.createElement(
                      NavigationLinkContent,
                      {
                        className: link.additionalWidget
                          ? 'navigation-link__content--with-widget'
                          : void 0
                      },
                      react_default.a.createElement(
                        NavigationLinkIcon,
                        { className: 'navigation-link-icon' },
                        link.icon
                      ),
                      react_default.a.createElement(
                        NavigationLinkText,
                        { className: 'navigation-link-text' },
                        link.text
                      )
                    ),
                    link.additionalWidget &&
                      react_default.a.createElement(
                        WidgetWrapper,
                        { className: 'navigation-link__widget' },
                        link.additionalWidget
                      )
                  )
                );
              })
            ),
            contextHolder
          );
        },
        navigation_Navigation = function Navigation(_ref3) {
          var links = _ref3.links,
            externalLinks = _ref3.externalLinks,
            isHasSupplierStatus = _ref3.isHasSupplierStatus;
          return react_default.a.createElement(
            NavigationWrapper,
            null,
            react_default.a.createElement(navigation_LinkList, {
              links: links,
              isHasSupplierStatus: isHasSupplierStatus
            }),
            externalLinks &&
              externalLinks[0] &&
              react_default.a.createElement(
                react_default.a.Fragment,
                null,
                react_default.a.createElement(NavigationDivider, null),
                react_default.a.createElement(navigation_ExternalLinkList, { links: externalLinks })
              )
          );
        },
        navigation_CloseIcon = function CloseIcon() {
          return react_default.a.createElement(
            'svg',
            {
              id: 'Capa_1',
              enableBackground: 'new 0 0 413.348 413.348',
              fill: '#ff7f03',
              strokeWidth: 4,
              height: '20',
              viewBox: '0 0 413.348 413.348',
              width: '20'
            },
            react_default.a.createElement('path', {
              d:
                'm413.348 24.354-24.354-24.354-182.32 182.32-182.32-182.32-24.354 24.354 182.32 182.32-182.32 182.32 24.354 24.354 182.32-182.32 182.32 182.32 24.354-24.354-182.32-182.32z'
            })
          );
        },
        navigation = function AsideMenu(_ref4) {
          var role = _ref4.role,
            isPartner = _ref4.isPartner,
            isHasSupplierStatus = _ref4.isHasSupplierStatus,
            externalLinks = _ref4.externalLinks,
            links = _ref4.links;
          return react_default.a.createElement(
            Aside,
            { className: 'aside-menu' },
            react_default.a.createElement(
              AsideHeadline,
              null,
              react_default.a.createElement(
                AsideLogo,
                null,
                react_default.a.createElement(
                  InlineFlexDiv,
                  { href: '/', className: 'aside-menu__logo' },
                  react_default.a.createElement(Logo, null),
                  react_default.a.createElement(
                    AsideHeadlineRole,
                    null,
                    (function generateTitleText(role, isPartner) {
                      return role
                        ? 'admin' === role
                          ? 'Админ'
                          : 'accountant' === role
                          ? 'Бухгалтер'
                          : 'supplierModerator' === role
                          ? 'Модератор'
                          : 'supplier' === role
                          ? 'Поставщики'
                          : 'user' === role && isPartner
                          ? 'Партнеры'
                          : 'user' === role
                          ? 'Пользователь'
                          : role
                        : 'Пользователь';
                    })(role, isPartner)
                  )
                ),
                react_default.a.createElement(
                  'a',
                  { href: '/', className: 'aside-menu__mini-logo' },
                  react_default.a.createElement(LogoMin, null)
                ),
                react_default.a.createElement(
                  AsideCloseIcon,
                  { htmlFor: toggleId, className: 'aside-menu__close' },
                  react_default.a.createElement(navigation_CloseIcon, null)
                )
              )
            ),
            react_default.a.createElement(navigation_Navigation, {
              isHasSupplierStatus: isHasSupplierStatus,
              links: links,
              externalLinks: externalLinks
            })
          );
        },
        components_layout = function DashboardLayout(_ref) {
          var children = _ref.children,
            isWithoutContentWrap = _ref.isWithoutContentWrap,
            headerWidgets = _ref.headerWidgets,
            links = _ref.links,
            isHasSupplierStatus = _ref.isHasSupplierStatus,
            isPartner = _ref.isPartner,
            externalLinks = _ref.externalLinks,
            role = _ref.role;
          return react_default.a.createElement(
            Container,
            null,
            react_default.a.createElement(CheckedInput, {
              className: 'navigation-toggle',
              type: 'checkbox',
              id: toggleId
            }),
            react_default.a.createElement(navigation, {
              role: role,
              isHasSupplierStatus: isHasSupplierStatus,
              externalLinks: externalLinks,
              links: links,
              isPartner: isPartner
            }),
            react_default.a.createElement(
              Workspace,
              { className: 'dashboard-workspace' },
              react_default.a.createElement(header, { htmlFor: toggleId, widgets: headerWidgets }),
              react_default.a.createElement(
                Content,
                null,
                isWithoutContentWrap
                  ? children
                  : react_default.a.createElement(ContentWrap, null, children)
              )
            )
          );
        };
      function ArrowLeft_SvgArrowLeft(props) {
        return react.createElement(
          'svg',
          Object.assign(
            { width: 19, height: 17, fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            props
          ),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d:
              'M9.18 1.163a1.094 1.094 0 010 1.549L3.39 8.5l5.79 5.788a1.095 1.095 0 11-1.548 1.549L1.069 9.274a1.094 1.094 0 010-1.548l6.563-6.563a1.094 1.094 0 011.549 0z',
            fill: '#A8CCFF'
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d:
              'M1.844 8.5a1.094 1.094 0 011.093-1.094h14.22a1.094 1.094 0 110 2.188H2.936A1.094 1.094 0 011.845 8.5z',
            fill: '#A8CCFF'
          })
        );
      }
      var ArrowLeft = ArrowLeft_SvgArrowLeft;
      try {
        (ArrowLeft_SvgArrowLeft.displayName = 'SvgArrowLeft'),
          (ArrowLeft_SvgArrowLeft.__docgenInfo = {
            description: '',
            displayName: 'SvgArrowLeft',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/ArrowLeft.tsx#SvgArrowLeft'] = {
              docgenInfo: ArrowLeft_SvgArrowLeft.__docgenInfo,
              name: 'SvgArrowLeft',
              path: 'src/icons/ArrowLeft.tsx#SvgArrowLeft'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var layout_header = header;
      function ArrowRight_SvgArrowRight(props) {
        return react.createElement(
          'svg',
          Object.assign(
            { width: 19, height: 17, fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            props
          ),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d:
              'M9.82 1.163a1.094 1.094 0 000 1.549L15.61 8.5l-5.79 5.788a1.095 1.095 0 101.548 1.549l6.563-6.563a1.092 1.092 0 000-1.548l-6.563-6.563a1.094 1.094 0 00-1.549 0z',
            fill: '#A8CCFF'
          }),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d:
              'M17.156 8.5a1.094 1.094 0 00-1.093-1.094H1.842a1.094 1.094 0 100 2.188h14.22A1.094 1.094 0 0017.155 8.5z',
            fill: '#A8CCFF'
          })
        );
      }
      try {
        (ArrowRight_SvgArrowRight.displayName = 'SvgArrowRight'),
          (ArrowRight_SvgArrowRight.__docgenInfo = {
            description: '',
            displayName: 'SvgArrowRight',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/ArrowRight.tsx#SvgArrowRight'] = {
              docgenInfo: ArrowRight_SvgArrowRight.__docgenInfo,
              name: 'SvgArrowRight',
              path: 'src/icons/ArrowRight.tsx#SvgArrowRight'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      function ChainSmall_SvgChainSmall(props) {
        return react.createElement(
          'svg',
          Object.assign(
            { width: 20, height: 20, fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            props
          ),
          react.createElement('path', {
            d:
              'M7.054 9.41c.944-.943 2.59-.943 3.535 0l.59.59 1.177-1.178-.589-.59a4.138 4.138 0 00-2.946-1.22c-1.113 0-2.16.434-2.945 1.22L4.107 10a4.173 4.173 0 000 5.893 4.153 4.153 0 002.946 1.218A4.152 4.152 0 0010 15.893l.589-.59-1.178-1.178-.59.59a2.506 2.506 0 01-3.535 0 2.504 2.504 0 010-3.537l1.768-1.767z',
            fill: '#FF7F03'
          }),
          react.createElement('path', {
            d:
              'M10 4.107l-.589.59 1.178 1.178.59-.59a2.506 2.506 0 013.535 0 2.504 2.504 0 010 3.537l-1.768 1.767c-.944.944-2.59.944-3.535 0l-.59-.59-1.177 1.18.589.588a4.138 4.138 0 002.946 1.221c1.113 0 2.16-.434 2.945-1.22L15.893 10a4.173 4.173 0 000-5.893 4.172 4.172 0 00-5.893 0z',
            fill: '#FF7F03'
          })
        );
      }
      try {
        (ChainSmall_SvgChainSmall.displayName = 'SvgChainSmall'),
          (ChainSmall_SvgChainSmall.__docgenInfo = {
            description: '',
            displayName: 'SvgChainSmall',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/ChainSmall.tsx#SvgChainSmall'] = {
              docgenInfo: ChainSmall_SvgChainSmall.__docgenInfo,
              name: 'SvgChainSmall',
              path: 'src/icons/ChainSmall.tsx#SvgChainSmall'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      function CloudSmall_SvgCloudSmall(props) {
        return react.createElement(
          'svg',
          Object.assign(
            { width: 20, height: 20, fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            props
          ),
          react.createElement('path', {
            d:
              'M10.123 8.965a.156.156 0 00-.246 0l-2.188 2.767a.156.156 0 00.123.252h1.444v4.735c0 .086.07.156.156.156h1.172c.086 0 .156-.07.156-.156v-4.733h1.447c.131 0 .204-.15.123-.252l-2.187-2.77z',
            fill: '#FF7F03'
          }),
          react.createElement('path', {
            d:
              'M15.848 7.162a6.252 6.252 0 00-5.844-4.037A6.25 6.25 0 004.16 7.16a3.908 3.908 0 00-2.91 3.777 3.905 3.905 0 003.904 3.907h.784c.085 0 .156-.07.156-.156v-1.172a.157.157 0 00-.157-.157h-.783a2.42 2.42 0 01-1.908-3.914 2.448 2.448 0 011.291-.853l.74-.194.272-.714a4.797 4.797 0 011.72-2.213 4.729 4.729 0 012.735-.864 4.73 4.73 0 012.734.864 4.798 4.798 0 011.721 2.213l.27.712.738.196a2.433 2.433 0 011.799 2.345c0 .647-.252 1.256-.71 1.713a2.404 2.404 0 01-1.71.71h-.784a.157.157 0 00-.156.156v1.171c0 .086.07.157.156.157h.784a3.907 3.907 0 001.002-7.682z',
            fill: '#FF7F03'
          })
        );
      }
      try {
        (CloudSmall_SvgCloudSmall.displayName = 'SvgCloudSmall'),
          (CloudSmall_SvgCloudSmall.__docgenInfo = {
            description: '',
            displayName: 'SvgCloudSmall',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/CloudSmall.tsx#SvgCloudSmall'] = {
              docgenInfo: CloudSmall_SvgCloudSmall.__docgenInfo,
              name: 'SvgCloudSmall',
              path: 'src/icons/CloudSmall.tsx#SvgCloudSmall'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      function Facebook_SvgFacebook(props) {
        return react.createElement(
          'svg',
          Object.assign(
            { width: 20, height: 20, fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            props
          ),
          react.createElement('rect', { width: 20, height: 20, rx: 2, fill: '#3B5998' }),
          react.createElement(
            'g',
            { clipPath: 'url(#facebook_svg__clip0)' },
            react.createElement('path', {
              d:
                'M11.832 5.576h1.14V3.588A14.738 14.738 0 0011.31 3.5c-1.645 0-2.772 1.035-2.772 2.937v1.75H6.722v2.222h1.816V16h2.226v-5.59h1.742l.277-2.222h-2.02v-1.53c0-.643.174-1.082 1.069-1.082z',
              fill: '#fff'
            })
          ),
          react.createElement(
            'defs',
            null,
            react.createElement(
              'clipPath',
              { id: 'facebook_svg__clip0' },
              react.createElement('path', {
                fill: '#fff',
                transform: 'translate(3.5 3.5)',
                d: 'M0 0h12.5v12.5H0z'
              })
            )
          )
        );
      }
      try {
        (Facebook_SvgFacebook.displayName = 'SvgFacebook'),
          (Facebook_SvgFacebook.__docgenInfo = {
            description: '',
            displayName: 'SvgFacebook',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/Facebook.tsx#SvgFacebook'] = {
              docgenInfo: Facebook_SvgFacebook.__docgenInfo,
              name: 'SvgFacebook',
              path: 'src/icons/Facebook.tsx#SvgFacebook'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      function Instagram_SvgInstagram(props) {
        return react.createElement(
          'svg',
          Object.assign(
            { width: 20, height: 20, fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            props
          ),
          react.createElement('rect', { width: 20, height: 20, rx: 2, fill: '#983B84' }),
          react.createElement(
            'g',
            { clipPath: 'url(#instagram_svg__clip0)' },
            react.createElement('path', {
              d:
                'M9.969 6.631c-1.836 0-3.317 1.503-3.317 3.366 0 1.864 1.48 3.367 3.317 3.367 1.835 0 3.316-1.503 3.316-3.367 0-1.863-1.48-3.366-3.316-3.366zm0 5.555c-1.187 0-2.157-.982-2.157-2.189S8.78 7.81 9.97 7.81c1.189 0 2.156.981 2.156 2.188 0 1.207-.97 2.189-2.156 2.189zm4.225-5.693a.778.778 0 01-.773.786.778.778 0 01-.774-.786.78.78 0 01.774-.785.78.78 0 01.773.785zm2.197.797c-.05-1.051-.286-1.983-1.045-2.75-.756-.768-1.674-1.009-2.71-1.061-1.068-.062-4.27-.062-5.337 0-1.034.05-1.952.29-2.71 1.057-.76.768-.994 1.7-1.045 2.751-.061 1.084-.061 4.333 0 5.417.049 1.052.285 1.984 1.044 2.751.76.768 1.674 1.008 2.71 1.06 1.069.062 4.27.062 5.338 0 1.036-.049 1.954-.29 2.71-1.06.756-.767.993-1.699 1.045-2.75.06-1.085.06-4.33 0-5.415zm-1.38 6.577a2.2 2.2 0 01-1.23 1.248c-.85.343-2.871.264-3.812.264-.941 0-2.965.076-3.813-.263a2.2 2.2 0 01-1.23-1.249c-.338-.864-.26-2.915-.26-3.87 0-.955-.075-3.008.26-3.87a2.2 2.2 0 011.23-1.248c.851-.343 2.872-.264 3.813-.264.94 0 2.964-.076 3.813.264a2.2 2.2 0 011.23 1.248c.337.864.259 2.915.259 3.87 0 .955.078 3.01-.26 3.87z',
              fill: '#fff'
            })
          ),
          react.createElement(
            'defs',
            null,
            react.createElement(
              'clipPath',
              { id: 'instagram_svg__clip0' },
              react.createElement('path', {
                fill: '#fff',
                transform: 'translate(3.5 2.5)',
                d: 'M0 0h12.931v15H0z'
              })
            )
          )
        );
      }
      try {
        (Instagram_SvgInstagram.displayName = 'SvgInstagram'),
          (Instagram_SvgInstagram.__docgenInfo = {
            description: '',
            displayName: 'SvgInstagram',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/Instagram.tsx#SvgInstagram'] = {
              docgenInfo: Instagram_SvgInstagram.__docgenInfo,
              name: 'SvgInstagram',
              path: 'src/icons/Instagram.tsx#SvgInstagram'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      function Ok_SvgOk(props) {
        return react.createElement(
          'svg',
          Object.assign(
            { width: 20, height: 20, fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            props
          ),
          react.createElement('rect', { width: 20, height: 20, rx: 2, fill: '#EB722E' }),
          react.createElement(
            'g',
            { clipPath: 'url(#ok_svg__clip0)', fill: '#fff' },
            react.createElement('path', {
              d:
                'M5.959 10.209c-.32.627.043.927.87 1.44.703.434 1.675.593 2.299.657l-2.46 2.365c-.715.686.437 1.786 1.152 1.115l1.936-1.867c.741.713 1.452 1.396 1.936 1.87.716.673 1.867-.418 1.16-1.116-.054-.05-2.624-2.516-2.467-2.365.632-.063 1.588-.232 2.283-.657.827-.515 1.19-.815.875-1.442-.19-.357-.703-.654-1.385-.14 0 0-.922.706-2.407.706-1.487 0-2.408-.705-2.408-.705-.682-.518-1.196-.218-1.384.139z'
            }),
            react.createElement('path', {
              d:
                'M9.75 9.824c1.811 0 3.29-1.416 3.29-3.158 0-1.75-1.479-3.166-3.29-3.166-1.812 0-3.292 1.416-3.292 3.166 0 1.742 1.48 3.158 3.292 3.158zm0-4.72c.89 0 1.616.698 1.616 1.562 0 .856-.726 1.554-1.616 1.554-.89 0-1.617-.698-1.617-1.554 0-.864.726-1.562 1.617-1.562z'
            })
          ),
          react.createElement(
            'defs',
            null,
            react.createElement(
              'clipPath',
              { id: 'ok_svg__clip0' },
              react.createElement('path', {
                fill: '#fff',
                transform: 'translate(3.5 3.5)',
                d: 'M0 0h12.5v12.5H0z'
              })
            )
          )
        );
      }
      try {
        (Ok_SvgOk.displayName = 'SvgOk'),
          (Ok_SvgOk.__docgenInfo = {
            description: '',
            displayName: 'SvgOk',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/Ok.tsx#SvgOk'] = {
              docgenInfo: Ok_SvgOk.__docgenInfo,
              name: 'SvgOk',
              path: 'src/icons/Ok.tsx#SvgOk'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      function Present_SvgPresent(props) {
        return react.createElement(
          'svg',
          Object.assign(
            { width: 46, height: 46, fill: 'none', xmlns: 'http://www.w3.org/2000/svg' },
            props
          ),
          react.createElement('path', {
            fillRule: 'evenodd',
            clipRule: 'evenodd',
            d:
              'M5.812 7.813c0 1.758.582 3.38 1.563 4.687H3.729a3.646 3.646 0 00-3.646 3.646v5.208c0 1.454.852 2.709 2.084 3.296v17.538a3.647 3.647 0 003.645 3.645h34.376a3.646 3.646 0 003.645-3.645V24.65a3.649 3.649 0 002.084-3.296v-5.208A3.646 3.646 0 0042.27 12.5h-3.646A7.813 7.813 0 0032.375 0C29.342 0 25.217 1.877 23 6.48 20.783 1.876 16.656 0 13.625 0a7.813 7.813 0 00-7.813 7.813zM21.375 12.5c-.598-7.277-5.354-9.375-7.75-9.375a4.688 4.688 0 000 9.375h7.75zM40.708 25v17.188a.521.521 0 01-.52.52H24.562V25h16.146zm-19.27 17.708V25H5.291v17.188c0 .287.233.52.52.52h15.625zM42.27 21.875a.521.521 0 00.52-.52v-5.21a.52.52 0 00-.52-.52H24.562v6.25h17.709zm-38.542 0h17.709v-6.25H3.729a.521.521 0 00-.52.52v5.21c0 .287.233.52.52.52zM37.063 7.812a4.688 4.688 0 01-4.688 4.688h-7.75c.598-7.277 5.354-9.375 7.75-9.375a4.687 4.687 0 014.688 4.688z',
            fill: '#67768B'
          })
        );
      }
      try {
        (Present_SvgPresent.displayName = 'SvgPresent'),
          (Present_SvgPresent.__docgenInfo = {
            description: '',
            displayName: 'SvgPresent',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/Present.tsx#SvgPresent'] = {
              docgenInfo: Present_SvgPresent.__docgenInfo,
              name: 'SvgPresent',
              path: 'src/icons/Present.tsx#SvgPresent'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      __webpack_require__(292);
      try {
        (SvgArrowLeft.displayName = 'SvgArrowLeft'),
          (SvgArrowLeft.__docgenInfo = {
            description: '',
            displayName: 'SvgArrowLeft',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgArrowLeft'] = {
              docgenInfo: SvgArrowLeft.__docgenInfo,
              name: 'SvgArrowLeft',
              path: 'src/icons/index.tsx#SvgArrowLeft'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      try {
        (SvgArrowRight.displayName = 'SvgArrowRight'),
          (SvgArrowRight.__docgenInfo = {
            description: '',
            displayName: 'SvgArrowRight',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgArrowRight'] = {
              docgenInfo: SvgArrowRight.__docgenInfo,
              name: 'SvgArrowRight',
              path: 'src/icons/index.tsx#SvgArrowRight'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      try {
        (SvgChainSmall.displayName = 'SvgChainSmall'),
          (SvgChainSmall.__docgenInfo = {
            description: '',
            displayName: 'SvgChainSmall',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgChainSmall'] = {
              docgenInfo: SvgChainSmall.__docgenInfo,
              name: 'SvgChainSmall',
              path: 'src/icons/index.tsx#SvgChainSmall'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      try {
        (SvgCloudSmall.displayName = 'SvgCloudSmall'),
          (SvgCloudSmall.__docgenInfo = {
            description: '',
            displayName: 'SvgCloudSmall',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgCloudSmall'] = {
              docgenInfo: SvgCloudSmall.__docgenInfo,
              name: 'SvgCloudSmall',
              path: 'src/icons/index.tsx#SvgCloudSmall'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      try {
        (SvgFacebook.displayName = 'SvgFacebook'),
          (SvgFacebook.__docgenInfo = {
            description: '',
            displayName: 'SvgFacebook',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgFacebook'] = {
              docgenInfo: SvgFacebook.__docgenInfo,
              name: 'SvgFacebook',
              path: 'src/icons/index.tsx#SvgFacebook'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      try {
        (SvgInstagram.displayName = 'SvgInstagram'),
          (SvgInstagram.__docgenInfo = {
            description: '',
            displayName: 'SvgInstagram',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgInstagram'] = {
              docgenInfo: SvgInstagram.__docgenInfo,
              name: 'SvgInstagram',
              path: 'src/icons/index.tsx#SvgInstagram'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      try {
        (SvgLogo.displayName = 'SvgLogo'),
          (SvgLogo.__docgenInfo = {
            description: '',
            displayName: 'SvgLogo',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgLogo'] = {
              docgenInfo: SvgLogo.__docgenInfo,
              name: 'SvgLogo',
              path: 'src/icons/index.tsx#SvgLogo'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      try {
        (SvgLogoMin.displayName = 'SvgLogoMin'),
          (SvgLogoMin.__docgenInfo = {
            description: '',
            displayName: 'SvgLogoMin',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgLogoMin'] = {
              docgenInfo: SvgLogoMin.__docgenInfo,
              name: 'SvgLogoMin',
              path: 'src/icons/index.tsx#SvgLogoMin'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      try {
        (SvgOk.displayName = 'SvgOk'),
          (SvgOk.__docgenInfo = {
            description: '',
            displayName: 'SvgOk',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgOk'] = {
              docgenInfo: SvgOk.__docgenInfo,
              name: 'SvgOk',
              path: 'src/icons/index.tsx#SvgOk'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      try {
        (SvgPresent.displayName = 'SvgPresent'),
          (SvgPresent.__docgenInfo = {
            description: '',
            displayName: 'SvgPresent',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgPresent'] = {
              docgenInfo: SvgPresent.__docgenInfo,
              name: 'SvgPresent',
              path: 'src/icons/index.tsx#SvgPresent'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      try {
        (SvgQuestionCircle.displayName = 'SvgQuestionCircle'),
          (SvgQuestionCircle.__docgenInfo = {
            description: '',
            displayName: 'SvgQuestionCircle',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/index.tsx#SvgQuestionCircle'] = {
              docgenInfo: SvgQuestionCircle.__docgenInfo,
              name: 'SvgQuestionCircle',
              path: 'src/icons/index.tsx#SvgQuestionCircle'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var linksShort = [
          { text: 'Заказы', to: '/', icon: react.createElement(ArrowLeft, null), supplierOnly: !0 },
          {
            text: 'Товары',
            to: '/one',
            icon: react.createElement(ArrowLeft, null),
            supplierOnly: !0
          },
          {
            text: 'Удаленные аккаунты',
            to: '/two',
            icon: react.createElement(ArrowLeft, null),
            additionalWidget: react.createElement(NavigationCountWidget, null, '0')
          },
          {
            text: 'Удаленные аккаунты',
            to: '/twod',
            icon: react.createElement(ArrowLeft, null),
            supplierOnly: !0
          },
          {
            text: 'Товары',
            to: '/onef',
            icon: react.createElement(ArrowLeft, null),
            supplierOnly: !0
          },
          {
            text: 'Удаленные аккаунты',
            to: '/twof',
            icon: react.createElement(ArrowLeft, null),
            supplierOnly: !0
          },
          { text: 'Настройки', to: '/three', icon: react.createElement(ArrowLeft, null) }
        ],
        layout_stories_externalLinks = [
          {
            text: 'Главная страница',
            to: 'https://suworld.ru',
            icon: react.createElement(LogoMin, null)
          },
          { text: 'Сообщения', to: '/four', icon: react.createElement(LogoMin, null) }
        ],
        layout_stories_headerWidgets =
          ((__webpack_exports__.default = {
            title: 'Components/Layout',
            component: components_layout,
            parameters: {
              docs: {
                page: function page() {
                  return react.createElement(
                    react.Fragment,
                    null,
                    react.createElement(blocks.h, null),
                    react.createElement(blocks.g, null),
                    react.createElement(blocks.b, null),
                    react.createElement(blocks.e, null),
                    react.createElement(blocks.a, { story: blocks.d }),
                    react.createElement(blocks.f, null)
                  );
                }
              }
            },
            argTypes: {
              links: { control: !1 },
              headerWidgets: { control: !1 },
              externalLinks: { control: !1 }
            }
          }),
          react.createElement(
            react.Fragment,
            null,
            react.createElement(
              'div',
              {
                style: {
                  width: '150px',
                  height: '50px',
                  backgroundColor: 'darkcyan',
                  borderRadius: '4px',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center',
                  marginRight: '10px'
                }
              },
              react.createElement(Logo, null)
            ),
            react.createElement(
              'div',
              {
                style: {
                  width: '40px',
                  height: '40px',
                  backgroundColor: 'greenyellow',
                  borderRadius: '50%',
                  display: 'flex',
                  alignItems: 'center',
                  justifyContent: 'center'
                }
              },
              react.createElement(LogoMin, null)
            )
          )),
        layout_stories_DashboardLayout = function Template(args) {
          return react.createElement(
            react_router_dom.a,
            null,
            react.createElement(
              components_layout,
              args,
              'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio?'
            )
          );
        }.bind({});
      (layout_stories_DashboardLayout.args = {
        role: 'admin',
        isHasSupplierStatus: !0,
        links: linksShort,
        externalLinks: layout_stories_externalLinks,
        isPartner: !1,
        headerWidgets: layout_stories_headerWidgets
      }),
        (layout_stories_DashboardLayout.argTypes = {
          links: { description: 'Список роутов навигации' },
          headerWidgets: { description: 'Компонент с виджетами в шапку' },
          isHasSupplierStatus: { description: 'Является ли пользователь поставщиком?' },
          isPartner: { description: 'Применяется ли данный компонент в кабинете партнера?' },
          externalLinks: { description: 'Список внешних ссылок системы Suworld' },
          role: {
            description: 'Роль',
            control: {
              type: 'select',
              options: ['admin', 'accountant', 'user', 'supplier', 'supplierModerator']
            }
          }
        });
      var layout_stories_Header = function HeaderTemplate(args) {
        return react.createElement(
          'div',
          {
            style: {
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              height: '100px',
              padding: '10px',
              backgroundColor: '#eff4ff'
            }
          },
          react.createElement(layout_header, args)
        );
      }.bind({});
      (layout_stories_Header.args = { widgets: layout_stories_headerWidgets }),
        (layout_stories_DashboardLayout.parameters = Object(objectSpread2.a)(
          {
            storySource: {
              source:
                '(args: any) => (\n  <BrowserRouter>\n    <Layout {...args}>\n      Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id\n      illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora\n      tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta\n      doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro,\n      quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque\n      ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe\n      sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur adipisicing elit.\n      Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores modi nam nesciunt\n      porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit amet, consectetur\n      adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum, libero maiores\n      modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem ipsum dolor sit\n      amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum incidunt laborum,\n      libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur. Culpa, odio? Lorem\n      ipsum dolor sit amet, consectetur adipisicing elit. Dicta doloremque ducimus et eum id illum\n      incidunt laborum, libero maiores modi nam nesciunt porro, quos saepe sed tempora tenetur.\n      Culpa, odio?\n    </Layout>\n  </BrowserRouter>\n)'
            }
          },
          layout_stories_DashboardLayout.parameters
        )),
        (layout_stories_Header.parameters = Object(objectSpread2.a)(
          {
            storySource: {
              source:
                "(args: any) => (\n  <div\n    style={{\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      height: '100px',\n      padding: '10px',\n      backgroundColor: '#eff4ff'\n    }}>\n    <InternalHeader {...args} />\n  </div>\n)"
            }
          },
          layout_stories_Header.parameters
        ));
    },
    1129: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'DefaultAdvBudgetFormBlock', function() {
          return DefaultAdvBudgetFormBlock;
        }),
        __webpack_require__.d(__webpack_exports__, 'DefaultAdvBlockWithProps', function() {
          return AdvBudgetBlock_stories_DefaultAdvBlockWithProps;
        }),
        __webpack_require__.d(
          __webpack_exports__,
          'DefaultAdvBlockWithPropsWithoutDefault',
          function() {
            return AdvBudgetBlock_stories_DefaultAdvBlockWithPropsWithoutDefault;
          }
        );
      var _templateObject,
        _templateObject2,
        _templateObject3,
        _templateObject4,
        _templateObject5,
        _templateObject6,
        objectSpread2 = __webpack_require__(38),
        lib_form = (__webpack_require__(160), __webpack_require__(67)),
        form_default = __webpack_require__.n(lib_form),
        slicedToArray = __webpack_require__(110),
        react = __webpack_require__(0),
        react_default = __webpack_require__.n(react),
        esm = __webpack_require__(24),
        blocks = __webpack_require__(10),
        col = (__webpack_require__(1075), __webpack_require__(599)),
        col_default = __webpack_require__.n(col),
        helper = function checkVisibilityBlock(object) {
          return (
            !!(!object.isEditing && object.defaultForItem && object.defaultForItem > 0) ||
            (!(
              object.isEditing &&
              !object.isProduct &&
              object.defaultForItem &&
              object.defaultForItem > 0 &&
              object.form.getFieldValue('isPriorityAdvBudget')
            ) &&
              (!!(
                object.isEditing &&
                !object.isProduct &&
                object.defaultForItem &&
                object.defaultForItem > 0
              ) ||
                (!(
                  object.isEditing &&
                  !object.form.getFieldValue('isPriorityAdvBudget') &&
                  !object.defaultForItem
                ) &&
                  !(!object.isEditing || object.form.getFieldValue('isPriorityAdvBudget')))))
          );
        },
        input_number = (__webpack_require__(564), __webpack_require__(309)),
        input_number_default = __webpack_require__.n(input_number),
        lib_button = (__webpack_require__(391), __webpack_require__(189)),
        button_default = __webpack_require__.n(lib_button),
        taggedTemplateLiteral = __webpack_require__(19),
        styled_components_browser_esm = __webpack_require__(20),
        Icon = __webpack_require__(1160),
        breakpoints = __webpack_require__(53),
        FormItemCheckbox = Object(styled_components_browser_esm.a)(form_default.a.Item)(
          _templateObject ||
            (_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  margin-left: 5px;\n\n  .ant-form-item-control {\n    justify-content: flex-end;\n  }\n'
            ]))
        ),
        ButtonWithMargin = Object(styled_components_browser_esm.a)(button_default.a)(
          _templateObject2 ||
            (_templateObject2 = Object(taggedTemplateLiteral.a)(['\n  margin-left: 15px;\n']))
        ),
        BlackShiftContainer = styled_components_browser_esm.a.div(
          _templateObject3 ||
            (_templateObject3 = Object(taggedTemplateLiteral.a)(['\n  color: black;\n']))
        ),
        ColorizedIcon = Object(styled_components_browser_esm.a)(Icon.a)(
          _templateObject4 ||
            (_templateObject4 = Object(taggedTemplateLiteral.a)([
              '\n  color: #1890ff;\n  margin-left: 5px;\n'
            ]))
        ),
        BudgetContainer = styled_components_browser_esm.a.div(
          _templateObject5 ||
            (_templateObject5 = Object(taggedTemplateLiteral.a)([
              '\n  display: inline-flex;\n  padding: 10px 10px 10px 0;\n'
            ]))
        ),
        budgetBlock_SmallFormItemInput = Object(styled_components_browser_esm.a)(
          form_default.a.Item
        )(
          _templateObject6 ||
            (_templateObject6 = Object(taggedTemplateLiteral.a)([
              '\n  width: 152px;\n  flex-direction: column;\n  margin-right: 10px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  .ant-form-item-label,\n  .ant-form-item-label > label {\n    text-align: left !important;\n    max-width: 110%;\n  }\n\n  .ant-input-number {\n    width: 152px;\n    min-height: 28px;\n    margin-right: 5px;\n  }\n\n  input {\n    ::-webkit-input-placeholder {\n      text-align: right;\n    }\n\n    input:-moz-placeholder {\n      text-align: right;\n    }\n  }\n\n  .supplier-service-price__vendor-code--placeholder-right {\n    &::-webkit-input-placeholder {\n      text-align: left;\n    }\n\n    &:-moz-placeholder {\n      text-align: left;\n    }\n  }\n\n  @media screen and (max-width: ',
              ') {\n    width: 100%;\n    margin-right: 0;\n    margin-bottom: 10px;\n    .ant-input-number {\n      width: 100%;\n    }\n\n    .ant-form-item-label {\n      padding: 0;\n    }\n\n    label {\n      font-size: 12px;\n      font-weight: bold;\n    }\n  }\n'
            ])),
          breakpoints.c
        );
      try {
        (SmallFormItemInput.displayName = 'SmallFormItemInput'),
          (SmallFormItemInput.__docgenInfo = {
            description: '',
            displayName: 'SmallFormItemInput',
            props: {
              label: {
                defaultValue: null,
                description: '',
                name: 'label',
                required: !1,
                type: { name: 'ReactNode' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              hidden: {
                defaultValue: null,
                description: '',
                name: 'hidden',
                required: !1,
                type: { name: 'boolean' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: '() => void' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'NamePath' }
              },
              prefixCls: {
                defaultValue: null,
                description: '',
                name: 'prefixCls',
                required: !1,
                type: { name: 'string' }
              },
              rules: {
                defaultValue: null,
                description: '',
                name: 'rules',
                required: !1,
                type: { name: 'Rule[]' }
              },
              required: {
                defaultValue: null,
                description: '',
                name: 'required',
                required: !1,
                type: { name: 'boolean' }
              },
              dependencies: {
                defaultValue: null,
                description:
                  'Set up `dependencies` field.\nWhen dependencies field update and current field is touched,\nwill trigger validate rules and render.',
                name: 'dependencies',
                required: !1,
                type: { name: 'NamePath[]' }
              },
              getValueFromEvent: {
                defaultValue: null,
                description: '',
                name: 'getValueFromEvent',
                required: !1,
                type: { name: '(...args: EventArgs) => any' }
              },
              normalize: {
                defaultValue: null,
                description: '',
                name: 'normalize',
                required: !1,
                type: { name: '(value: any, prevValue: any, allValues: Store) => any' }
              },
              shouldUpdate: {
                defaultValue: null,
                description: '',
                name: 'shouldUpdate',
                required: !1,
                type: { name: 'ShouldUpdate<unknown>' }
              },
              trigger: {
                defaultValue: null,
                description: '',
                name: 'trigger',
                required: !1,
                type: { name: 'string' }
              },
              validateTrigger: {
                defaultValue: null,
                description: '',
                name: 'validateTrigger',
                required: !1,
                type: { name: 'string | false | string[]' }
              },
              validateFirst: {
                defaultValue: null,
                description: '',
                name: 'validateFirst',
                required: !1,
                type: { name: 'boolean | "parallel"' }
              },
              valuePropName: {
                defaultValue: null,
                description: '',
                name: 'valuePropName',
                required: !1,
                type: { name: 'string' }
              },
              getValueProps: {
                defaultValue: null,
                description: '',
                name: 'getValueProps',
                required: !1,
                type: { name: '(value: any) => object' }
              },
              messageVariables: {
                defaultValue: null,
                description: '',
                name: 'messageVariables',
                required: !1,
                type: { name: 'Record<string, string>' }
              },
              initialValue: {
                defaultValue: null,
                description: '',
                name: 'initialValue',
                required: !1,
                type: { name: 'any' }
              },
              preserve: {
                defaultValue: null,
                description: '',
                name: 'preserve',
                required: !1,
                type: { name: 'boolean' }
              },
              isListField: {
                defaultValue: null,
                description:
                  '@private Passed by Form.List props. Do not use since it will break by path check.',
                name: 'isListField',
                required: !1,
                type: { name: 'boolean' }
              },
              isList: {
                defaultValue: null,
                description:
                  '@private Passed by Form.List props. Do not use since it will break by path check.',
                name: 'isList',
                required: !1,
                type: { name: 'boolean' }
              },
              noStyle: {
                defaultValue: null,
                description: '',
                name: 'noStyle',
                required: !1,
                type: { name: 'boolean' }
              },
              hasFeedback: {
                defaultValue: null,
                description: '',
                name: 'hasFeedback',
                required: !1,
                type: { name: 'boolean' }
              },
              validateStatus: {
                defaultValue: null,
                description: '',
                name: 'validateStatus',
                required: !1,
                type: { name: '"" | "success" | "warning" | "error" | "validating"' }
              },
              tooltip: {
                defaultValue: null,
                description: '',
                name: 'tooltip',
                required: !1,
                type: { name: 'LabelTooltipType' }
              },
              fieldKey: {
                defaultValue: null,
                description: 'Auto passed by List render props. User should not use this.',
                name: 'fieldKey',
                required: !1,
                type: { name: 'Key | Key[]' }
              },
              colon: {
                defaultValue: null,
                description: '',
                name: 'colon',
                required: !1,
                type: { name: 'boolean' }
              },
              htmlFor: {
                defaultValue: null,
                description: '',
                name: 'htmlFor',
                required: !1,
                type: { name: 'string' }
              },
              labelAlign: {
                defaultValue: null,
                description: '',
                name: 'labelAlign',
                required: !1,
                type: { name: 'FormLabelAlign' }
              },
              labelCol: {
                defaultValue: null,
                description: '',
                name: 'labelCol',
                required: !1,
                type: { name: 'ColProps' }
              },
              requiredMark: {
                defaultValue: null,
                description: '',
                name: 'requiredMark',
                required: !1,
                type: { name: 'RequiredMark' }
              },
              wrapperCol: {
                defaultValue: null,
                description: '',
                name: 'wrapperCol',
                required: !1,
                type: { name: 'ColProps' }
              },
              help: {
                defaultValue: null,
                description: '',
                name: 'help',
                required: !1,
                type: { name: 'ReactNode' }
              },
              extra: {
                defaultValue: null,
                description: '',
                name: 'extra',
                required: !1,
                type: { name: 'ReactNode' }
              },
              status: {
                defaultValue: null,
                description: '',
                name: 'status',
                required: !1,
                type: { name: '"" | "success" | "warning" | "error" | "validating"' }
              },
              theme: {
                defaultValue: null,
                description: '',
                name: 'theme',
                required: !1,
                type: { name: 'any' }
              },
              as: {
                defaultValue: null,
                description: '',
                name: 'as',
                required: !1,
                type: { name: 'never' }
              },
              forwardedAs: {
                defaultValue: null,
                description: '',
                name: 'forwardedAs',
                required: !1,
                type: { name: 'never' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES[
              'src/components/budgetBlock/SmallFormItemInput.tsx#SmallFormItemInput'
            ] = {
              docgenInfo: SmallFormItemInput.__docgenInfo,
              name: 'SmallFormItemInput',
              path: 'src/components/budgetBlock/SmallFormItemInput.tsx#SmallFormItemInput'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      __webpack_require__(204);
      var tooltip = __webpack_require__(106),
        tooltip_default = __webpack_require__.n(tooltip),
        QuestionCircleOutlined = __webpack_require__(1162),
        LabelProduct_LabelProduct = function LabelProduct(_ref) {
          var min = _ref.min;
          return react_default.a.createElement(
            react_default.a.Fragment,
            null,
            react_default.a.createElement(
              'span',
              null,
              'Рекламный бюджет от `$',
              min,
              '`% до 90%  ',
              react_default.a.createElement(
                tooltip_default.a,
                {
                  title:
                    'Рекомендуем: устанавливать рекламный бюджет от 10% и более. Чем больше рекламный бюджет, \n                    тем больше вовлеченность клиента в программу лояльности. Помните, что рекламный бюджет будет постепенно возвращаться Вам по реферальной программе, \n                    при любых покупках Ваших клиентов. Таким образом, Вы стимулируете клиента к активности, \n                    и получаете компенсацию рекламных затрат. Это выгодно всем!'
                },
                react_default.a.createElement(QuestionCircleOutlined.a, null)
              ),
              ' '
            )
          );
        },
        budgetBlock_LabelProduct = LabelProduct_LabelProduct;
      try {
        (LabelProduct_LabelProduct.displayName = 'LabelProduct'),
          (LabelProduct_LabelProduct.__docgenInfo = {
            description: '',
            displayName: 'LabelProduct',
            props: {
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !0,
                type: { name: 'number' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/components/budgetBlock/LabelProduct.tsx#LabelProduct'] = {
              docgenInfo: LabelProduct_LabelProduct.__docgenInfo,
              name: 'LabelProduct',
              path: 'src/components/budgetBlock/LabelProduct.tsx#LabelProduct'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var LabelService_LabelService = function LabelService() {
          return react_default.a.createElement(
            react_default.a.Fragment,
            null,
            react_default.a.createElement(
              'span',
              null,
              'Рекламный бюджет ',
              react_default.a.createElement(
                tooltip_default.a,
                {
                  title:
                    'Рекомендуем: устанавливать рекламный бюджет от 10% и более. Чем больше рекламный бюджет, \n                    тем больше вовлеченность клиента в программу лояльности. Помните, что рекламный бюджет будет постепенно возвращаться Вам по реферальной программе, при любых покупках Ваших клиентов. \n                    Таким образом, Вы стимулируете клиента к активности, \n                    и получаете компенсацию рекламных затрат. Это выгодно всем!'
                },
                react_default.a.createElement(QuestionCircleOutlined.a, null)
              )
            )
          );
        },
        budgetBlock_LabelService = LabelService_LabelService;
      try {
        (LabelService_LabelService.displayName = 'LabelService'),
          (LabelService_LabelService.__docgenInfo = {
            description: '',
            displayName: 'LabelService',
            props: {}
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/components/budgetBlock/LabelService.tsx#LabelService'] = {
              docgenInfo: LabelService_LabelService.__docgenInfo,
              name: 'LabelService',
              path: 'src/components/budgetBlock/LabelService.tsx#LabelService'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      __webpack_require__(565);
      var lib_checkbox = __webpack_require__(308),
        checkbox_default = __webpack_require__.n(lib_checkbox),
        ProductPriorityBlock_ProductPriorityBlock = function ProductPriorityBlock() {
          return react_default.a.createElement(
            form_default.a.Item,
            {
              label: react_default.a.createElement(
                react_default.a.Fragment,
                null,
                'Приоритет рекламного бюджета ',
                react_default.a.createElement(
                  tooltip_default.a,
                  {
                    title:
                      'Если установлен приоритет по РБ у товара,\n              расчеты будут вестись по значению РБ в товаре,\n              вне зависимости от установки общего флага РБ для всех товаров в настройках магазина'
                  },
                  react_default.a.createElement(QuestionCircleOutlined.a, null)
                )
              ),
              valuePropName: 'checked',
              name: 'isPriorityAdvBudget'
            },
            react_default.a.createElement(checkbox_default.a, null)
          );
        },
        budgetBlock_ProductPriorityBlock = ProductPriorityBlock_ProductPriorityBlock;
      try {
        (ProductPriorityBlock_ProductPriorityBlock.displayName = 'ProductPriorityBlock'),
          (ProductPriorityBlock_ProductPriorityBlock.__docgenInfo = {
            description: '',
            displayName: 'ProductPriorityBlock',
            props: {}
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES[
              'src/components/budgetBlock/ProductPriorityBlock.tsx#ProductPriorityBlock'
            ] = {
              docgenInfo: ProductPriorityBlock_ProductPriorityBlock.__docgenInfo,
              name: 'ProductPriorityBlock',
              path: 'src/components/budgetBlock/ProductPriorityBlock.tsx#ProductPriorityBlock'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var InfoCircleOutlined = __webpack_require__(1163),
        ServicePriorityBlock_ServicePriorityBlock = function ServicePriorityBlock() {
          return react_default.a.createElement(
            FormItemCheckbox,
            { name: 'isPriorityAdvBudget', valuePropName: 'checked', initialValue: !1 },
            react_default.a.createElement(
              checkbox_default.a,
              null,
              'Приоритет рекламного бюджета',
              react_default.a.createElement(
                tooltip_default.a,
                {
                  color: 'white',
                  title: react_default.a.createElement(
                    BlackShiftContainer,
                    null,
                    'Если выбрано, то вы можете установить отдельное значение рекламного бюджета'
                  )
                },
                react_default.a.createElement(ColorizedIcon, { component: InfoCircleOutlined.a })
              )
            )
          );
        },
        budgetBlock_ServicePriorityBlock = ServicePriorityBlock_ServicePriorityBlock;
      try {
        (ServicePriorityBlock_ServicePriorityBlock.displayName = 'ServicePriorityBlock'),
          (ServicePriorityBlock_ServicePriorityBlock.__docgenInfo = {
            description: '',
            displayName: 'ServicePriorityBlock',
            props: {}
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES[
              'src/components/budgetBlock/ServicePriorityBlock.tsx#ServicePriorityBlock'
            ] = {
              docgenInfo: ServicePriorityBlock_ServicePriorityBlock.__docgenInfo,
              name: 'ServicePriorityBlock',
              path: 'src/components/budgetBlock/ServicePriorityBlock.tsx#ServicePriorityBlock'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var BudgetWithoutInitials_BudgetWithoutInitials = function BudgetWithoutInitials(_ref) {
          var isProduct = _ref.isProduct,
            rules = _ref.rules,
            name = _ref.name,
            handleChangeAdvBudget = _ref.handleChangeAdvBudget,
            min = _ref.min;
          return react_default.a.createElement(
            'div',
            null,
            react_default.a.createElement(
              budgetBlock_SmallFormItemInput,
              {
                colon: !1,
                label: isProduct
                  ? react_default.a.createElement(budgetBlock_LabelProduct, { min: min || 1 })
                  : react_default.a.createElement(budgetBlock_LabelService, null),
                name: name,
                rules: rules
              },
              react_default.a.createElement(input_number_default.a, {
                size: isProduct ? 'small' : 'middle',
                precision: 1,
                min: min,
                max: 90,
                formatter: function formatter(value) {
                  return ''.concat(value, '%');
                },
                parser: function parser(value) {
                  return value.replace('%', '');
                },
                placeholder: '%',
                onChange: function onChange(value) {
                  return handleChangeAdvBudget(value);
                }
              })
            ),
            isProduct
              ? react_default.a.createElement(budgetBlock_ProductPriorityBlock, null)
              : react_default.a.createElement(budgetBlock_ServicePriorityBlock, null)
          );
        },
        budgetBlock_BudgetWithoutInitials = BudgetWithoutInitials_BudgetWithoutInitials;
      try {
        (BudgetWithoutInitials_BudgetWithoutInitials.displayName = 'BudgetWithoutInitials'),
          (BudgetWithoutInitials_BudgetWithoutInitials.__docgenInfo = {
            description: '',
            displayName: 'BudgetWithoutInitials',
            props: {
              isProduct: {
                defaultValue: null,
                description: '',
                name: 'isProduct',
                required: !1,
                type: { name: 'boolean' }
              },
              rules: {
                defaultValue: null,
                description: '',
                name: 'rules',
                required: !0,
                type: { name: 'any[]' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !0,
                type: { name: 'string' }
              },
              handleChangeAdvBudget: {
                defaultValue: null,
                description: '',
                name: 'handleChangeAdvBudget',
                required: !0,
                type: { name: '(value?: string | number) => void' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'number' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES[
              'src/components/budgetBlock/BudgetWithoutInitials.tsx#BudgetWithoutInitials'
            ] = {
              docgenInfo: BudgetWithoutInitials_BudgetWithoutInitials.__docgenInfo,
              name: 'BudgetWithoutInitials',
              path: 'src/components/budgetBlock/BudgetWithoutInitials.tsx#BudgetWithoutInitials'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var BudgetWithInitials_BudgetWithInitials = function BudgetWithInitials(_ref) {
          var defaultForItem = _ref.defaultForItem,
            handleChangeGeneralValue = _ref.handleChangeGeneralValue,
            form = _ref.form,
            name = _ref.name,
            inputAdvBudgetValue = Number(form.getFieldValue(name)) / 100;
          return react_default.a.createElement(
            'div',
            null,
            react_default.a.createElement(
              'div',
              null,
              'Для всех товаров установлен общий рекламный бюджет'
            ),
            react_default.a.createElement(
              BudgetContainer,
              null,
              react_default.a.createElement(
                'p',
                null,
                Math.round(1e3 * Number(defaultForItem)) / 10,
                '%'
              ),
              react_default.a.createElement(
                ButtonWithMargin,
                {
                  onClick: function onClick() {
                    return handleChangeGeneralValue(inputAdvBudgetValue);
                  },
                  size: 'small',
                  type: 'primary',
                  ghost: !0
                },
                'Изменить'
              )
            )
          );
        },
        budgetBlock_BudgetWithInitials = BudgetWithInitials_BudgetWithInitials;
      try {
        (BudgetWithInitials_BudgetWithInitials.displayName = 'BudgetWithInitials'),
          (BudgetWithInitials_BudgetWithInitials.__docgenInfo = {
            description: '',
            displayName: 'BudgetWithInitials',
            props: {
              defaultForItem: {
                defaultValue: null,
                description: '',
                name: 'defaultForItem',
                required: !1,
                type: { name: 'number' }
              },
              handleChangeGeneralValue: {
                defaultValue: null,
                description: '',
                name: 'handleChangeGeneralValue',
                required: !0,
                type: { name: '(inputAdvBudgetValue: number) => void' }
              },
              form: {
                defaultValue: null,
                description: '',
                name: 'form',
                required: !0,
                type: { name: 'FormInstance<any>' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !0,
                type: { name: 'string' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES[
              'src/components/budgetBlock/BudgetWithInitials.tsx#BudgetWithInitials'
            ] = {
              docgenInfo: BudgetWithInitials_BudgetWithInitials.__docgenInfo,
              name: 'BudgetWithInitials',
              path: 'src/components/budgetBlock/BudgetWithInitials.tsx#BudgetWithInitials'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var AdvBudgetFormBlock_AdvBudgetFormBlock = function AdvBudgetFormBlock(_ref) {
        var initialAdv = _ref.initialAdv,
          isProduct = _ref.isProduct,
          name = _ref.name,
          form = _ref.form,
          isEditing = _ref.isEditing,
          defaultForItem = _ref.defaultForItem,
          min = _ref.min,
          isVisible = helper({
            initialAdv: initialAdv,
            isProduct: isProduct,
            name: name,
            form: form,
            isEditing: isEditing,
            defaultForItem: defaultForItem,
            min: min
          }),
          _useState = Object(react.useState)(isVisible),
          _useState2 = Object(slicedToArray.a)(_useState, 2),
          isBudgetVisible = _useState2[0],
          setBudgetVisible = _useState2[1];
        return react_default.a.createElement(
          col_default.a,
          null,
          isBudgetVisible
            ? react_default.a.createElement(budgetBlock_BudgetWithInitials, {
                form: form,
                defaultForItem: defaultForItem,
                handleChangeGeneralValue: function handleChangeGeneralValue(inputAdvBudgetValue) {
                  setBudgetVisible(!1),
                    inputAdvBudgetValue
                      ? form.setFieldsValue({ advBudgetPercent: 100 * Number(inputAdvBudgetValue) })
                      : form.setFieldsValue({ advBudgetPercent: 100 * Number(defaultForItem) });
                },
                name: name
              })
            : react_default.a.createElement('div', null),
          isBudgetVisible
            ? null
            : react_default.a.createElement(budgetBlock_BudgetWithoutInitials, {
                isProduct: isProduct,
                rules: (function createRules() {
                  return (!isEditing && !defaultForItem && !initialAdv) ||
                    (isEditing && !defaultForItem)
                    ? [{ required: !0, message: 'Необходимо указать рекламный бюджет' }]
                    : [];
                })(),
                name: name,
                handleChangeAdvBudget: function handleChangeAdvBudget(value) {
                  (!value && defaultForItem) || (0 === value && defaultForItem)
                    ? (form.setFieldsValue({ isPriorityAdvBudget: !1 }),
                      form.setFieldsValue({ advBudgetPercent: 100 * Number(defaultForItem) }))
                    : value || defaultForItem
                    ? form.setFieldsValue({ isPriorityAdvBudget: !0 })
                    : form.setFieldsValue({ advBudgetPercent: min });
                },
                min: min
              })
        );
      };
      try {
        (AdvBudgetFormBlock_AdvBudgetFormBlock.displayName = 'AdvBudgetFormBlock'),
          (AdvBudgetFormBlock_AdvBudgetFormBlock.__docgenInfo = {
            description: '',
            displayName: 'AdvBudgetFormBlock',
            props: {
              initialAdv: {
                defaultValue: null,
                description: '',
                name: 'initialAdv',
                required: !1,
                type: { name: 'number' }
              },
              isProduct: {
                defaultValue: null,
                description: '',
                name: 'isProduct',
                required: !1,
                type: { name: 'boolean' }
              },
              isEditing: {
                defaultValue: null,
                description: '',
                name: 'isEditing',
                required: !1,
                type: { name: 'boolean' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !0,
                type: { name: 'string' }
              },
              form: {
                defaultValue: null,
                description: '',
                name: 'form',
                required: !0,
                type: { name: 'FormInstance<any>' }
              },
              defaultForItem: {
                defaultValue: null,
                description: '',
                name: 'defaultForItem',
                required: !1,
                type: { name: 'number' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'number' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES[
              'src/components/budgetBlock/AdvBudgetFormBlock.tsx#AdvBudgetFormBlock'
            ] = {
              docgenInfo: AdvBudgetFormBlock_AdvBudgetFormBlock.__docgenInfo,
              name: 'AdvBudgetFormBlock',
              path: 'src/components/budgetBlock/AdvBudgetFormBlock.tsx#AdvBudgetFormBlock'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var budgetBlock = AdvBudgetFormBlock_AdvBudgetFormBlock,
        DefaultAdvBudgetFormBlock =
          ((__webpack_exports__.default = {
            title: 'Components/Блок управляющий рекламным бюджетом',
            component: budgetBlock,
            decorators: [
              function(Story) {
                return react.createElement(
                  'div',
                  { style: { margin: '3em' } },
                  react.createElement(Story, null)
                );
              },
              esm.e
            ],
            argTypes: { onClick: { action: 'clicked' } },
            parameters: {
              docs: {
                page: function page() {
                  return react.createElement(
                    react.Fragment,
                    null,
                    react.createElement(blocks.h, null),
                    react.createElement(
                      blocks.g,
                      null,
                      react.createElement(
                        'a',
                        {
                          href:
                            'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/SuWorld?node-id=429%3A210'
                        },
                        'Ссылка на макет (смотри описание услуги)'
                      )
                    ),
                    react.createElement(
                      blocks.b,
                      null,
                      'Блок управления рекламным бюджетом при условии наличия предустановленной цифры рекламного бюджета или отсутствия ее. При наличии рекламного бюджета в настройках магазина показывается эта цифра в процентах и кнопка изменить. При изменении проставляется чекбокс приоритета рекламного бюджета. При отсутствии процента в настройках предлагается форма для самостоятельного заполнения и чекбокс приоритета.'
                    ),
                    react.createElement(blocks.e, null),
                    react.createElement(
                      blocks.b,
                      null,
                      'Использованы элементы из Antd и кастомная логика, данный блок используется в админпанели и дашборде поставщика'
                    ),
                    react.createElement(blocks.a, { story: blocks.d }),
                    react.createElement(blocks.f, null)
                  );
                }
              },
              design: {
                type: 'figma',
                url: 'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/SuWorld?node-id=429%3A210'
              }
            }
          }),
          function Template(args) {
            var _Form$useForm = form_default.a.useForm(),
              form = Object(slicedToArray.a)(_Form$useForm, 1)[0];
            return react.createElement(
              form_default.a,
              { form: form },
              react.createElement(budgetBlock, Object.assign({ form: form }, args))
            );
          }.bind({})),
        AdvBudgetBlock_stories_DefaultAdvBlockWithProps = function DefaultAdvBlockWithProps() {
          var _Form$useForm3 = form_default.a.useForm(),
            form = Object(slicedToArray.a)(_Form$useForm3, 1)[0];
          return react.createElement(
            'div',
            { style: { display: 'flex', width: '500px' } },
            react.createElement(
              form_default.a,
              { form: form },
              react.createElement(DefaultAdvBudgetFormBlock, {
                name: 'advBudgetPercent',
                form: form,
                isEditing: Object(esm.a)('редактирование', !1),
                min: Object(esm.b)('минимальное значение', 1),
                isProduct: Object(esm.a)('продукт или услуга', !1),
                defaultForItem: Object(esm.b)('первоначальное значение РБ, от 0 до 1', 0.05),
                initialAdv: Object(esm.b)('первоначальное значение РБ, от 0 до 1', 0.05)
              })
            )
          );
        },
        AdvBudgetBlock_stories_DefaultAdvBlockWithPropsWithoutDefault = function DefaultAdvBlockWithPropsWithoutDefault() {
          var _Form$useForm5 = form_default.a.useForm(),
            form = Object(slicedToArray.a)(_Form$useForm5, 1)[0];
          return react.createElement(
            'div',
            { style: { display: 'flex', width: '500px' } },
            react.createElement(
              form_default.a,
              { form: form },
              react.createElement(DefaultAdvBudgetFormBlock, {
                form: form,
                name: 'advBudgetPercent',
                defaultForItem: Object(esm.b)('первоначальное значение РБ, от 0 до 1', 0),
                initialAdv: Object(esm.b)('первоначальное значение РБ, от 0 до 1', 0.05),
                isEditing: Object(esm.a)('редактирование', !1),
                isProduct: Object(esm.a)('продукт или услуга', !1),
                min: Object(esm.b)('минимальное значение', 1)
              })
            )
          );
        };
      (DefaultAdvBudgetFormBlock.parameters = Object(objectSpread2.a)(
        {
          storySource: {
            source:
              '(args) => {\n  const [form] = Form.useForm();\n  return (\n    <Form form={form}>\n      <AdvBudgetFormBlock form={form} {...args} />\n    </Form>\n  );\n}'
          }
        },
        DefaultAdvBudgetFormBlock.parameters
      )),
        (AdvBudgetBlock_stories_DefaultAdvBlockWithProps.parameters = Object(objectSpread2.a)(
          {
            storySource: {
              source:
                "() => {\n  const [form] = Form.useForm();\n  return (\n    <div style={{ display: 'flex', width: '500px' }}>\n      <Form form={form}>\n        <DefaultAdvBudgetFormBlock\n          name=\"advBudgetPercent\"\n          form={form}\n          isEditing={boolean('редактирование', false)}\n          min={number('минимальное значение', 1)}\n          isProduct={boolean('продукт или услуга', false)}\n          defaultForItem={number('первоначальное значение РБ, от 0 до 1', 0.05)}\n          initialAdv={number('первоначальное значение РБ, от 0 до 1', 0.05)}\n        />\n      </Form>\n    </div>\n  );\n}"
            }
          },
          AdvBudgetBlock_stories_DefaultAdvBlockWithProps.parameters
        )),
        (AdvBudgetBlock_stories_DefaultAdvBlockWithPropsWithoutDefault.parameters = Object(
          objectSpread2.a
        )(
          {
            storySource: {
              source:
                "() => {\n  const [form] = Form.useForm();\n  return (\n    <div style={{ display: 'flex', width: '500px' }}>\n      <Form form={form}>\n        <DefaultAdvBudgetFormBlock\n          form={form}\n          name=\"advBudgetPercent\"\n          defaultForItem={number('первоначальное значение РБ, от 0 до 1', 0)}\n          initialAdv={number('первоначальное значение РБ, от 0 до 1', 0.05)}\n          isEditing={boolean('редактирование', false)}\n          isProduct={boolean('продукт или услуга', false)}\n          min={number('минимальное значение', 1)}\n        />\n      </Form>\n    </div>\n  );\n}"
            }
          },
          AdvBudgetBlock_stories_DefaultAdvBlockWithPropsWithoutDefault.parameters
        ));
    },
    1133: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(
          __webpack_exports__,
          'DefaultAutoCompleteCategoriesProducts',
          function() {
            return AutoComplete_stories_DefaultAutoCompleteCategoriesProducts;
          }
        ),
        __webpack_require__.d(
          __webpack_exports__,
          'DefaultAutoCompleteCategoriesServices',
          function() {
            return AutoComplete_stories_DefaultAutoCompleteCategoriesServices;
          }
        );
      var _templateObject,
        objectSpread2 = __webpack_require__(38),
        slicedToArray = __webpack_require__(110),
        react = __webpack_require__(0),
        react_default = __webpack_require__.n(react),
        esm = __webpack_require__(24),
        blocks = __webpack_require__(10),
        helper_createObjectWithLabel =
          (__webpack_require__(182),
          function createObjectWithLabel(array) {
            return array.map(function(item) {
              return Object(objectSpread2.a)(
                Object(objectSpread2.a)({}, item),
                {},
                { label: item.name, value: item._id }
              );
            });
          }),
        productsCategoriesList = [
          {
            _id: '5e7b14236c7f5a004807263e',
            name: 'Освежители воздуха',
            isArchived: !1,
            productFields: [],
            previewImageId: '6026290e79d633727bd44d1b',
            detailImageId: '5ffc72ec617e2e043a21c6ad',
            updatedAt: '2021-02-12T07:07:02.099Z',
            description: 'Освежители воздуха',
            icon:
              '<svg role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><title>Gatsby icon</title><path d="M12 0C5.323 0 0 5.322 0 11.999A11.937 11.937 0 0012 24c6.677 0 12-5.322 12-12S18.68 0 12 0zM2.609 12.104l9.288 9.288c-5.113 0-9.288-4.174-9.288-9.288zm11.48 9.079L2.818 9.913c.937-4.174 4.695-7.305 9.181-7.305a9.481 9.48 0 017.619 3.862l-1.356 1.147a7.661 7.66 0 00-6.366-3.339 7.56 7.559 0 00-7.2 5.113l9.809 9.81c2.401-.836 4.278-2.922 4.8-5.427h-4.07V12h6.158c0 4.487-3.131 8.244-7.305 9.183z"/></svg>',
            priority: 14
          },
          {
            _id: '5ea05be14105a400487d7fae',
            name: 'Авто',
            isArchived: !1,
            productFields: [],
            updatedAt: '2020-07-26T08:28:55.909Z'
          },
          {
            _id: '5ea060504105a400487d897e',
            name: 'Аксессуары для кальянов',
            parentId: '5ea0604f4105a400487d897a',
            isArchived: !1,
            productFields: []
          },
          {
            _id: '5ea06252429d1e0048b1867c',
            name: 'Банковское оборудование',
            parentId: '5ea06251429d1e0048b18678',
            isArchived: !1,
            productFields: []
          },
          {
            _id: '5ea06444429d1e0048b18b39',
            name: 'Обувь',
            parentId: '5ea0630c4105a400487d900b',
            isArchived: !1,
            productFields: []
          },
          {
            _id: '5ea0649f4105a400487d9409',
            name: 'Продукты',
            isArchived: !1,
            productFields: [],
            updatedAt: '2020-07-02T06:58:33.375Z',
            icon:
              '<svg width="17" height="20" viewBox="0 0 17 20" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M8.23234 7.78721C8.23234 7.78721 4.92022 6.25853 3.00938 8.04199C1.09854 9.82544 -0.0479694 14.4115 2.49982 17.3414C4.28327 19.3796 6.3215 19.507 7.46801 19.2523C7.97757 19.1249 8.61451 19.1249 9.12407 19.2523C10.2706 19.507 12.3088 19.3796 14.0923 17.3414C16.64 14.4115 15.6209 9.82544 13.5827 8.04199C11.5445 6.25853 8.23234 7.78721 8.23234 7.78721ZM8.23234 7.78721C8.23234 7.78721 8.23234 6.6407 7.72279 5.62159C7.34062 4.85725 6.57628 4.09291 5.42978 3.83813" stroke="#050606" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path><path d="M13.9648 1.16296C13.9648 1.16296 8.61445 -0.11093 7.59534 5.62159C7.72273 5.62159 13.5826 6.25854 13.9648 1.16296Z" stroke="#050606" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"></path></svg>'
          },
          {
            _id: '5ea842d8788671103c40b9a0',
            name: 'Тестовая категория',
            parentId: null,
            isArchived: !1,
            productFields: [],
            createdAt: '2020-04-28T14:51:04.715Z',
            updatedAt: '2021-05-11T09:26:40.361Z',
            description: 'Описание тестовой категории',
            priority: 2
          },
          {
            _id: '5ecb61793f48cbba817ddd13',
            name: 'Тестовая категория',
            isArchived: !1,
            productFields: [],
            createdAt: '2020-05-25T06:08:33.976Z',
            updatedAt: '2020-12-30T08:11:02.526Z',
            description: 'Описание тестовой категории',
            icon:
              '  <svg xmlns="http://www.w3.org/2000/svg" version="1.2" baseProfile="tiny" width="47.4" height="40.65" viewBox="21 18.5 158 135.5"><path d="M25,50 l150,0 0,100 -150,0 z" stroke-width="4" stroke="black" fill="rgb(128,224,255)" fill-opacity="1" ></path><path d="M25,50 L175,150 M25,150 L175,50" stroke-width="4" stroke="black" fill="black" ></path><g transform="translate(0,0)" stroke-width="4" stroke="black" fill="none" ><circle cx="100" cy="30" r="7.5" fill="black" ></circle><circle cx="70" cy="30" r="7.5" fill="black" ></circle><circle cx="130" cy="30" r="7.5" fill="black" ></circle></g></svg>',
            priority: 15
          }
        ],
        mocks_serviceCategoriesList = [
          {
            _id: '603cdba71810f9a3d62395cd',
            name: 'Другое',
            parentId: '603cda101810f9a3d622b92f',
            isArchived: !1,
            productFields: [
              {
                _id: '603cdba75d502338f845e7c9',
                isRequired: !1,
                fieldId: '603cda145d502338f845e5b5'
              },
              {
                _id: '603cdba75d502338f845e7ca',
                isRequired: !1,
                fieldId: '603cda145d502338f845e5b6'
              },
              {
                _id: '603cdba75d502338f845e7cb',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dc'
              },
              {
                _id: '603cdba75d502338f845e7cc',
                isRequired: !1,
                fieldId: '603cd1ff5d502338f845db83'
              },
              {
                _id: '603cdba75d502338f845e7cd',
                isRequired: !1,
                fieldId: '603cd1ff5d502338f845db84'
              },
              {
                _id: '603cdba75d502338f845e7ce',
                isRequired: !1,
                fieldId: '603cd1ff5d502338f845db85'
              }
            ],
            createdAt: '2021-03-01T12:18:47.017Z',
            updatedAt: '2021-03-01T12:18:47.017Z',
            yandexCategoryId: '/komp_utery-i-it/drugoe'
          },
          {
            _id: '603cf5af1810f9a3d63225d7',
            name: 'Юридическое представительство в судах апелляционной инстанции',
            parentId: '603cf5911810f9a3d63218c6',
            isArchived: !1,
            productFields: [
              {
                _id: '603deff3da0def3e600ae90d',
                isRequired: !1,
                fieldId: '603cf590ef34a34828f0816a'
              },
              {
                _id: '603deff3da0def3e600ae90e',
                isRequired: !1,
                fieldId: '603ce3fb5d502338f845f579'
              },
              {
                _id: '603deff3da0def3e600ae90f',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dc'
              },
              {
                _id: '603deff3da0def3e600ae910',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dd'
              },
              {
                _id: '603deff3da0def3e600ae911',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1de'
              },
              {
                _id: '603deff3da0def3e600ae912',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1df'
              }
            ],
            createdAt: '2021-03-01T14:09:50.333Z',
            updatedAt: '2021-03-02T07:57:39.113Z',
            yandexCategoryId:
              '/uristy/predstavitel_stvo-v-sude/predstavitel_stvo-v-sude-apellazionnoj-instanzii'
          },
          {
            _id: '603cf8421810f9a3d633836e',
            name: 'Помощь юристов при ограничении и лишении родительских прав',
            parentId: '603cf82d1810f9a3d6337a36',
            isArchived: !1,
            productFields: [
              {
                _id: '603cf842ef34a34828f08401',
                isRequired: !1,
                fieldId: '603cf590ef34a34828f0816a'
              },
              {
                _id: '603cf842ef34a34828f08402',
                isRequired: !1,
                fieldId: '603ce3fb5d502338f845f579'
              },
              {
                _id: '603cf842ef34a34828f08403',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dc'
              },
              {
                _id: '603cf842ef34a34828f08404',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dd'
              },
              {
                _id: '603cf842ef34a34828f08405',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1de'
              },
              {
                _id: '603cf842ef34a34828f08406',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1df'
              }
            ],
            createdAt: '2021-03-01T14:20:50.052Z',
            updatedAt: '2021-03-01T14:20:50.052Z',
            yandexCategoryId:
              '/uristy/semejnye-spory/pomos_-pri-ogranicenii-i-lisenii-roditel_skih-prav'
          },
          {
            _id: '603cfac91810f9a3d634b2b7',
            name: 'Составление иска об освобождении имущества от ареста',
            parentId: '603cfaae1810f9a3d634a60d',
            isArchived: !1,
            productFields: [
              {
                _id: '603cfac8ef34a34828f08629',
                isRequired: !1,
                fieldId: '603cf590ef34a34828f0816a'
              },
              {
                _id: '603cfac8ef34a34828f0862a',
                isRequired: !1,
                fieldId: '603ce3fb5d502338f845f579'
              },
              {
                _id: '603cfac8ef34a34828f0862b',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dc'
              },
              {
                _id: '603cfac8ef34a34828f0862c',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dd'
              },
              {
                _id: '603cfac8ef34a34828f0862d',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1de'
              },
              {
                _id: '603cfac8ef34a34828f0862e',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1df'
              }
            ],
            createdAt: '2021-03-01T14:31:36.915Z',
            updatedAt: '2021-03-01T14:31:36.915Z',
            yandexCategoryId:
              '/uristy/ispolnitel_noe-proizvodstvo/sostavlenie-iska-ob-osvobojdenii-imusestva-ot-aresta'
          },
          {
            _id: '603d045e1810f9a3d63a101e',
            name: 'Занятие на параллельных брусьях',
            parentId: '603d044d1810f9a3d63a087b',
            isArchived: !1,
            productFields: [
              {
                _id: '603d045eef34a34828f09300',
                isRequired: !1,
                fieldId: '603d0180ef34a34828f08cf4'
              },
              {
                _id: '603d045eef34a34828f09301',
                isRequired: !1,
                fieldId: '603d0458ef34a34828f092f4'
              },
              {
                _id: '603d045eef34a34828f09302',
                isRequired: !1,
                fieldId: '603d015cef34a34828f08c86'
              },
              {
                _id: '603d045eef34a34828f09303',
                isRequired: !1,
                fieldId: '603d01bdef34a34828f08dab'
              },
              {
                _id: '603d045eef34a34828f09304',
                isRequired: !1,
                fieldId: '603ccde15d502338f845d513'
              },
              {
                _id: '603d045eef34a34828f09305',
                isRequired: !1,
                fieldId: '603cda145d502338f845e5b6'
              },
              {
                _id: '603d045eef34a34828f09306',
                isRequired: !1,
                fieldId: '603d01e3ef34a34828f08e0a'
              },
              {
                _id: '603d045eef34a34828f09307',
                isRequired: !1,
                fieldId: '603cd1ff5d502338f845db83'
              },
              {
                _id: '603d045eef34a34828f09308',
                isRequired: !1,
                fieldId: '603cd1ff5d502338f845db85'
              }
            ],
            createdAt: '2021-03-01T15:12:30.073Z',
            updatedAt: '2021-03-01T15:12:30.073Z',
            yandexCategoryId: '4179'
          },
          {
            _id: '603d04781810f9a3d63a1b07',
            name: 'Волейбол',
            parentId: '603d01571810f9a3d6382913',
            isArchived: !1,
            productFields: [
              {
                _id: '603d0477ef34a34828f09314',
                isRequired: !1,
                fieldId: '603d02baef34a34828f09007'
              },
              {
                _id: '603d0477ef34a34828f09315',
                isRequired: !1,
                fieldId: '603d02d3ef34a34828f09025'
              },
              {
                _id: '603d0477ef34a34828f09316',
                isRequired: !1,
                fieldId: '603d029bef34a34828f08fc1'
              },
              {
                _id: '603d0477ef34a34828f09317',
                isRequired: !1,
                fieldId: '603d01ccef34a34828f08dce'
              },
              {
                _id: '603d0477ef34a34828f09318',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dc'
              },
              {
                _id: '603d0477ef34a34828f09319',
                isRequired: !1,
                fieldId: '603cda145d502338f845e5b6'
              },
              {
                _id: '603d0477ef34a34828f0931a',
                isRequired: !1,
                fieldId: '603cd31b5d502338f845dd4b'
              },
              {
                _id: '603d0477ef34a34828f0931b',
                isRequired: !1,
                fieldId: '603cd1ff5d502338f845db83'
              },
              {
                _id: '603d0477ef34a34828f0931c',
                isRequired: !1,
                fieldId: '603cd1ff5d502338f845db85'
              }
            ],
            createdAt: '2021-03-01T15:12:55.478Z',
            updatedAt: '2021-03-01T15:12:55.478Z',
            yandexCategoryId: '3668'
          },
          {
            _id: '603d05571810f9a3d63a8f43',
            name: 'Занятие по армрестлингу',
            parentId: '603d05521810f9a3d63a8bd5',
            isArchived: !1,
            productFields: [
              {
                _id: '603d0556ef34a34828f09469',
                isRequired: !1,
                fieldId: '603ccde15d502338f845d513'
              },
              {
                _id: '603d0556ef34a34828f0946a',
                isRequired: !1,
                fieldId: '603d01e3ef34a34828f08e0a'
              }
            ],
            createdAt: '2021-03-01T15:16:38.272Z',
            updatedAt: '2021-03-01T15:16:38.272Z',
            yandexCategoryId: '3740'
          },
          {
            _id: '603d05c71810f9a3d63ac56d',
            name: 'Авиамодельный спорт',
            parentId: '603d01571810f9a3d6382913',
            isArchived: !1,
            productFields: [
              {
                _id: '603d05c7ef34a34828f094da',
                isRequired: !1,
                fieldId: '603d03aeef34a34828f091ca'
              },
              {
                _id: '603d05c7ef34a34828f094db',
                isRequired: !1,
                fieldId: '603d02d3ef34a34828f09025'
              },
              {
                _id: '603d05c7ef34a34828f094dc',
                isRequired: !1,
                fieldId: '603d03c8ef34a34828f091f4'
              },
              {
                _id: '603d05c7ef34a34828f094dd',
                isRequired: !1,
                fieldId: '603cda145d502338f845e5b6'
              },
              {
                _id: '603d05c7ef34a34828f094de',
                isRequired: !1,
                fieldId: '603cd1ff5d502338f845db85'
              }
            ],
            createdAt: '2021-03-01T15:18:31.081Z',
            updatedAt: '2021-03-01T15:18:31.081Z',
            yandexCategoryId: '3705'
          },
          {
            _id: '603d05d21810f9a3d63aca6c',
            name: 'Занятие по спортивной рыбалке',
            parentId: '603d05cd1810f9a3d63ac807',
            isArchived: !1,
            productFields: [
              {
                _id: '603d05d2ef34a34828f094eb',
                isRequired: !1,
                fieldId: '603d0180ef34a34828f08cf4'
              },
              {
                _id: '603d05d2ef34a34828f094ec',
                isRequired: !1,
                fieldId: '603d01bdef34a34828f08daa'
              },
              {
                _id: '603d05d2ef34a34828f094ed',
                isRequired: !1,
                fieldId: '603d02d3ef34a34828f09025'
              },
              {
                _id: '603d05d2ef34a34828f094ee',
                isRequired: !1,
                fieldId: '603d0329ef34a34828f090bb'
              },
              {
                _id: '603d05d2ef34a34828f094ef',
                isRequired: !1,
                fieldId: '603d01bdef34a34828f08dab'
              },
              {
                _id: '603d05d2ef34a34828f094f0',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dc'
              },
              {
                _id: '603d05d2ef34a34828f094f1',
                isRequired: !1,
                fieldId: '603d03c3ef34a34828f091e9'
              },
              {
                _id: '603d05d2ef34a34828f094f2',
                isRequired: !1,
                fieldId: '603d01e3ef34a34828f08e0a'
              },
              {
                _id: '603d05d2ef34a34828f094f3',
                isRequired: !1,
                fieldId: '603cd1ff5d502338f845db85'
              }
            ],
            createdAt: '2021-03-01T15:18:42.013Z',
            updatedAt: '2021-03-01T15:18:42.013Z',
            yandexCategoryId: '3755'
          },
          {
            _id: '603d061e1810f9a3d63aed47',
            name: 'Другое',
            parentId: '603d01571810f9a3d6382913',
            isArchived: !1,
            productFields: [
              {
                _id: '603d061def34a34828f09520',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dc'
              },
              {
                _id: '603d061def34a34828f09521',
                isRequired: !1,
                fieldId: '603ce3fb5d502338f845f579'
              },
              {
                _id: '603d061def34a34828f09522',
                isRequired: !1,
                fieldId: '603cd31b5d502338f845dd4b'
              },
              {
                _id: '603d061def34a34828f09523',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1dd'
              },
              {
                _id: '603d061def34a34828f09524',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1de'
              },
              {
                _id: '603d061def34a34828f09525',
                isRequired: !1,
                fieldId: '603ccbf15d502338f845d1df'
              }
            ],
            createdAt: '2021-03-01T15:19:57.770Z',
            updatedAt: '2021-03-01T15:19:57.770Z',
            yandexCategoryId: '/trenery/drugoe'
          }
        ],
        lib_form = (__webpack_require__(160), __webpack_require__(67)),
        form_default = __webpack_require__.n(lib_form),
        spin = (__webpack_require__(997), __webpack_require__(598)),
        spin_default = __webpack_require__.n(spin),
        lib_select = (__webpack_require__(999), __webpack_require__(596)),
        select_default = __webpack_require__.n(lib_select),
        taggedTemplateLiteral = __webpack_require__(19),
        styled_components_browser_esm = __webpack_require__(20),
        breakpoints = __webpack_require__(53),
        ResponsiveSelect = Object(styled_components_browser_esm.a)(select_default.a)(
          _templateObject ||
            (_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  min-width: 300px;\n  border-radius: 4px;\n  @media (max-width: ',
              ') {\n    width: 100%;\n  }\n'
            ])),
          breakpoints.c
        ),
        AutoComplete_AutoComplete = function AutoComplete(_ref) {
          var name = _ref.name,
            label = _ref.label,
            isLoading = _ref.isLoading,
            options = _ref.options,
            onSearch = _ref.onSearch,
            notFoundContent = _ref.notFoundContent;
          return react_default.a.createElement(
            react_default.a.Fragment,
            null,
            react_default.a.createElement(
              form_default.a.Item,
              { name: name, label: label },
              react_default.a.createElement(ResponsiveSelect, {
                allowClear: !0,
                mode: 'multiple',
                labelInValue: !0,
                filterOption: !1,
                loading: isLoading,
                notFoundContent: isLoading
                  ? react_default.a.createElement(spin_default.a, { size: 'small' })
                  : notFoundContent,
                showSearch: !0,
                onSearch: onSearch,
                options: options
              })
            )
          );
        },
        autocomplete_AutoComplete = AutoComplete_AutoComplete;
      try {
        (AutoComplete_AutoComplete.displayName = 'AutoComplete'),
          (AutoComplete_AutoComplete.__docgenInfo = {
            description: '',
            displayName: 'AutoComplete',
            props: {
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !0,
                type: { name: 'string' }
              },
              label: {
                defaultValue: null,
                description: '',
                name: 'label',
                required: !0,
                type: { name: 'any' }
              },
              isLoading: {
                defaultValue: null,
                description: '',
                name: 'isLoading',
                required: !0,
                type: { name: 'boolean' }
              },
              options: {
                defaultValue: null,
                description: '',
                name: 'options',
                required: !0,
                type: { name: 'any[]' }
              },
              onSearch: {
                defaultValue: null,
                description: '',
                name: 'onSearch',
                required: !0,
                type: { name: '(query: string) => void' }
              },
              notFoundContent: {
                defaultValue: null,
                description: '',
                name: 'notFoundContent',
                required: !1,
                type: { name: 'string' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES[
              'src/components/autocomplete/AutoComplete.tsx#AutoComplete'
            ] = {
              docgenInfo: AutoComplete_AutoComplete.__docgenInfo,
              name: 'AutoComplete',
              path: 'src/components/autocomplete/AutoComplete.tsx#AutoComplete'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      __webpack_exports__.default = {
        title: 'Components/Автокомплит категорий',
        component: autocomplete_AutoComplete,
        decorators: [
          function(Story) {
            return react.createElement(
              'div',
              { style: { margin: '3em' } },
              react.createElement(Story, null)
            );
          },
          esm.e
        ],
        argTypes: { onClick: { action: 'clicked' } },
        parameters: {
          docs: {
            page: function page() {
              return react.createElement(
                react.Fragment,
                null,
                react.createElement(blocks.h, null),
                react.createElement(
                  blocks.g,
                  null,
                  react.createElement(
                    'a',
                    {
                      href:
                        'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/SuWorld?node-id=429%3A210'
                    },
                    'Ссылка на макет (смотри описание услуги)'
                  )
                ),
                react.createElement(
                  blocks.b,
                  null,
                  'Блок управления рекламным бюджетом при условии наличия предустановленной цифры рекламного бюджета или отсутствия ее. При наличии рекламного бюджета в настройках магазина показывается эта цифра в процентах и кнопка изменить. При изменении проставляется чекбокс приоритета рекламного бюджета. При отсутствии процента в настройках предлагается форма для самостоятельного заполнения и чекбокс приоритета.'
                ),
                react.createElement(blocks.e, null),
                react.createElement(
                  blocks.b,
                  null,
                  'Использованы элементы из Antd и кастомная логика, данный блок используется в админпанели и дашборде поставщика'
                ),
                react.createElement(blocks.a, { story: blocks.d }),
                react.createElement(blocks.f, null)
              );
            }
          },
          design: {
            type: 'figma',
            url: 'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/SuWorld?node-id=429%3A210'
          }
        }
      };
      var DefaultAutoComplete = function Template(args) {
          return react.createElement(autocomplete_AutoComplete, args);
        }.bind({}),
        AutoComplete_stories_DefaultAutoCompleteCategoriesProducts = function DefaultAutoCompleteCategoriesProducts() {
          var _React$useState = react.useState(
              helper_createObjectWithLabel(productsCategoriesList)
            ),
            _React$useState2 = Object(slicedToArray.a)(_React$useState, 2),
            options = _React$useState2[0],
            setOptions = _React$useState2[1];
          return react.createElement(
            'div',
            { style: { display: 'flex', width: '500px' } },
            react.createElement(DefaultAutoComplete, {
              name: 'categories',
              label: Object(esm.d)('Label', 'Поиск по категории товаров'),
              options: options,
              onSearch: function onSearch(query) {
                var filtered = productsCategoriesList.filter(function(item) {
                  return item.name === query;
                });
                setOptions(helper_createObjectWithLabel(filtered));
              },
              notFoundContent: 'Введите название категории'
            })
          );
        },
        AutoComplete_stories_DefaultAutoCompleteCategoriesServices = function DefaultAutoCompleteCategoriesServices() {
          var _React$useState3 = react.useState(
              helper_createObjectWithLabel(mocks_serviceCategoriesList)
            ),
            _React$useState4 = Object(slicedToArray.a)(_React$useState3, 2),
            setOptions = (_React$useState4[0], _React$useState4[1]);
          return react.createElement(
            'div',
            { style: { display: 'flex', width: '500px' } },
            react.createElement(DefaultAutoComplete, {
              name: 'categories',
              label: Object(esm.d)('Label', 'Поиск по категории услуг'),
              options: helper_createObjectWithLabel(mocks_serviceCategoriesList),
              onSearch: function onSearch(query) {
                var filtered = mocks_serviceCategoriesList.filter(function(item) {
                  return item.name === query;
                });
                setOptions(helper_createObjectWithLabel(filtered));
              },
              notFoundContent: 'Введите название категории'
            })
          );
        };
      (AutoComplete_stories_DefaultAutoCompleteCategoriesProducts.parameters = Object(
        objectSpread2.a
      )(
        {
          storySource: {
            source:
              "() => {\n  const [options, setOptions] = React.useState<any[]>(createObjectWithLabel(productCategoriesList));\n  const onSearch = (query: string) => {\n    const filtered = productCategoriesList.filter((item: any) => item.name === query);\n    setOptions(createObjectWithLabel(filtered));\n  };\n  return (\n    <div style={{ display: 'flex', width: '500px' }}>\n      <DefaultAutoComplete\n        name=\"categories\"\n        label={text('Label', 'Поиск по категории товаров')}\n        options={options}\n        onSearch={onSearch}\n        notFoundContent=\"Введите название категории\"\n      />\n    </div>\n  );\n}"
          }
        },
        AutoComplete_stories_DefaultAutoCompleteCategoriesProducts.parameters
      )),
        (AutoComplete_stories_DefaultAutoCompleteCategoriesServices.parameters = Object(
          objectSpread2.a
        )(
          {
            storySource: {
              source:
                "() => {\n  const [options, setOptions] = React.useState<any[]>(createObjectWithLabel(serviceCategoriesList));\n  const onSearch = (query: string) => {\n    const filtered = serviceCategoriesList.filter((item: any) => item.name === query);\n    setOptions(createObjectWithLabel(filtered));\n  };\n  return (\n    <div style={{ display: 'flex', width: '500px' }}>\n      <DefaultAutoComplete\n        name=\"categories\"\n        label={text('Label', 'Поиск по категории услуг')}\n        options={createObjectWithLabel(serviceCategoriesList)}\n        onSearch={onSearch}\n        notFoundContent=\"Введите название категории\"\n      />\n    </div>\n  );\n}"
            }
          },
          AutoComplete_stories_DefaultAutoCompleteCategoriesServices.parameters
        ));
    },
    1134: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'Default', function() {
          return Default;
        }),
        __webpack_require__.d(__webpack_exports__, 'CustomizedButtonWithIcon', function() {
          return button_stories_CustomizedButtonWithIcon;
        }),
        __webpack_require__.d(__webpack_exports__, 'CutomizedButtonWithSuffix', function() {
          return button_stories_CutomizedButtonWithSuffix;
        });
      var _templateObject,
        objectSpread2 = __webpack_require__(38),
        react = __webpack_require__(0),
        esm = __webpack_require__(24),
        dist_esm = (__webpack_require__(182), __webpack_require__(109)),
        MessageOutlined = __webpack_require__(1164),
        DeleteOutlined = __webpack_require__(1165),
        WarningOutlined = __webpack_require__(1166),
        UnorderedListOutlined = __webpack_require__(1167),
        blocks = __webpack_require__(10),
        taggedTemplateLiteral = __webpack_require__(19),
        styled_components_browser_esm = __webpack_require__(20),
        colors = __webpack_require__(56),
        breakpoints = __webpack_require__(53),
        StyledAtndButton = Object(styled_components_browser_esm.a)(Button)(
          _templateObject ||
            (_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  &,\n  &:hover,\n  &:active,\n  &:focus {\n    background: ',
              ';\n    border-color: ',
              ';\n    color: ',
              ';\n  }\n\n  @media screen and (max-width: ',
              ') {\n    width: 100%;\n  }\n'
            ])),
          function(pr) {
            return 'link' !== pr.type &&
              'dashed' !== pr.type &&
              'default' !== pr.type &&
              'text' !== pr.type &&
              'red' === pr.color
              ? '#FF6960'
              : 'link' !== pr.type &&
                'dashed' !== pr.type &&
                'default' !== pr.type &&
                'text' !== pr.type &&
                'yellow' === pr.color
              ? '#fff566'
              : 'link' !== pr.type &&
                'dashed' !== pr.type &&
                'default' !== pr.type &&
                'text' !== pr.type &&
                'blue' === pr.color
              ? '#40A9FF'
              : 'link' !== pr.type &&
                'dashed' !== pr.type &&
                'default' !== pr.type &&
                'text' !== pr.type &&
                'green' === pr.color
              ? '#A8CD3D'
              : 'link' !== pr.type &&
                'dashed' !== pr.type &&
                'default' !== pr.type &&
                'text' !== pr.type &&
                'orange' === pr.color
              ? '#FF9B39'
              : void 0;
          },
          function(pr) {
            return pr.color && 'link' !== pr.type && 'text' !== pr.type
              ? ''.concat(colors.a[pr.color])
              : void 0;
          },
          function(pr) {
            return pr.color && 'primary' !== pr.type ? ''.concat(colors.a[pr.color]) : void 0;
          },
          breakpoints.c
        ),
        button_button = StyledAtndButton;
      try {
        (button.displayName = 'button'),
          (button.__docgenInfo = {
            description: '',
            displayName: 'button',
            props: {
              form: {
                defaultValue: null,
                description: '',
                name: 'form',
                required: !1,
                type: { name: 'string' }
              },
              slot: {
                defaultValue: null,
                description: '',
                name: 'slot',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              title: {
                defaultValue: null,
                description: '',
                name: 'title',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: '"link" | "text" | "ghost" | "default" | "primary" | "dashed"' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLElement>' }
              },
              download: {
                defaultValue: null,
                description: '',
                name: 'download',
                required: !1,
                type: { name: 'any' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              hrefLang: {
                defaultValue: null,
                description: '',
                name: 'hrefLang',
                required: !1,
                type: { name: 'string' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              ping: {
                defaultValue: null,
                description: '',
                name: 'ping',
                required: !1,
                type: { name: 'string' }
              },
              rel: {
                defaultValue: null,
                description: '',
                name: 'rel',
                required: !1,
                type: { name: 'string' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              referrerPolicy: {
                defaultValue: null,
                description: '',
                name: 'referrerPolicy',
                required: !1,
                type: { name: 'HTMLAttributeReferrerPolicy' }
              },
              defaultChecked: {
                defaultValue: null,
                description: '',
                name: 'defaultChecked',
                required: !1,
                type: { name: 'boolean' }
              },
              defaultValue: {
                defaultValue: null,
                description: '',
                name: 'defaultValue',
                required: !1,
                type: { name: 'string | number | readonly string[]' }
              },
              suppressContentEditableWarning: {
                defaultValue: null,
                description: '',
                name: 'suppressContentEditableWarning',
                required: !1,
                type: { name: 'boolean' }
              },
              suppressHydrationWarning: {
                defaultValue: null,
                description: '',
                name: 'suppressHydrationWarning',
                required: !1,
                type: { name: 'boolean' }
              },
              accessKey: {
                defaultValue: null,
                description: '',
                name: 'accessKey',
                required: !1,
                type: { name: 'string' }
              },
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              contentEditable: {
                defaultValue: null,
                description: '',
                name: 'contentEditable',
                required: !1,
                type: { name: 'Booleanish | "inherit"' }
              },
              contextMenu: {
                defaultValue: null,
                description: '',
                name: 'contextMenu',
                required: !1,
                type: { name: 'string' }
              },
              dir: {
                defaultValue: null,
                description: '',
                name: 'dir',
                required: !1,
                type: { name: 'string' }
              },
              draggable: {
                defaultValue: null,
                description: '',
                name: 'draggable',
                required: !1,
                type: { name: 'Booleanish' }
              },
              hidden: {
                defaultValue: null,
                description: '',
                name: 'hidden',
                required: !1,
                type: { name: 'boolean' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              placeholder: {
                defaultValue: null,
                description: '',
                name: 'placeholder',
                required: !1,
                type: { name: 'string' }
              },
              spellCheck: {
                defaultValue: null,
                description: '',
                name: 'spellCheck',
                required: !1,
                type: { name: 'Booleanish' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              translate: {
                defaultValue: null,
                description: '',
                name: 'translate',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              radioGroup: {
                defaultValue: null,
                description: '',
                name: 'radioGroup',
                required: !1,
                type: { name: 'string' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              about: {
                defaultValue: null,
                description: '',
                name: 'about',
                required: !1,
                type: { name: 'string' }
              },
              datatype: {
                defaultValue: null,
                description: '',
                name: 'datatype',
                required: !1,
                type: { name: 'string' }
              },
              inlist: {
                defaultValue: null,
                description: '',
                name: 'inlist',
                required: !1,
                type: { name: 'any' }
              },
              prefix: {
                defaultValue: null,
                description: '',
                name: 'prefix',
                required: !1,
                type: { name: 'string' }
              },
              property: {
                defaultValue: null,
                description: '',
                name: 'property',
                required: !1,
                type: { name: 'string' }
              },
              resource: {
                defaultValue: null,
                description: '',
                name: 'resource',
                required: !1,
                type: { name: 'string' }
              },
              typeof: {
                defaultValue: null,
                description: '',
                name: 'typeof',
                required: !1,
                type: { name: 'string' }
              },
              vocab: {
                defaultValue: null,
                description: '',
                name: 'vocab',
                required: !1,
                type: { name: 'string' }
              },
              autoCapitalize: {
                defaultValue: null,
                description: '',
                name: 'autoCapitalize',
                required: !1,
                type: { name: 'string' }
              },
              autoCorrect: {
                defaultValue: null,
                description: '',
                name: 'autoCorrect',
                required: !1,
                type: { name: 'string' }
              },
              autoSave: {
                defaultValue: null,
                description: '',
                name: 'autoSave',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: '"orange" | "green" | "red" | "lightBlue" | "yellow" | "blue"' }
              },
              itemProp: {
                defaultValue: null,
                description: '',
                name: 'itemProp',
                required: !1,
                type: { name: 'string' }
              },
              itemScope: {
                defaultValue: null,
                description: '',
                name: 'itemScope',
                required: !1,
                type: { name: 'boolean' }
              },
              itemType: {
                defaultValue: null,
                description: '',
                name: 'itemType',
                required: !1,
                type: { name: 'string' }
              },
              itemID: {
                defaultValue: null,
                description: '',
                name: 'itemID',
                required: !1,
                type: { name: 'string' }
              },
              itemRef: {
                defaultValue: null,
                description: '',
                name: 'itemRef',
                required: !1,
                type: { name: 'string' }
              },
              results: {
                defaultValue: null,
                description: '',
                name: 'results',
                required: !1,
                type: { name: 'number' }
              },
              security: {
                defaultValue: null,
                description: '',
                name: 'security',
                required: !1,
                type: { name: 'string' }
              },
              unselectable: {
                defaultValue: null,
                description: '',
                name: 'unselectable',
                required: !1,
                type: { name: '"on" | "off"' }
              },
              inputMode: {
                defaultValue: null,
                description:
                  'Hints at the type of data that might be entered by the user while editing the element or its contents\n@see https ://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute',
                name: 'inputMode',
                required: !1,
                type: {
                  name:
                    '"text" | "none" | "tel" | "url" | "email" | "numeric" | "decimal" | "search"'
                }
              },
              is: {
                defaultValue: null,
                description:
                  'Specify that a standard HTML element should behave like a defined custom built-in element\n@see https ://html.spec.whatwg.org/multipage/custom-elements.html#attr-is',
                name: 'is',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; } & { __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<any>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<any>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<any>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<any>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<any>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<any>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<any>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<any>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<any>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<any>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<any>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<any>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<any>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<any>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<any>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<any>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<any>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<any>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<any>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<any>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<any>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<any>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<any>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<any>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<any>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<any>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<any>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<any>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<any>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<any>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<any>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<any>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<any>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<any>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<any>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<any>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<any>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<any>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<any>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<any>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<any>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<any>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<any>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<any>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<any>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<any>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<any>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              autoFocus: {
                defaultValue: null,
                description: '',
                name: 'autoFocus',
                required: !1,
                type: { name: 'boolean' }
              },
              disabled: {
                defaultValue: null,
                description: '',
                name: 'disabled',
                required: !1,
                type: { name: 'boolean' }
              },
              formAction: {
                defaultValue: null,
                description: '',
                name: 'formAction',
                required: !1,
                type: { name: 'string' }
              },
              formEncType: {
                defaultValue: null,
                description: '',
                name: 'formEncType',
                required: !1,
                type: { name: 'string' }
              },
              formMethod: {
                defaultValue: null,
                description: '',
                name: 'formMethod',
                required: !1,
                type: { name: 'string' }
              },
              formNoValidate: {
                defaultValue: null,
                description: '',
                name: 'formNoValidate',
                required: !1,
                type: { name: 'boolean' }
              },
              formTarget: {
                defaultValue: null,
                description: '',
                name: 'formTarget',
                required: !1,
                type: { name: 'string' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              value: {
                defaultValue: null,
                description: '',
                name: 'value',
                required: !1,
                type: { name: 'string | number | readonly string[]' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'Ref<HTMLInputElement>' }
              },
              icon: {
                defaultValue: null,
                description: '',
                name: 'icon',
                required: !1,
                type: { name: 'ReactNode' }
              },
              shape: {
                defaultValue: null,
                description: '',
                name: 'shape',
                required: !1,
                type: { name: '"circle" | "round"' }
              },
              size: {
                defaultValue: null,
                description: '',
                name: 'size',
                required: !1,
                type: { name: 'SizeType' }
              },
              loading: {
                defaultValue: null,
                description: '',
                name: 'loading',
                required: !1,
                type: { name: 'boolean | { delay?: number; }' }
              },
              prefixCls: {
                defaultValue: null,
                description: '',
                name: 'prefixCls',
                required: !1,
                type: { name: 'string' }
              },
              ghost: {
                defaultValue: null,
                description: '',
                name: 'ghost',
                required: !1,
                type: { name: 'boolean' }
              },
              danger: {
                defaultValue: null,
                description: '',
                name: 'danger',
                required: !1,
                type: { name: 'boolean' }
              },
              block: {
                defaultValue: null,
                description: '',
                name: 'block',
                required: !1,
                type: { name: 'boolean' }
              },
              htmlType: {
                defaultValue: null,
                description: '',
                name: 'htmlType',
                required: !1,
                type: { name: '"button" | "submit" | "reset"' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              },
              theme: {
                defaultValue: null,
                description: '',
                name: 'theme',
                required: !1,
                type: { name: 'any' }
              },
              as: {
                defaultValue: null,
                description: '',
                name: 'as',
                required: !1,
                type: { name: 'never' }
              },
              forwardedAs: {
                defaultValue: null,
                description: '',
                name: 'forwardedAs',
                required: !1,
                type: { name: 'never' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/components/button/button.tsx#button'] = {
              docgenInfo: button.__docgenInfo,
              name: 'button',
              path: 'src/components/button/button.tsx#button'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var components_button = button_button,
        objectWithoutProperties = __webpack_require__(167),
        button_customized = function CustomizedButton(_ref) {
          var suffix = _ref.suffix,
            prefix = _ref.prefix,
            children = _ref.children,
            restProps = Object(objectWithoutProperties.a)(_ref, ['suffix', 'prefix', 'children']);
          return react.createElement(
            StyledAtndButton,
            Object.assign({ icon: prefix }, restProps),
            children || null,
            suffix
          );
        };
      try {
        (customized.displayName = 'customized'),
          (customized.__docgenInfo = {
            description: '',
            displayName: 'customized',
            props: {
              suffix: {
                defaultValue: null,
                description: '',
                name: 'suffix',
                required: !1,
                type: { name: 'ReactNode' }
              },
              prefix: {
                defaultValue: null,
                description: '',
                name: 'prefix',
                required: !1,
                type: { name: 'ReactNode' }
              },
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              __ANT_BUTTON: {
                defaultValue: null,
                description: '',
                name: '__ANT_BUTTON',
                required: !0,
                type: { name: 'boolean' }
              },
              Group: {
                defaultValue: null,
                description: '',
                name: 'Group',
                required: !0,
                type: { name: 'any' }
              },
              defaultProps: {
                defaultValue: null,
                description: '',
                name: 'defaultProps',
                required: !1,
                type: {
                  name:
                    'Partial<Partial<{ href: string; target?: string; onClick?: MouseEventHandler<HTMLElement>; } & BaseButtonProps & Omit<AnchorHTMLAttributes<any>, "type" | "onClick"> & { ...; } & Omit<...>> & RefAttributes<...>>'
                }
              },
              propTypes: {
                defaultValue: null,
                description: '',
                name: 'propTypes',
                required: !1,
                type: {
                  name:
                    'WeakValidationMap<Partial<{ href: string; target?: string; onClick?: MouseEventHandler<HTMLElement>; } & BaseButtonProps & Omit<AnchorHTMLAttributes<any>, "type" | "onClick"> & { ...; } & Omit<...>> & RefAttributes<...>>'
                }
              },
              displayName: {
                defaultValue: null,
                description: '',
                name: 'displayName',
                required: !1,
                type: { name: 'string' }
              },
              $$typeof: {
                defaultValue: null,
                description: '',
                name: '$$typeof',
                required: !0,
                type: { name: 'symbol' }
              },
              apply: {
                defaultValue: null,
                description:
                  'Calls the function, substituting the specified object for the this value of the function, and the specified array for the arguments of the function.\n@param thisArg The object to be used as the this object.\n@param argArray A set of arguments to be passed to the function.',
                name: 'apply',
                required: !0,
                type: { name: '(this: Function, thisArg: any, argArray?: any) => any' }
              },
              call: {
                defaultValue: null,
                description:
                  'Calls a method of an object, substituting another object for the current object.\n@param thisArg The object to be used as the current object.\n@param argArray A list of arguments to be passed to the method.',
                name: 'call',
                required: !0,
                type: { name: '(this: Function, thisArg: any, ...argArray: any[]) => any' }
              },
              bind: {
                defaultValue: null,
                description:
                  'For a given function, creates a bound function that has the same body as the original function.\nThe this object of the bound function is associated with the specified object, and has the specified initial parameters.\n@param thisArg An object to which the this keyword can refer inside the new function.\n@param argArray A list of arguments to be passed to the new function.',
                name: 'bind',
                required: !0,
                type: { name: '(this: Function, thisArg: any, ...argArray: any[]) => any' }
              },
              toString: {
                defaultValue: null,
                description: 'Returns a string representation of a function.',
                name: 'toString',
                required: !1,
                type: { name: '() => string' }
              },
              prototype: {
                defaultValue: null,
                description: '',
                name: 'prototype',
                required: !0,
                type: { name: 'any' }
              },
              length: {
                defaultValue: null,
                description: '',
                name: 'length',
                required: !0,
                type: { name: 'number' }
              },
              arguments: {
                defaultValue: null,
                description: '',
                name: 'arguments',
                required: !0,
                type: { name: 'any' }
              },
              caller: {
                defaultValue: null,
                description: '',
                name: 'caller',
                required: !0,
                type: { name: 'Function' }
              },
              name: {
                defaultValue: null,
                description:
                  'Returns the name of the function. Function names are read-only and can not be changed.',
                name: 'name',
                required: !0,
                type: { name: 'string' }
              },
              '__@hasInstance': {
                defaultValue: null,
                description:
                  "Determines whether the given value inherits from this function if this function was used\nas a constructor function.\n\nA constructor function can control which objects are recognized as its instances by\n'instanceof' by overriding this method.",
                name: '__@hasInstance',
                required: !0,
                type: { name: '(value: any) => boolean' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/components/button/customized.tsx#customized'] = {
              docgenInfo: customized.__docgenInfo,
              name: 'customized',
              path: 'src/components/button/customized.tsx#customized'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      __webpack_exports__.default = {
        title: 'Components/Кнопка',
        component: components_button,
        decorators: [
          function(Story) {
            return react.createElement(
              'div',
              { style: { margin: '3em' } },
              react.createElement(Story, null)
            );
          },
          esm.e
        ],
        argTypes: { onClick: { action: 'clicked' } },
        parameters: {
          docs: {
            page: function page() {
              return react.createElement(
                react.Fragment,
                null,
                react.createElement(blocks.h, null),
                react.createElement(
                  blocks.g,
                  null,
                  react.createElement(
                    'a',
                    {
                      href:
                        'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/Suworld?node-id=4126%3A19891'
                    },
                    'Ссылка на макет'
                  )
                ),
                react.createElement(
                  blocks.b,
                  null,
                  'Кнопка которая запускает действие. Помимо стандартных возможностей допускается кастомный цвет.\n              На разрешении экрана '.concat(
                    breakpoints.c,
                    ' и ниже, кнопка занимает всю ширину экрана "width: 100%"'
                  )
                ),
                react.createElement(blocks.e, null),
                react.createElement(blocks.b, null, 'Создана на базе кнопки из библиотеки Antd.'),
                react.createElement(blocks.a, { story: blocks.d }),
                react.createElement(blocks.f, null)
              );
            }
          },
          design: {
            type: 'figma',
            url: 'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/Suworld?node-id=4126%3A19891'
          }
        }
      };
      var icons = {
          MessageOutlined: MessageOutlined.a,
          DeleteOutlined: DeleteOutlined.a,
          WarningOutlined: WarningOutlined.a,
          UnorderedListOutlined: UnorderedListOutlined.a
        },
        nullify = function nullify(v) {
          return v || null;
        },
        Default = function Template(args) {
          return react.createElement(components_button, args);
        }.bind({});
      (Default.args = { type: 'primary', danger: !1, children: 'Кнопка', loading: !1 }),
        (Default.argTypes = {
          type: {
            description: 'Типы кнопок',
            control: { type: 'select', options: ['primary', 'link', 'default', 'dashed', 'text'] }
          },
          color: {
            description: 'Кастомные цвета из макета',
            control: { options: ['blue', 'green', 'orange', 'lightBlue'], type: 'select' }
          }
        });
      var button_stories_CustomizedButtonWithIcon = function CustomizedButtonWithIcon() {
          return react.createElement(button_customized, {
            icon: react.createElement(
              icons[Object(esm.c)('префикс', Object.keys(icons), Object.keys(icons)[0])]
            ),
            type: Object(esm.c)(
              'тип',
              { primary: 'primary', default: 'default', link: 'link' },
              'primary'
            ),
            danger: Object(esm.a)('Danger', !1),
            shape: nullify(
              Object(esm.c)('форма', { circle: 'circle', round: 'round', default: null }, null)
            ),
            loading: Object(esm.a)('Loading', !1),
            onClick: Object(dist_esm.action)('onClick'),
            color: Object(esm.c)(
              'цвет',
              ['blue', 'green', 'orange', 'lightBlue', 'yellow', 'red'],
              'lightBlue'
            ),
            children: Object(esm.d)('Label', 'Открыть')
          });
        },
        button_stories_CutomizedButtonWithSuffix = function CutomizedButtonWithSuffix() {
          return react.createElement(button_customized, {
            suffix: react.createElement(
              icons[Object(esm.c)('иконки', Object.keys(icons), Object.keys(icons)[0])]
            ),
            type: Object(esm.c)(
              'тип',
              { primary: 'primary', default: 'default', link: 'link' },
              'primary'
            ),
            danger: Object(esm.a)('Danger', !1),
            shape: Object(esm.c)('форма', { circle: 'circle', round: 'round' }, null),
            loading: Object(esm.a)('Loading', !1),
            onClick: Object(dist_esm.action)('onClick'),
            color: Object(esm.c)(
              'цвет',
              ['blue', 'green', 'orange', 'lightBlue', 'yellow', 'red'],
              'lightBlue'
            ),
            children: Object(esm.d)('Label', 'Перейти')
          });
        };
      (Default.parameters = Object(objectSpread2.a)(
        { storySource: { source: '(args) => <Button {...args} />' } },
        Default.parameters
      )),
        (button_stories_CustomizedButtonWithIcon.parameters = Object(objectSpread2.a)(
          {
            storySource: {
              source:
                "() => (\n  <CustomizedButton\n    icon={React.createElement(icons[select('префикс', Object.keys(icons), Object.keys(icons)[0])])}\n    type={select('тип', { primary: 'primary', default: 'default', link: 'link' }, 'primary')}\n    danger={boolean('Danger', false)}\n    shape={nullify(select('форма', { circle: 'circle', round: 'round', default: null }, null))}\n    loading={boolean('Loading', false)}\n    onClick={action('onClick')}\n    color={select('цвет', ['blue', 'green', 'orange', 'lightBlue', 'yellow', 'red'], 'lightBlue')}\n    \n    children={text('Label', 'Открыть')}\n  />\n)"
            }
          },
          button_stories_CustomizedButtonWithIcon.parameters
        )),
        (button_stories_CutomizedButtonWithSuffix.parameters = Object(objectSpread2.a)(
          {
            storySource: {
              source:
                "() => (\n  <CustomizedButton\n    suffix={React.createElement(icons[select('иконки', Object.keys(icons), Object.keys(icons)[0])])}\n    type={select('тип', { primary: 'primary', default: 'default', link: 'link' }, 'primary')}\n    danger={boolean('Danger', false)}\n    shape={select('форма', { circle: 'circle', round: 'round' }, null)}\n    loading={boolean('Loading', false)}\n    onClick={action('onClick')}\n    color={select('цвет', ['blue', 'green', 'orange', 'lightBlue', 'yellow', 'red'], 'lightBlue')}\n    \n    children={text('Label', 'Перейти')}\n  />\n)"
            }
          },
          button_stories_CutomizedButtonWithSuffix.parameters
        ));
    },
    1135: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'Default', function() {
          return Default;
        }),
        __webpack_require__.d(__webpack_exports__, 'CutomizedButtonWithIcon', function() {
          return search_stories_CutomizedButtonWithIcon;
        });
      var _templateObject,
        _templateObject2,
        objectSpread2 = __webpack_require__(38),
        react = __webpack_require__(0),
        react_default = __webpack_require__.n(react),
        esm = __webpack_require__(24),
        dist_esm = (__webpack_require__(182), __webpack_require__(109)),
        SearchOutlined = __webpack_require__(1168),
        FileSearchOutlined = __webpack_require__(1169),
        blocks = __webpack_require__(10),
        objectWithoutProperties = __webpack_require__(167),
        lib_button = (__webpack_require__(391), __webpack_require__(189)),
        button_default = __webpack_require__.n(lib_button),
        taggedTemplateLiteral = __webpack_require__(19),
        input = (__webpack_require__(1105), __webpack_require__(601)),
        input_default = __webpack_require__.n(input),
        styled_components_browser_esm = __webpack_require__(20),
        Search = input_default.a.Search,
        StyledSearch = Object(styled_components_browser_esm.a)(Search)(
          _templateObject || (_templateObject = Object(taggedTemplateLiteral.a)(['']))
        ),
        ButtonCenter = Object(styled_components_browser_esm.a)(button_default.a)(
          _templateObject2 ||
            (_templateObject2 = Object(taggedTemplateLiteral.a)(['\n  font-size: 20px;\n']))
        ),
        search_search = function CustomizedSearch(_ref) {
          var enterButton = _ref.enterButton,
            restProps = Object(objectWithoutProperties.a)(_ref, ['enterButton']);
          return react.createElement(
            StyledSearch,
            Object.assign({ enterButton: enterButton }, restProps)
          );
        };
      try {
        (search.displayName = 'search'),
          (search.__docgenInfo = {
            description: '',
            displayName: 'search',
            props: {
              enterButton: {
                defaultValue: null,
                description: '',
                name: 'enterButton',
                required: !0,
                type: { name: 'ReactNode' }
              },
              inputPrefixCls: {
                defaultValue: null,
                description: '',
                name: 'inputPrefixCls',
                required: !1,
                type: { name: 'string' }
              },
              onSearch: {
                defaultValue: null,
                description: '',
                name: 'onSearch',
                required: !1,
                type: {
                  name:
                    '(value: string, event?: KeyboardEvent<HTMLInputElement> | ChangeEvent<HTMLInputElement> | MouseEvent<HTMLElement, MouseEvent>) => void'
                }
              },
              loading: {
                defaultValue: null,
                description: '',
                name: 'loading',
                required: !1,
                type: { name: 'boolean' }
              },
              prefixCls: {
                defaultValue: null,
                description: '',
                name: 'prefixCls',
                required: !1,
                type: { name: 'string' }
              },
              size: {
                defaultValue: null,
                description: '',
                name: 'size',
                required: !1,
                type: { name: 'SizeType' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: {
                  name:
                    'LiteralUnion<"number" | "button" | "time" | "image" | "text" | "hidden" | "color" | "tel" | "url" | "email" | "search" | "date" | "submit" | "reset" | "checkbox" | "datetime-local" | "file" | ... 4 more ... | "week", string>'
                }
              },
              onPressEnter: {
                defaultValue: null,
                description: '',
                name: 'onPressEnter',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLInputElement>' }
              },
              addonBefore: {
                defaultValue: null,
                description: '',
                name: 'addonBefore',
                required: !1,
                type: { name: 'ReactNode' }
              },
              addonAfter: {
                defaultValue: null,
                description: '',
                name: 'addonAfter',
                required: !1,
                type: { name: 'ReactNode' }
              },
              prefix: {
                defaultValue: null,
                description: '',
                name: 'prefix',
                required: !1,
                type: { name: 'ReactNode' }
              },
              suffix: {
                defaultValue: null,
                description: '',
                name: 'suffix',
                required: !1,
                type: { name: 'ReactNode' }
              },
              allowClear: {
                defaultValue: null,
                description: '',
                name: 'allowClear',
                required: !1,
                type: { name: 'boolean' }
              },
              bordered: {
                defaultValue: null,
                description: '',
                name: 'bordered',
                required: !1,
                type: { name: 'boolean' }
              },
              form: {
                defaultValue: null,
                description: '',
                name: 'form',
                required: !1,
                type: { name: 'string' }
              },
              slot: {
                defaultValue: null,
                description: '',
                name: 'slot',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              title: {
                defaultValue: null,
                description: '',
                name: 'title',
                required: !1,
                type: { name: 'string' }
              },
              pattern: {
                defaultValue: null,
                description: '',
                name: 'pattern',
                required: !1,
                type: { name: 'string' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              defaultChecked: {
                defaultValue: null,
                description: '',
                name: 'defaultChecked',
                required: !1,
                type: { name: 'boolean' }
              },
              defaultValue: {
                defaultValue: null,
                description: '',
                name: 'defaultValue',
                required: !1,
                type: { name: 'string | number | readonly string[]' }
              },
              suppressContentEditableWarning: {
                defaultValue: null,
                description: '',
                name: 'suppressContentEditableWarning',
                required: !1,
                type: { name: 'boolean' }
              },
              suppressHydrationWarning: {
                defaultValue: null,
                description: '',
                name: 'suppressHydrationWarning',
                required: !1,
                type: { name: 'boolean' }
              },
              accessKey: {
                defaultValue: null,
                description: '',
                name: 'accessKey',
                required: !1,
                type: { name: 'string' }
              },
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              contentEditable: {
                defaultValue: null,
                description: '',
                name: 'contentEditable',
                required: !1,
                type: { name: 'Booleanish | "inherit"' }
              },
              contextMenu: {
                defaultValue: null,
                description: '',
                name: 'contextMenu',
                required: !1,
                type: { name: 'string' }
              },
              dir: {
                defaultValue: null,
                description: '',
                name: 'dir',
                required: !1,
                type: { name: 'string' }
              },
              draggable: {
                defaultValue: null,
                description: '',
                name: 'draggable',
                required: !1,
                type: { name: 'Booleanish' }
              },
              hidden: {
                defaultValue: null,
                description: '',
                name: 'hidden',
                required: !1,
                type: { name: 'boolean' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              placeholder: {
                defaultValue: null,
                description: '',
                name: 'placeholder',
                required: !1,
                type: { name: 'string' }
              },
              spellCheck: {
                defaultValue: null,
                description: '',
                name: 'spellCheck',
                required: !1,
                type: { name: 'Booleanish' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              translate: {
                defaultValue: null,
                description: '',
                name: 'translate',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              radioGroup: {
                defaultValue: null,
                description: '',
                name: 'radioGroup',
                required: !1,
                type: { name: 'string' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              about: {
                defaultValue: null,
                description: '',
                name: 'about',
                required: !1,
                type: { name: 'string' }
              },
              datatype: {
                defaultValue: null,
                description: '',
                name: 'datatype',
                required: !1,
                type: { name: 'string' }
              },
              inlist: {
                defaultValue: null,
                description: '',
                name: 'inlist',
                required: !1,
                type: { name: 'any' }
              },
              property: {
                defaultValue: null,
                description: '',
                name: 'property',
                required: !1,
                type: { name: 'string' }
              },
              resource: {
                defaultValue: null,
                description: '',
                name: 'resource',
                required: !1,
                type: { name: 'string' }
              },
              typeof: {
                defaultValue: null,
                description: '',
                name: 'typeof',
                required: !1,
                type: { name: 'string' }
              },
              vocab: {
                defaultValue: null,
                description: '',
                name: 'vocab',
                required: !1,
                type: { name: 'string' }
              },
              autoCapitalize: {
                defaultValue: null,
                description: '',
                name: 'autoCapitalize',
                required: !1,
                type: { name: 'string' }
              },
              autoCorrect: {
                defaultValue: null,
                description: '',
                name: 'autoCorrect',
                required: !1,
                type: { name: 'string' }
              },
              autoSave: {
                defaultValue: null,
                description: '',
                name: 'autoSave',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              itemProp: {
                defaultValue: null,
                description: '',
                name: 'itemProp',
                required: !1,
                type: { name: 'string' }
              },
              itemScope: {
                defaultValue: null,
                description: '',
                name: 'itemScope',
                required: !1,
                type: { name: 'boolean' }
              },
              itemType: {
                defaultValue: null,
                description: '',
                name: 'itemType',
                required: !1,
                type: { name: 'string' }
              },
              itemID: {
                defaultValue: null,
                description: '',
                name: 'itemID',
                required: !1,
                type: { name: 'string' }
              },
              itemRef: {
                defaultValue: null,
                description: '',
                name: 'itemRef',
                required: !1,
                type: { name: 'string' }
              },
              results: {
                defaultValue: null,
                description: '',
                name: 'results',
                required: !1,
                type: { name: 'number' }
              },
              security: {
                defaultValue: null,
                description: '',
                name: 'security',
                required: !1,
                type: { name: 'string' }
              },
              unselectable: {
                defaultValue: null,
                description: '',
                name: 'unselectable',
                required: !1,
                type: { name: '"on" | "off"' }
              },
              inputMode: {
                defaultValue: null,
                description:
                  'Hints at the type of data that might be entered by the user while editing the element or its contents\n@see https ://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute',
                name: 'inputMode',
                required: !1,
                type: {
                  name:
                    '"text" | "none" | "tel" | "url" | "email" | "numeric" | "decimal" | "search"'
                }
              },
              is: {
                defaultValue: null,
                description:
                  'Specify that a standard HTML element should behave like a defined custom built-in element\n@see https ://html.spec.whatwg.org/multipage/custom-elements.html#attr-is',
                name: 'is',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLInputElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLInputElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLInputElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLInputElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLInputElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLInputElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLInputElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLInputElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLInputElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLInputElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLInputElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLInputElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<HTMLInputElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<HTMLInputElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<HTMLInputElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<HTMLInputElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'ChangeEventHandler<HTMLInputElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLInputElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLInputElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLInputElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLInputElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLInputElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLInputElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLInputElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLInputElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLInputElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLInputElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLInputElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLInputElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLInputElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLInputElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLInputElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLInputElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLInputElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLInputElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLInputElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<HTMLInputElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<HTMLInputElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<HTMLInputElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<HTMLInputElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLInputElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLInputElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLInputElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLInputElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLInputElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLInputElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<HTMLInputElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<HTMLInputElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              autoFocus: {
                defaultValue: null,
                description: '',
                name: 'autoFocus',
                required: !1,
                type: { name: 'boolean' }
              },
              disabled: {
                defaultValue: null,
                description: '',
                name: 'disabled',
                required: !1,
                type: { name: 'boolean' }
              },
              formAction: {
                defaultValue: null,
                description: '',
                name: 'formAction',
                required: !1,
                type: { name: 'string' }
              },
              formEncType: {
                defaultValue: null,
                description: '',
                name: 'formEncType',
                required: !1,
                type: { name: 'string' }
              },
              formMethod: {
                defaultValue: null,
                description: '',
                name: 'formMethod',
                required: !1,
                type: { name: 'string' }
              },
              formNoValidate: {
                defaultValue: null,
                description: '',
                name: 'formNoValidate',
                required: !1,
                type: { name: 'boolean' }
              },
              formTarget: {
                defaultValue: null,
                description: '',
                name: 'formTarget',
                required: !1,
                type: { name: 'string' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              value: {
                defaultValue: null,
                description: '',
                name: 'value',
                required: !1,
                type: { name: 'string | number | readonly string[]' }
              },
              list: {
                defaultValue: null,
                description: '',
                name: 'list',
                required: !1,
                type: { name: 'string' }
              },
              step: {
                defaultValue: null,
                description: '',
                name: 'step',
                required: !1,
                type: { name: 'string | number' }
              },
              checked: {
                defaultValue: null,
                description: '',
                name: 'checked',
                required: !1,
                type: { name: 'boolean' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              accept: {
                defaultValue: null,
                description: '',
                name: 'accept',
                required: !1,
                type: { name: 'string' }
              },
              alt: {
                defaultValue: null,
                description: '',
                name: 'alt',
                required: !1,
                type: { name: 'string' }
              },
              autoComplete: {
                defaultValue: null,
                description: '',
                name: 'autoComplete',
                required: !1,
                type: { name: 'string' }
              },
              capture: {
                defaultValue: null,
                description: '',
                name: 'capture',
                required: !1,
                type: { name: 'string | boolean' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              maxLength: {
                defaultValue: null,
                description: '',
                name: 'maxLength',
                required: !1,
                type: { name: 'number' }
              },
              minLength: {
                defaultValue: null,
                description: '',
                name: 'minLength',
                required: !1,
                type: { name: 'number' }
              },
              multiple: {
                defaultValue: null,
                description: '',
                name: 'multiple',
                required: !1,
                type: { name: 'boolean' }
              },
              readOnly: {
                defaultValue: null,
                description: '',
                name: 'readOnly',
                required: !1,
                type: { name: 'boolean' }
              },
              required: {
                defaultValue: null,
                description: '',
                name: 'required',
                required: !1,
                type: { name: 'boolean' }
              },
              src: {
                defaultValue: null,
                description: '',
                name: 'src',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/components/search/search.tsx#search'] = {
              docgenInfo: search.__docgenInfo,
              name: 'search',
              path: 'src/components/search/search.tsx#search'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var components_search = search_search,
        breakpoints = __webpack_require__(53),
        icons_CopyLinks = function CopyLinks() {
          return react_default.a.createElement(
            'svg',
            {
              width: '20',
              height: '20',
              viewBox: '0 0 20 20',
              fill: 'none',
              xmlns: 'http://www.w3.org/2000/svg'
            },
            react_default.a.createElement('path', {
              d:
                'M8.75 15.0001C8.75 15.0001 5 18.7501 3.125 16.8751C1.25 15.0001 1.875 12.5001 5 10.0001C8.125 7.5001 10 6.8751 11.25 9.3751M11.25 5.0001C11.25 5.0001 15 1.2501 16.875 3.1251C18.75 5.0001 18.125 7.5001 15 10.0001C11.875 12.5001 10 13.1251 8.75 10.6251L11.25 5.0001Z',
              stroke: '#005DE2',
              strokeWidth: '2',
              strokeLinecap: 'round',
              strokeLinejoin: 'round'
            })
          );
        },
        icons =
          ((__webpack_exports__.default = {
            title: 'Components/Инпут с поиском',
            component: components_search,
            decorators: [
              function(Story) {
                return react.createElement(
                  'div',
                  { style: { margin: '3em' } },
                  react.createElement(Story, null)
                );
              },
              esm.e
            ],
            argTypes: { onClick: { action: 'clicked' } },
            parameters: {
              docs: {
                page: function page() {
                  return react.createElement(
                    react.Fragment,
                    null,
                    react.createElement(blocks.h, null),
                    react.createElement(
                      blocks.g,
                      null,
                      react.createElement(
                        'a',
                        {
                          href:
                            'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/Suworld?node-id=4126%3A19891'
                        },
                        'Ссылка на макет'
                      )
                    ),
                    react.createElement(
                      blocks.b,
                      null,
                      'Кнопка которая запускает действие. Помимо стандартных возможностей допускается кастомный цвет.\n              На разрешении экрана '.concat(
                        breakpoints.c,
                        ' и ниже, кнопка занимает всю ширину экрана "width: 100%"'
                      )
                    ),
                    react.createElement(blocks.e, null),
                    react.createElement(
                      blocks.b,
                      null,
                      'Создана на базе кнопки из библиотеки Antd.'
                    ),
                    react.createElement(blocks.a, { story: blocks.d }),
                    react.createElement(blocks.f, null)
                  );
                }
              },
              design: {
                type: 'figma',
                url:
                  'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/Suworld?node-id=4126%3A19891'
              }
            }
          }),
          { SearchOutlined: SearchOutlined.a, FileSearchOutlined: FileSearchOutlined.a }),
        Default = function Template(args) {
          return react.createElement(
            components_search,
            Object.assign(
              {
                enterButton: react.createElement(ButtonCenter, {
                  icon: react.createElement(icons_CopyLinks, null)
                })
              },
              args
            )
          );
        }.bind({}),
        search_stories_CutomizedButtonWithIcon = function CutomizedButtonWithIcon() {
          return react.createElement(components_search, {
            enterButton: react.createElement(
              icons[Object(esm.c)('кнопка поиска', Object.keys(icons), Object.keys(icons)[0])]
            ),
            loading: Object(esm.a)('loading', !1),
            onClick: Object(dist_esm.action)('onClick'),
            disabled: Object(esm.a)('disabled', !1)
          });
        };
      (Default.parameters = Object(objectSpread2.a)(
        {
          storySource: {
            source:
              '(args) => (\n  <CustomizedSearch enterButton={<ButtonCenter icon={<CopyLinks />} />} {...args} />\n)'
          }
        },
        Default.parameters
      )),
        (search_stories_CutomizedButtonWithIcon.parameters = Object(objectSpread2.a)(
          {
            storySource: {
              source:
                "() => (\n  <CustomizedSearch\n    enterButton={React.createElement(\n      icons[select('кнопка поиска', Object.keys(icons), Object.keys(icons)[0])]\n    )}\n    loading={boolean('loading', false)}\n    onClick={action('onClick')}\n    disabled={boolean('disabled', false)}\n  />\n)"
            }
          },
          search_stories_CutomizedButtonWithIcon.parameters
        ));
    },
    1137: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'Default', function() {
          return Default;
        }),
        __webpack_require__.d(__webpack_exports__, 'Disabled', function() {
          return checkbox_stories_Disabled;
        });
      var _templateObject,
        objectSpread2 = __webpack_require__(38),
        react = __webpack_require__(0),
        taggedTemplateLiteral = (__webpack_require__(1089), __webpack_require__(19)),
        styled_components_browser_esm = __webpack_require__(20),
        checkbox_checkbox = Object(styled_components_browser_esm.a)(AntdCheckbox)(
          _templateObject ||
            (_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  margin-top: 2px;\n  .ant-checkbox-inner {\n    border-radius: 3px;\n    width: 25px;\n    height: 25px;\n    &:after {\n      width: 8px;\n      height: 14px;\n      top: 43%;\n      left: 20%;\n      border: 2px solid #fff;\n      border-top: 0;\n      border-left: 0;\n    }\n  }\n'
            ]))
        );
      try {
        (checkbox.displayName = 'checkbox'),
          (checkbox.__docgenInfo = {
            description: '',
            displayName: 'checkbox',
            props: {
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLElement>' }
              },
              defaultChecked: {
                defaultValue: null,
                description: '',
                name: 'defaultChecked',
                required: !1,
                type: { name: 'boolean' }
              },
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: '(e: CheckboxChangeEvent) => void' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLElement>' }
              },
              autoFocus: {
                defaultValue: null,
                description: '',
                name: 'autoFocus',
                required: !1,
                type: { name: 'boolean' }
              },
              disabled: {
                defaultValue: null,
                description: '',
                name: 'disabled',
                required: !1,
                type: { name: 'boolean' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              value: {
                defaultValue: null,
                description: '',
                name: 'value',
                required: !1,
                type: { name: 'any' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'Ref<HTMLInputElement>' }
              },
              prefixCls: {
                defaultValue: null,
                description: '',
                name: 'prefixCls',
                required: !1,
                type: { name: 'string' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              },
              indeterminate: {
                defaultValue: null,
                description: '',
                name: 'indeterminate',
                required: !1,
                type: { name: 'boolean' }
              },
              checked: {
                defaultValue: null,
                description: '',
                name: 'checked',
                required: !1,
                type: { name: 'boolean' }
              },
              skipGroup: {
                defaultValue: null,
                description: '',
                name: 'skipGroup',
                required: !1,
                type: { name: 'boolean' }
              },
              theme: {
                defaultValue: null,
                description: '',
                name: 'theme',
                required: !1,
                type: { name: 'any' }
              },
              as: {
                defaultValue: null,
                description: '',
                name: 'as',
                required: !1,
                type: { name: 'never' }
              },
              forwardedAs: {
                defaultValue: null,
                description: '',
                name: 'forwardedAs',
                required: !1,
                type: { name: 'never' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/components/checkbox/checkbox.tsx#checkbox'] = {
              docgenInfo: checkbox.__docgenInfo,
              name: 'checkbox',
              path: 'src/components/checkbox/checkbox.tsx#checkbox'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var components_checkbox = checkbox_checkbox,
        Default =
          ((__webpack_exports__.default = {
            title: 'Components/Checkbox',
            component: components_checkbox
          }),
          function Template(args) {
            return react.createElement(components_checkbox, args);
          }.bind({}));
      Default.args = { children: 'Checkbox label' };
      var checkbox_stories_Disabled = function Disabled() {
        return react.createElement(
          react.Fragment,
          null,
          react.createElement(
            'label',
            { htmlFor: 'checkbox-disabled', title: 'Не активный', style: { marginRight: '20px' } },
            react.createElement(components_checkbox, { id: 'checkbox-disabled', disabled: !0 })
          ),
          react.createElement(
            'label',
            { htmlFor: 'checkbox', title: 'Активный' },
            react.createElement(components_checkbox, { id: 'checkbox', disabled: !0, checked: !0 })
          )
        );
      };
      (Default.parameters = Object(objectSpread2.a)(
        { storySource: { source: '(args) => <Checkbox {...args} />' } },
        Default.parameters
      )),
        (checkbox_stories_Disabled.parameters = Object(objectSpread2.a)(
          {
            storySource: {
              source:
                '() => (\n    <>\n      <label htmlFor="checkbox-disabled" title="Не активный" style={{ marginRight: \'20px\' }}>\n        <Checkbox id="checkbox-disabled" disabled />\n      </label>\n      <label htmlFor="checkbox" title="Активный">\n        <Checkbox id="checkbox" disabled checked />\n      </label>\n    </>\n  )'
            }
          },
          checkbox_stories_Disabled.parameters
        ));
    },
    1140: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'InputNumberFormWithProps', function() {
          return inputNumber_stories_InputNumberFormWithProps;
        });
      var _templateObject,
        objectSpread2 = __webpack_require__(38),
        react = __webpack_require__(0),
        react_default = __webpack_require__.n(react),
        esm = __webpack_require__(24),
        blocks = (__webpack_require__(182), __webpack_require__(10)),
        input_number = (__webpack_require__(564), __webpack_require__(309)),
        input_number_default = __webpack_require__.n(input_number),
        tooltip = (__webpack_require__(204), __webpack_require__(106)),
        tooltip_default = __webpack_require__.n(tooltip),
        QuestionCircleOutlined = __webpack_require__(1162),
        lib_form = (__webpack_require__(160), __webpack_require__(67)),
        form_default = __webpack_require__.n(lib_form),
        taggedTemplateLiteral = __webpack_require__(19),
        styled_components_browser_esm = __webpack_require__(20),
        breakpoints = __webpack_require__(53),
        SmallFormItemInput = Object(styled_components_browser_esm.a)(form_default.a.Item)(
          _templateObject ||
            (_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  width: 152px;\n  flex-direction: column;\n  margin-right: 10px;\n\n  &:last-child {\n    margin-right: 0;\n  }\n\n  .ant-form-item-label,\n  .ant-form-item-label > label {\n    text-align: left !important;\n    max-width: 110%;\n  }\n\n  .ant-input-number {\n    width: 152px;\n    min-height: 28px;\n    margin-right: 5px;\n  }\n\n  input {\n    ::-webkit-input-placeholder {\n      text-align: right;\n    }\n\n    input:-moz-placeholder {\n      text-align: right;\n    }\n  }\n\n  .supplier-service-price__vendor-code--placeholder-right {\n    &::-webkit-input-placeholder {\n      text-align: left;\n    }\n\n    &:-moz-placeholder {\n      text-align: left;\n    }\n  }\n\n  @media screen and (max-width: ',
              ') {\n    width: 100%;\n    margin-right: 0;\n    margin-bottom: 10px;\n    .ant-input-number {\n      width: 100%;\n    }\n\n    .ant-form-item-label {\n      padding: 0;\n    }\n\n    label {\n      font-size: 12px;\n      font-weight: bold;\n    }\n  }\n'
            ])),
          breakpoints.c
        ),
        inputNumber_inputNumber = function InputNumberForm(_ref) {
          var isProduct = _ref.isProduct,
            name = _ref.name,
            rules = _ref.rules,
            cbHandleChange = _ref.cbHandleChange,
            tooltipTextProduct = _ref.tooltipTextProduct,
            tooltipText = _ref.tooltipText,
            min = _ref.min;
          return react_default.a.createElement(
            SmallFormItemInput,
            {
              colon: !1,
              label: isProduct
                ? react_default.a.createElement(
                    'span',
                    null,
                    'Рекламный бюджет от ',
                    Number(min) || 1,
                    '% до 90%  ',
                    react_default.a.createElement(
                      tooltip_default.a,
                      { title: tooltipTextProduct },
                      react_default.a.createElement(QuestionCircleOutlined.a, null)
                    ),
                    ' '
                  )
                : react_default.a.createElement(
                    'span',
                    null,
                    'Рекламный бюджет ',
                    react_default.a.createElement(
                      tooltip_default.a,
                      { title: tooltipText },
                      react_default.a.createElement(QuestionCircleOutlined.a, null)
                    )
                  ),
              name: name,
              rules: rules
            },
            react_default.a.createElement(input_number_default.a, {
              style: { width: '100%' },
              size: isProduct ? 'small' : 'middle',
              precision: 1,
              min: Number(min) || 1,
              max: 90,
              formatter: function formatter(value) {
                return ''.concat(value, '%');
              },
              parser: function parser(value) {
                return value.replace('%', '');
              },
              placeholder: '%',
              onChange: function onChange(value) {
                return cbHandleChange(value);
              }
            })
          );
        };
      try {
        (inputNumber.displayName = 'inputNumber'),
          (inputNumber.__docgenInfo = {
            description: '',
            displayName: 'inputNumber',
            props: {
              isProduct: {
                defaultValue: null,
                description: '',
                name: 'isProduct',
                required: !0,
                type: { name: 'boolean' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !0,
                type: { name: 'string' }
              },
              rules: {
                defaultValue: null,
                description: '',
                name: 'rules',
                required: !1,
                type: { name: 'Rule[]' }
              },
              cbHandleChange: {
                defaultValue: null,
                description: '',
                name: 'cbHandleChange',
                required: !0,
                type: { name: '(value: number) => void' }
              },
              tooltipTextProduct: {
                defaultValue: null,
                description: '',
                name: 'tooltipTextProduct',
                required: !1,
                type: { name: 'string' }
              },
              tooltipText: {
                defaultValue: null,
                description: '',
                name: 'tooltipText',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !0,
                type: { name: 'string | number' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/components/inputNumber/inputNumber.tsx#inputNumber'] = {
              docgenInfo: inputNumber.__docgenInfo,
              name: 'inputNumber',
              path: 'src/components/inputNumber/inputNumber.tsx#inputNumber'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      __webpack_exports__.default = {
        title: 'Components/Инпут (ввод цифр + форма)',
        component: inputNumber_inputNumber,
        decorators: [
          function(Story) {
            return react.createElement(
              'div',
              { style: { margin: '3em' } },
              react.createElement(Story, null)
            );
          },
          esm.e
        ],
        argTypes: { onClick: { action: 'clicked' } },
        parameters: {
          docs: {
            page: function page() {
              return react.createElement(
                react.Fragment,
                null,
                react.createElement(blocks.h, null),
                react.createElement(
                  blocks.g,
                  null,
                  react.createElement(
                    'a',
                    {
                      href:
                        'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/SuWorld?node-id=429%3A210'
                    },
                    'Ссылка на макет (смотри описание услуги)'
                  )
                ),
                react.createElement(blocks.b, null, 'Инпут тип: цифры'),
                react.createElement(blocks.e, null),
                react.createElement(
                  blocks.b,
                  null,
                  'Сделан на базе Antd. Используется в поставщике в блоке рекламного бюджета'
                ),
                react.createElement(blocks.a, { story: blocks.d, of: inputNumber_inputNumber }),
                react.createElement(blocks.f, null)
              );
            }
          },
          design: {
            type: 'figma',
            url: 'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/SuWorld?node-id=429%3A210'
          }
        }
      };
      var mockProps = {
          isProduct: !0,
          name: 'advBudget',
          rules: [],
          cbHandleChange: function cbHandleChange(value) {
            return {};
          },
          tooltipTextProduct:
            'Рекомендуем: устанавливать рекламный бюджет от 10% и более. Чем больше рекламный бюджет, \n                    тем больше вовлеченность клиента в программу лояльности. Помните, что рекламный бюджет будет постепенно возвращаться Вам по реферальной программе, \n                    при любых покупках Ваших клиентов. Таким образом, Вы стимулируете клиента к активности, \n и получаете компенсацию рекламных затрат. Это выгодно всем!',
          tooltipText:
            'Рекомендуем: устанавливать рекламный бюджет от 10% и более. Чем больше рекламный бюджет, \n                    тем больше вовлеченность клиента в программу лояльности. Помните, что рекламный бюджет будет постепенно возвращаться Вам по реферальной программе, при любых покупках Ваших клиентов. \n                    Таким образом, Вы стимулируете клиента к активности, \n и получаете компенсацию рекламных затрат. Это выгодно всем!'
        },
        DefaultInputNumberForm = function Template(args) {
          return react.createElement(inputNumber_inputNumber, args);
        }.bind({}),
        inputNumber_stories_InputNumberFormWithProps = function InputNumberFormWithProps() {
          return react.createElement(
            'div',
            { style: { display: 'flex', width: '400px' } },
            react.createElement(
              DefaultInputNumberForm,
              Object.assign({ label: Object(esm.d)('Label', 'Введите число') }, mockProps)
            )
          );
        };
      inputNumber_stories_InputNumberFormWithProps.parameters = Object(objectSpread2.a)(
        {
          storySource: {
            source:
              "() => (\n  <div style={{ display: 'flex', width: '400px' }}>\n    <DefaultInputNumberForm label={text('Label', 'Введите число')} {...mockProps} />\n  </div>\n)"
          }
        },
        inputNumber_stories_InputNumberFormWithProps.parameters
      );
    },
    1141: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'Default', function() {
          return Default;
        });
      var _templateObject,
        _templateObject2,
        objectSpread2 = __webpack_require__(38),
        react = __webpack_require__(0),
        react_default = __webpack_require__.n(react),
        popover = (__webpack_require__(1099), __webpack_require__(600)),
        popover_default = __webpack_require__.n(popover),
        QuestionCircle = __webpack_require__(292),
        taggedTemplateLiteral = __webpack_require__(19),
        styled_components_browser_esm = __webpack_require__(20),
        PopoverWrapper = styled_components_browser_esm.a.div(
          _templateObject ||
            (_templateObject = Object(taggedTemplateLiteral.a)(['\n  max-width: 420px;\n']))
        ),
        WrapperButton = styled_components_browser_esm.a.button(
          _templateObject2 ||
            (_templateObject2 = Object(taggedTemplateLiteral.a)([
              '\n  width: 16px;\n  height: 16px;\n  outline: none;\n  border: none;\n  margin: 0;\n  padding: 0;\n  background: none;\n  cursor: pointer;\n'
            ]))
        ),
        colors = __webpack_require__(56),
        popover_popover = function QuestionPopover(_ref) {
          var children = _ref.children,
            trigger = _ref.trigger,
            placement = _ref.placement;
          return react_default.a.createElement(
            'div',
            null,
            react_default.a.createElement(
              popover_default.a,
              {
                placement: null != placement ? placement : 'top',
                content: react_default.a.createElement(PopoverWrapper, null, children),
                trigger: null != trigger ? trigger : 'click'
              },
              react_default.a.createElement(
                WrapperButton,
                null,
                react_default.a.createElement(QuestionCircle.a, { style: { fill: colors.a.blue } })
              )
            )
          );
        },
        Default =
          (__webpack_require__(1102),
          (__webpack_exports__.default = {
            title: 'Components/Popover',
            component: popover_popover
          }),
          function Template(args) {
            return react.createElement(popover_popover, args);
          }.bind({}));
      (Default.args = {
        trigger: 'click',
        placement: 'top',
        children:
          'Рекомендуем: устанавливать рекламный бюджет от 10% и более. Чем больше рекламный бюджет, тем больше вовлеченность клиента в программу лояльности. Помните, что рекламный бюджет будет постепенно возвращаться Вам по реферальной программе, при любых покупках Ваших клиентов. Таким образом, Вы стимулируете клиента к активности, и получаете компенсацию рекламных затрат. Это выгодно всем!'
      }),
        (Default.argTypes = {
          trigger: {
            description: 'Способ срабатывания',
            control: { type: 'select', options: ['click', 'focus', 'hover'] }
          },
          placement: {
            description: 'Положение попапа',
            control: {
              type: 'select',
              options: [
                'topLeft',
                'top',
                'topRight',
                'leftTop',
                'left',
                'leftBottom',
                'rightTop',
                'right',
                'rightBottom',
                'bottomLeft',
                'bottom',
                'bottomRight'
              ]
            }
          }
        }),
        (Default.parameters = Object(objectSpread2.a)(
          { storySource: { source: '(args) => <Popover {...args} />' } },
          Default.parameters
        ));
    },
    1142: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'Default', function() {
          return Default;
        }),
        __webpack_require__.d(__webpack_exports__, 'RqTypeRadioWithProps', function() {
          return rqType_stories_RqTypeRadioWithProps;
        });
      var _templateObject,
        objectSpread2 = __webpack_require__(38),
        lib_form = (__webpack_require__(160), __webpack_require__(67)),
        form_default = __webpack_require__.n(lib_form),
        slicedToArray = __webpack_require__(110),
        react = __webpack_require__(0),
        react_default = __webpack_require__.n(react),
        esm = __webpack_require__(24),
        blocks = (__webpack_require__(182), __webpack_require__(10)),
        lib_radio = (__webpack_require__(393), __webpack_require__(153)),
        radio_default = __webpack_require__.n(lib_radio),
        objectWithoutProperties = __webpack_require__(167),
        taggedTemplateLiteral = __webpack_require__(19),
        styled_components_browser_esm = __webpack_require__(20),
        breakpoints = __webpack_require__(53),
        StyledRadioGroup = Object(styled_components_browser_esm.a)(radio_default.a.Group)(
          _templateObject ||
            (_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  @media (max-width: ',
              ') {\n    display: flex;\n    flex-direction: column;\n  }\n  .ant-radio-inner {\n    width: 20px;\n    height: 20px;\n\n    &:after {\n      width: 12px;\n      height: 12px;\n      top: 3.2px;\n      left: 2.9px;\n    }\n  }\n'
            ])),
          breakpoints.c
        );
      try {
        (StyledRadioGroup.displayName = 'StyledRadioGroup'),
          (StyledRadioGroup.__docgenInfo = {
            description: '',
            displayName: 'StyledRadioGroup',
            props: {
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              defaultValue: {
                defaultValue: null,
                description: '',
                name: 'defaultValue',
                required: !1,
                type: { name: 'any' }
              },
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: '(e: RadioChangeEvent) => void' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              disabled: {
                defaultValue: null,
                description: '',
                name: 'disabled',
                required: !1,
                type: { name: 'boolean' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              value: {
                defaultValue: null,
                description: '',
                name: 'value',
                required: !1,
                type: { name: 'any' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'Ref<HTMLDivElement>' }
              },
              size: {
                defaultValue: null,
                description: '',
                name: 'size',
                required: !1,
                type: { name: 'SizeType' }
              },
              prefixCls: {
                defaultValue: null,
                description: '',
                name: 'prefixCls',
                required: !1,
                type: { name: 'string' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              },
              optionType: {
                defaultValue: null,
                description: '',
                name: 'optionType',
                required: !1,
                type: { name: 'RadioGroupOptionType' }
              },
              buttonStyle: {
                defaultValue: null,
                description: '',
                name: 'buttonStyle',
                required: !1,
                type: { name: 'RadioGroupButtonStyle' }
              },
              options: {
                defaultValue: null,
                description: '',
                name: 'options',
                required: !1,
                type: { name: '(string | CheckboxOptionType)[]' }
              },
              theme: {
                defaultValue: null,
                description: '',
                name: 'theme',
                required: !1,
                type: { name: 'any' }
              },
              as: {
                defaultValue: null,
                description: '',
                name: 'as',
                required: !1,
                type: { name: 'never' }
              },
              forwardedAs: {
                defaultValue: null,
                description: '',
                name: 'forwardedAs',
                required: !1,
                type: { name: 'never' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/components/rqType/styled.tsx#StyledRadioGroup'] = {
              docgenInfo: StyledRadioGroup.__docgenInfo,
              name: 'StyledRadioGroup',
              path: 'src/components/rqType/styled.tsx#StyledRadioGroup'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var rqTypes = [
          { value: 'IP', label: 'ИП' },
          { value: 'ORGANIZATION', label: 'ООО/АО' },
          { value: 'INDIVIDUAL', label: 'Самозанятое лицо' }
        ],
        rqType_rqType = function RqTypeRadio(_ref) {
          var disabled = _ref.disabled,
            props = Object(objectWithoutProperties.a)(_ref, ['disabled']);
          return react_default.a.createElement(
            form_default.a.Item,
            { name: 'rqType', label: 'Тип организации' },
            react_default.a.createElement(
              StyledRadioGroup,
              Object.assign({ name: 'rqType' }, props),
              rqTypes.map(function(rqType) {
                return react_default.a.createElement(
                  radio_default.a,
                  {
                    style: { padding: 5 },
                    key: rqType.value,
                    value: rqType.value,
                    disabled: disabled
                  },
                  rqType.label
                );
              })
            )
          );
        };
      try {
        (rqType.displayName = 'rqType'),
          (rqType.__docgenInfo = {
            description: '',
            displayName: 'rqType',
            props: {
              defaultValue: {
                defaultValue: null,
                description: '',
                name: 'defaultValue',
                required: !1,
                type: { name: 'string' }
              },
              disabled: {
                defaultValue: null,
                description: '',
                name: 'disabled',
                required: !1,
                type: { name: 'boolean' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/components/rqType/rqType.tsx#rqType'] = {
              docgenInfo: rqType.__docgenInfo,
              name: 'rqType',
              path: 'src/components/rqType/rqType.tsx#rqType'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      __webpack_exports__.default = {
        title: 'Components/Радио кнопки',
        component: rqType_rqType,
        decorators: [
          function(Story) {
            return react.createElement(
              'div',
              { style: { margin: '3em' } },
              react.createElement(Story, null)
            );
          },
          esm.e
        ],
        argTypes: { onClick: { action: 'clicked' } },
        parameters: {
          docs: {
            page: function page() {
              return react.createElement(
                react.Fragment,
                null,
                react.createElement(blocks.h, null),
                react.createElement(
                  blocks.g,
                  null,
                  react.createElement(
                    'a',
                    {
                      href:
                        'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/Suworld?node-id=4126%3A19891'
                    },
                    'Ссылка на макет'
                  )
                ),
                react.createElement(
                  blocks.b,
                  null,
                  'Выбор вида деятельности представлен в виде радиокнопок'
                ),
                react.createElement(blocks.e, null),
                react.createElement(
                  blocks.b,
                  null,
                  'Компонент на базе кнопки из библиотеки Antd (Radio.Group).'
                ),
                react.createElement(blocks.a, { story: blocks.d }),
                react.createElement(blocks.f, null)
              );
            }
          },
          design: {
            type: 'figma',
            url: 'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/Suworld?node-id=4126%3A19891'
          }
        }
      };
      var Default = function Template(args) {
          return react.createElement(rqType_rqType, args);
        }.bind({}),
        rqType_stories_RqTypeRadioWithProps = function RqTypeRadioWithProps() {
          var _Form$useForm = form_default.a.useForm(),
            form = Object(slicedToArray.a)(_Form$useForm, 1)[0];
          return react.createElement(
            form_default.a,
            { form: form },
            react.createElement(Default, { disabled: Object(esm.a)('disabled', !1) })
          );
        };
      (Default.parameters = Object(objectSpread2.a)(
        { storySource: { source: '(args) => <RqTypeRadio {...args} />' } },
        Default.parameters
      )),
        (rqType_stories_RqTypeRadioWithProps.parameters = Object(objectSpread2.a)(
          {
            storySource: {
              source:
                "() => {\n  const [form] = Form.useForm();\n\n  return (\n    <Form form={form}>\n      <Default disabled={boolean('disabled', false)} />\n    </Form>\n  );\n}"
            }
          },
          rqType_stories_RqTypeRadioWithProps.parameters
        ));
    },
    1143: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'CustomTabsWith', function() {
          return tabs_stories_CustomTabsWith;
        });
      var _templateObject,
        objectSpread2 = __webpack_require__(38),
        react = __webpack_require__(0),
        esm = __webpack_require__(24),
        dist_esm = __webpack_require__(109),
        blocks = __webpack_require__(10),
        colors = __webpack_require__(56),
        lib_tabs = (__webpack_require__(1117), __webpack_require__(602)),
        tabs_default = __webpack_require__.n(lib_tabs),
        taggedTemplateLiteral = __webpack_require__(19),
        styled_components_browser_esm = __webpack_require__(20),
        breakpoints = (__webpack_require__(384), __webpack_require__(53)),
        tabs_tabs = Object(styled_components_browser_esm.a)(tabs_default.a)(
          _templateObject ||
            (_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  .ant-tabs-tab {\n    display: block;\n    text-align: center;\n    background-color: white;\n    color: ',
              ';\n    border: 1px solid;\n    border-radius: 4px;\n    border-color: ',
              ';\n    padding: 4px;\n    margin: 0 10px 0 0;\n    min-width: 130px;\n\n    @media screen and (max-width: ',
              ') {\n      min-width: auto;\n    }\n  }\n\n  .ant-tabs-tab-active {\n    background-color: ',
              ';\n  }\n\n  .ant-tabs-tab.ant-tabs-tab-active .ant-tabs-tab-btn {\n    color: white;\n  }\n\n  @media screen and (max-width: ',
              ') {\n    flex-direction: column;\n  }\n}\n'
            ])),
          function(props) {
            return props.text || 'black';
          },
          function(props) {
            return 'default' === props.border ? '#999999' : props.border || '#1890ff';
          },
          breakpoints.c,
          function(props) {
            return props.color || '#1890ff';
          },
          breakpoints.c
        );
      try {
        (tabs.displayName = 'tabs'),
          (tabs.__docgenInfo = {
            description: '',
            displayName: 'tabs',
            props: {
              slot: {
                defaultValue: null,
                description: '',
                name: 'slot',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              title: {
                defaultValue: null,
                description: '',
                name: 'title',
                required: !1,
                type: { name: 'string' }
              },
              text: {
                defaultValue: null,
                description: '',
                name: 'text',
                required: !0,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'TabsType' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              defaultChecked: {
                defaultValue: null,
                description: '',
                name: 'defaultChecked',
                required: !1,
                type: { name: 'boolean' }
              },
              defaultValue: {
                defaultValue: null,
                description: '',
                name: 'defaultValue',
                required: !1,
                type: { name: 'string | number | readonly string[]' }
              },
              suppressContentEditableWarning: {
                defaultValue: null,
                description: '',
                name: 'suppressContentEditableWarning',
                required: !1,
                type: { name: 'boolean' }
              },
              suppressHydrationWarning: {
                defaultValue: null,
                description: '',
                name: 'suppressHydrationWarning',
                required: !1,
                type: { name: 'boolean' }
              },
              accessKey: {
                defaultValue: null,
                description: '',
                name: 'accessKey',
                required: !1,
                type: { name: 'string' }
              },
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              contentEditable: {
                defaultValue: null,
                description: '',
                name: 'contentEditable',
                required: !1,
                type: { name: 'Booleanish | "inherit"' }
              },
              contextMenu: {
                defaultValue: null,
                description: '',
                name: 'contextMenu',
                required: !1,
                type: { name: 'string' }
              },
              dir: {
                defaultValue: null,
                description: '',
                name: 'dir',
                required: !1,
                type: { name: 'string' }
              },
              draggable: {
                defaultValue: null,
                description: '',
                name: 'draggable',
                required: !1,
                type: { name: 'Booleanish' }
              },
              hidden: {
                defaultValue: null,
                description: '',
                name: 'hidden',
                required: !1,
                type: { name: 'boolean' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              placeholder: {
                defaultValue: null,
                description: '',
                name: 'placeholder',
                required: !1,
                type: { name: 'string' }
              },
              spellCheck: {
                defaultValue: null,
                description: '',
                name: 'spellCheck',
                required: !1,
                type: { name: 'Booleanish' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              translate: {
                defaultValue: null,
                description: '',
                name: 'translate',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              radioGroup: {
                defaultValue: null,
                description: '',
                name: 'radioGroup',
                required: !1,
                type: { name: 'string' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              about: {
                defaultValue: null,
                description: '',
                name: 'about',
                required: !1,
                type: { name: 'string' }
              },
              datatype: {
                defaultValue: null,
                description: '',
                name: 'datatype',
                required: !1,
                type: { name: 'string' }
              },
              inlist: {
                defaultValue: null,
                description: '',
                name: 'inlist',
                required: !1,
                type: { name: 'any' }
              },
              prefix: {
                defaultValue: null,
                description: '',
                name: 'prefix',
                required: !1,
                type: { name: 'string' }
              },
              property: {
                defaultValue: null,
                description: '',
                name: 'property',
                required: !1,
                type: { name: 'string' }
              },
              resource: {
                defaultValue: null,
                description: '',
                name: 'resource',
                required: !1,
                type: { name: 'string' }
              },
              typeof: {
                defaultValue: null,
                description: '',
                name: 'typeof',
                required: !1,
                type: { name: 'string' }
              },
              vocab: {
                defaultValue: null,
                description: '',
                name: 'vocab',
                required: !1,
                type: { name: 'string' }
              },
              autoCapitalize: {
                defaultValue: null,
                description: '',
                name: 'autoCapitalize',
                required: !1,
                type: { name: 'string' }
              },
              autoCorrect: {
                defaultValue: null,
                description: '',
                name: 'autoCorrect',
                required: !1,
                type: { name: 'string' }
              },
              autoSave: {
                defaultValue: null,
                description: '',
                name: 'autoSave',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              itemProp: {
                defaultValue: null,
                description: '',
                name: 'itemProp',
                required: !1,
                type: { name: 'string' }
              },
              itemScope: {
                defaultValue: null,
                description: '',
                name: 'itemScope',
                required: !1,
                type: { name: 'boolean' }
              },
              itemType: {
                defaultValue: null,
                description: '',
                name: 'itemType',
                required: !1,
                type: { name: 'string' }
              },
              itemID: {
                defaultValue: null,
                description: '',
                name: 'itemID',
                required: !1,
                type: { name: 'string' }
              },
              itemRef: {
                defaultValue: null,
                description: '',
                name: 'itemRef',
                required: !1,
                type: { name: 'string' }
              },
              results: {
                defaultValue: null,
                description: '',
                name: 'results',
                required: !1,
                type: { name: 'number' }
              },
              security: {
                defaultValue: null,
                description: '',
                name: 'security',
                required: !1,
                type: { name: 'string' }
              },
              unselectable: {
                defaultValue: null,
                description: '',
                name: 'unselectable',
                required: !1,
                type: { name: '"on" | "off"' }
              },
              inputMode: {
                defaultValue: null,
                description:
                  'Hints at the type of data that might be entered by the user while editing the element or its contents\n@see https ://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute',
                name: 'inputMode',
                required: !1,
                type: {
                  name:
                    '"text" | "none" | "tel" | "url" | "email" | "numeric" | "decimal" | "search"'
                }
              },
              is: {
                defaultValue: null,
                description:
                  'Specify that a standard HTML element should behave like a defined custom built-in element\n@see https ://html.spec.whatwg.org/multipage/custom-elements.html#attr-is',
                name: 'is',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLDivElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLDivElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLDivElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLDivElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLDivElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<HTMLDivElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLDivElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLDivElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLDivElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLDivElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLDivElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<HTMLDivElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<HTMLDivElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<HTMLDivElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<HTMLDivElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<HTMLDivElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: '(activeKey: string) => void' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<HTMLDivElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLDivElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLDivElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLDivElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLDivElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLDivElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<HTMLDivElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<HTMLDivElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<HTMLDivElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<HTMLDivElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLDivElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLDivElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLDivElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLDivElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLDivElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLDivElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLDivElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<HTMLDivElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<HTMLDivElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<HTMLDivElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<HTMLDivElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<HTMLDivElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<HTMLDivElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLDivElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLDivElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLDivElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLDivElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLDivElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<HTMLDivElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<HTMLDivElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<HTMLDivElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              size: {
                defaultValue: null,
                description: '',
                name: 'size',
                required: !1,
                type: { name: 'SizeType' }
              },
              prefixCls: {
                defaultValue: null,
                description: '',
                name: 'prefixCls',
                required: !1,
                type: { name: 'string' }
              },
              activeKey: {
                defaultValue: null,
                description: '',
                name: 'activeKey',
                required: !1,
                type: { name: 'string' }
              },
              defaultActiveKey: {
                defaultValue: null,
                description: '',
                name: 'defaultActiveKey',
                required: !1,
                type: { name: 'string' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: '"ltr" | "rtl"' }
              },
              animated: {
                defaultValue: null,
                description: '',
                name: 'animated',
                required: !1,
                type: { name: 'boolean | AnimatedConfig' }
              },
              renderTabBar: {
                defaultValue: null,
                description: '',
                name: 'renderTabBar',
                required: !1,
                type: { name: 'RenderTabBar' }
              },
              tabBarExtraContent: {
                defaultValue: null,
                description: '',
                name: 'tabBarExtraContent',
                required: !1,
                type: { name: 'TabBarExtraContent' }
              },
              tabBarGutter: {
                defaultValue: null,
                description: '',
                name: 'tabBarGutter',
                required: !1,
                type: { name: 'number' }
              },
              tabBarStyle: {
                defaultValue: null,
                description: '',
                name: 'tabBarStyle',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              tabPosition: {
                defaultValue: null,
                description: '',
                name: 'tabPosition',
                required: !1,
                type: { name: 'TabPosition' }
              },
              destroyInactiveTabPane: {
                defaultValue: null,
                description: '',
                name: 'destroyInactiveTabPane',
                required: !1,
                type: { name: 'boolean' }
              },
              onTabClick: {
                defaultValue: null,
                description: '',
                name: 'onTabClick',
                required: !1,
                type: {
                  name:
                    '(activeKey: string, e: KeyboardEvent<Element> | MouseEvent<Element, MouseEvent>) => void'
                }
              },
              onTabScroll: {
                defaultValue: null,
                description: '',
                name: 'onTabScroll',
                required: !1,
                type: { name: 'OnTabScroll' }
              },
              locale: {
                defaultValue: null,
                description: '',
                name: 'locale',
                required: !1,
                type: { name: 'TabsLocale' }
              },
              moreIcon: {
                defaultValue: null,
                description: '',
                name: 'moreIcon',
                required: !1,
                type: { name: 'ReactNode' }
              },
              moreTransitionName: {
                defaultValue: null,
                description: '@private Internal usage. Not promise will rename in future',
                name: 'moreTransitionName',
                required: !1,
                type: { name: 'string' }
              },
              hideAdd: {
                defaultValue: null,
                description: '',
                name: 'hideAdd',
                required: !1,
                type: { name: 'boolean' }
              },
              centered: {
                defaultValue: null,
                description: '',
                name: 'centered',
                required: !1,
                type: { name: 'boolean' }
              },
              addIcon: {
                defaultValue: null,
                description: '',
                name: 'addIcon',
                required: !1,
                type: { name: 'ReactNode' }
              },
              onEdit: {
                defaultValue: null,
                description: '',
                name: 'onEdit',
                required: !1,
                type: {
                  name:
                    '(e: string | KeyboardEvent<Element> | MouseEvent<Element, MouseEvent>, action: "add" | "remove") => void'
                }
              },
              border: {
                defaultValue: null,
                description: '',
                name: 'border',
                required: !0,
                type: { name: 'string' }
              },
              theme: {
                defaultValue: null,
                description: '',
                name: 'theme',
                required: !1,
                type: { name: 'any' }
              },
              as: {
                defaultValue: null,
                description: '',
                name: 'as',
                required: !1,
                type: { name: 'never' }
              },
              forwardedAs: {
                defaultValue: null,
                description: '',
                name: 'forwardedAs',
                required: !1,
                type: { name: 'never' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/components/tabs/tabs.tsx#tabs'] = {
              docgenInfo: tabs.__docgenInfo,
              name: 'tabs',
              path: 'src/components/tabs/tabs.tsx#tabs'
            });
      } catch (__react_docgen_typescript_loader_error) {}
      var TabPane = tabs_tabs.TabPane,
        Default =
          ((__webpack_exports__.default = {
            title: 'Components/Tабсы',
            component: tabs_tabs,
            decorators: [
              function(Story) {
                return react.createElement(
                  'div',
                  { style: { margin: '3em' } },
                  react.createElement(Story, null)
                );
              },
              esm.e
            ],
            argTypes: { onClick: { action: 'clicked' } },
            parameters: {
              docs: {
                page: function page() {
                  return react.createElement(
                    react.Fragment,
                    null,
                    react.createElement(blocks.h, null),
                    react.createElement(
                      blocks.g,
                      null,
                      react.createElement(
                        'a',
                        {
                          href:
                            'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/SuWorld?node-id=4126%3A19891'
                        },
                        'Ссылка на макет'
                      )
                    ),
                    react.createElement(
                      blocks.b,
                      null,
                      'Табсы позволяют переходить с вкладки на вкладку не уходя со страницы.\n              На разрешении экрана '.concat(
                        breakpoints.c,
                        ' и ниже кнопки реализованы столбиком и занимают всю ширину экрана "width: 100%"'
                      )
                    ),
                    react.createElement(blocks.e, null),
                    react.createElement(blocks.b, null, 'Созданы на базе библиотеки antd.'),
                    react.createElement(blocks.a, { story: blocks.d }),
                    react.createElement(blocks.f, null)
                  );
                }
              },
              design: {
                type: 'figma',
                url:
                  'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/Suworld?node-id=4126%3A19891'
              }
            }
          }),
          function Template(args) {
            return react.createElement(tabs_tabs, args);
          }.bind({})),
        tabs_stories_CustomTabsWith = function CustomTabsWith() {
          return react.createElement(
            Default,
            {
              onChange: Object(dist_esm.action)('onClick'),
              animated: Object(esm.a)('animated', !1),
              onClick: Object(dist_esm.action)('onClick'),
              defaultActiveKey: Object(esm.c)(
                'ключ',
                ['#owner', '#company', '#notification'],
                '#notification'
              ),
              color: Object(esm.c)(
                'цвет',
                {
                  blue: colors.a.blue,
                  default: colors.a.black,
                  yellow: colors.a.yellow,
                  red: colors.a.red,
                  green: colors.a.green
                },
                colors.a.blue
              ),
              text: Object(esm.c)(
                'цвет текста',
                { default: colors.a.black, white: '#FFFFFF' },
                colors.a.black
              ),
              border: Object(esm.c)(
                'бордер',
                {
                  blue: colors.a.blue,
                  default: colors.a.black,
                  yellow: colors.a.yellow,
                  red: colors.a.red,
                  green: colors.a.green
                },
                colors.a.blue
              )
            },
            react.createElement(
              TabPane,
              { tab: 'Данные основателя', key: '#owner' },
              react.createElement('div', null, '#owner')
            ),
            react.createElement(
              TabPane,
              { tab: 'Данные компании', key: '#company' },
              react.createElement('div', null, '#company')
            ),
            react.createElement(
              TabPane,
              { tab: 'Уведомления', key: '#notification' },
              react.createElement('div', null, '#notification')
            )
          );
        };
      tabs_stories_CustomTabsWith.parameters = Object(objectSpread2.a)(
        {
          storySource: {
            source:
              "() => {\n  const OWNER_HASH = '#owner';\n  const COMPANY_HASH = '#company';\n  const NOTIFICATION_HASH = '#notification';\n  return (\n    <Default\n      onChange={action('onClick')}\n      animated={boolean('animated', false)}\n      onClick={action('onClick')}\n      defaultActiveKey={select('ключ', ['#owner', '#company', '#notification'], '#notification')}\n      color={select(\n        'цвет',\n        {\n          blue: Colors.blue,\n          default: Colors.black,\n          yellow: Colors.yellow,\n          red: Colors.red,\n          green: Colors.green\n        },\n        Colors.blue\n      )}\n      text={select('цвет текста', { default: Colors.black, white: '#FFFFFF' }, Colors.black)}\n      border={select(\n        'бордер',\n        {\n          blue: Colors.blue,\n          default: Colors.black,\n          yellow: Colors.yellow,\n          red: Colors.red,\n          green: Colors.green\n        },\n        Colors.blue\n      )}\n      // tabPosition={select('позиционирование', ['top', 'left', 'bottom', 'right'], 'top')}\n    >\n      <TabPane tab=\"Данные основателя\" key={OWNER_HASH}>\n        <div>#owner</div>\n      </TabPane>\n      <TabPane tab=\"Данные компании\" key={COMPANY_HASH}>\n        <div>#company</div>\n      </TabPane>\n      <TabPane tab=\"Уведомления\" key={NOTIFICATION_HASH}>\n        <div>#notification</div>\n      </TabPane>\n    </Default>\n  );\n}"
          }
        },
        tabs_stories_CustomTabsWith.parameters
      );
    },
    1144: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'Default', function() {
          return Default;
        }),
        __webpack_require__.d(__webpack_exports__, 'Title', function() {
          return typography_stories_Title;
        }),
        __webpack_require__.d(__webpack_exports__, 'Subtitle', function() {
          return typography_stories_Subtitle;
        }),
        __webpack_require__.d(__webpack_exports__, 'H3', function() {
          return typography_stories_H3;
        }),
        __webpack_require__.d(__webpack_exports__, 'H4', function() {
          return typography_stories_H4;
        }),
        __webpack_require__.d(__webpack_exports__, 'Paragraph', function() {
          return typography_stories_Paragraph;
        }),
        __webpack_require__.d(__webpack_exports__, 'Prompt', function() {
          return typography_stories_Prompt;
        });
      var styled_namespaceObject = {};
      __webpack_require__.r(styled_namespaceObject),
        __webpack_require__.d(styled_namespaceObject, 'Title', function() {
          return Title;
        }),
        __webpack_require__.d(styled_namespaceObject, 'Subtitle', function() {
          return Subtitle;
        }),
        __webpack_require__.d(styled_namespaceObject, 'H3', function() {
          return H3;
        }),
        __webpack_require__.d(styled_namespaceObject, 'H4', function() {
          return H4;
        }),
        __webpack_require__.d(styled_namespaceObject, 'Paragraph', function() {
          return Paragraph;
        }),
        __webpack_require__.d(styled_namespaceObject, 'Prompt', function() {
          return Prompt;
        });
      var _templateObject,
        _templateObject2,
        _templateObject3,
        _templateObject4,
        _templateObject5,
        _templateObject6,
        objectSpread2 = __webpack_require__(38),
        react = __webpack_require__(0),
        blocks = __webpack_require__(10),
        taggedTemplateLiteral = __webpack_require__(19),
        styled_components_browser_esm = __webpack_require__(20),
        colors = __webpack_require__(56),
        breakpoints = __webpack_require__(53),
        Title = styled_components_browser_esm.a.h1(
          _templateObject ||
            (_templateObject = Object(taggedTemplateLiteral.a)([
              '\n  font-size: 38px;\n  color: ',
              ';\n  font-weight: bold;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: ',
              ') {\n    font-size: 28px;\n    margin-bottom: 20px;\n  }\n'
            ])),
          colors.a.black,
          breakpoints.c
        ),
        Subtitle = styled_components_browser_esm.a.h2(
          _templateObject2 ||
            (_templateObject2 = Object(taggedTemplateLiteral.a)([
              '\n  color: ',
              ';\n  font-weight: bold;\n  font-size: 20px;\n\n  @media screen and (max-width: ',
              ') {\n    font-size: 18px;\n  }\n'
            ])),
          colors.a.black,
          breakpoints.c
        ),
        H3 = styled_components_browser_esm.a.h3(
          _templateObject3 ||
            (_templateObject3 = Object(taggedTemplateLiteral.a)([
              '\n  color: ',
              ';\n  font-weight: bold;\n  font-size: 16px;\n'
            ])),
          colors.a.black
        ),
        H4 = styled_components_browser_esm.a.h4(
          _templateObject4 ||
            (_templateObject4 = Object(taggedTemplateLiteral.a)([
              '\n  color: ',
              ';\n  font-weight: bold;\n  font-size: 14px;\n'
            ])),
          colors.a.black
        ),
        Paragraph = styled_components_browser_esm.a.p(
          _templateObject5 ||
            (_templateObject5 = Object(taggedTemplateLiteral.a)([
              '\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 17px;\n  color: ',
              ';\n'
            ])),
          colors.a.black
        ),
        Prompt = styled_components_browser_esm.a.p(
          _templateObject6 ||
            (_templateObject6 = Object(taggedTemplateLiteral.a)([
              '\n  color: ',
              ';\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 16px;\n\n  @media screen and (max-width: ',
              ') {\n    font-size: 12px;\n    line-height: 14px;\n    font-weight: normal;\n  }\n'
            ])),
          colors.a.silver,
          breakpoints.c
        ),
        typography = styled_namespaceObject,
        Default =
          ((__webpack_exports__.default = {
            title: 'Components/Typography',
            component: typography,
            parameters: {
              docs: {
                page: function page() {
                  return react.createElement(
                    react.Fragment,
                    null,
                    react.createElement(blocks.h, null),
                    react.createElement(blocks.g, null),
                    react.createElement(
                      blocks.b,
                      null,
                      'Типография проекта. Реализован адаптив для мобильных версий'
                    ),
                    react.createElement(blocks.e, null),
                    react.createElement(blocks.a, { story: blocks.d }),
                    react.createElement(blocks.f, null)
                  );
                }
              }
            }
          }),
          function Template() {
            return react.createElement(
              'div',
              null,
              react.createElement(typography.Title, null, 'H1 Title'),
              react.createElement(typography.Subtitle, null, 'H2 Subtitle'),
              react.createElement(typography.H3, null, 'H3 headline'),
              react.createElement(typography.H4, null, 'H4 headline'),
              react.createElement(
                typography.Paragraph,
                null,
                'Paragraph ',
                react.createElement('br', null),
                ' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur delectus doloremque dolores eius eligendi fugiat illum incidunt magnam nihil officiis perferendis quae quasi qui quia quos reprehenderit temporibus, vero voluptatum. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur delectus doloremque dolores eius eligendi fugiat illum incidunt magnam nihil officiis perferendis quae quasi qui quia quos reprehenderit temporibus, vero voluptatum. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Atque distinctio eius hic perspiciatis, reiciendis repellat rerum tenetur voluptate. Aspernatur autem eligendi impedit ipsam odio odit quas repudiandae sapiente similique vitae! Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci, aliquam aliquid animi dicta dignissimos dolore doloremque ducimus facilis harum incidunt iure iusto labore laboriosam necessitatibus, quasi, repudiandae suscipit temporibus velit!'
              ),
              react.createElement(
                typography.Prompt,
                null,
                'Prompt ',
                react.createElement('br', null),
                ' Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur delectus doloremque dolores eius eligendi fugiat illum incidunt magnam nihil officiis perferendis quae quasi qui quia quos reprehenderit temporibus, vero voluptatum.'
              )
            );
          }.bind({})),
        typography_stories_Title = function TitleTemplate() {
          return react.createElement(typography.Title, null, 'H1 Title');
        }.bind({}),
        typography_stories_Subtitle = function SubtitleTemplate() {
          return react.createElement(typography.Subtitle, null, 'H2 Subtitle');
        }.bind({}),
        typography_stories_H3 = function H3Template() {
          return react.createElement(typography.H3, null, 'H3 headline');
        }.bind({}),
        typography_stories_H4 = function H4Template() {
          return react.createElement(typography.H4, null, 'H4 headline');
        }.bind({}),
        typography_stories_Paragraph = function ParagraphTemplate() {
          return react.createElement(
            typography.Paragraph,
            null,
            'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur delectus doloremque dolores eius eligendi fugiat illum incidunt magnam nihil officiis perferendis quae quasi qui quia quos reprehenderit temporibus, vero voluptatum. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur delectus doloremque dolores eius eligendi fugiat illum incidunt magnam nihil officiis perferendis quae quasi qui quia quos reprehenderit temporibus, vero voluptatum. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Atque distinctio eius hic perspiciatis, reiciendis repellat rerum tenetur voluptate. Aspernatur autem eligendi impedit ipsam odio odit quas repudiandae sapiente similique vitae! Lorem ipsum dolor sit amet, consectetur adipisicing elit. Adipisci, aliquam aliquid animi dicta dignissimos dolore doloremque ducimus facilis harum incidunt iure iusto labore laboriosam necessitatibus, quasi, repudiandae suscipit temporibus velit!'
          );
        }.bind({}),
        typography_stories_Prompt = function PromptTemplate() {
          return react.createElement(
            typography.Prompt,
            null,
            'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur delectus doloremque dolores eius eligendi fugiat illum incidunt magnam nihil officiis perferendis quae quasi qui quia quos reprehenderit temporibus, vero voluptatum.'
          );
        }.bind({});
      (Default.parameters = Object(objectSpread2.a)(
        {
          storySource: {
            source:
              '() => (\n  <div>\n    <Typography.Title>H1 Title</Typography.Title>\n    <Typography.Subtitle>H2 Subtitle</Typography.Subtitle>\n    <Typography.H3>H3 headline</Typography.H3>\n    <Typography.H4>H4 headline</Typography.H4>\n    <Typography.Paragraph>\n      Paragraph <br /> Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur delectus\n      doloremque dolores eius eligendi fugiat illum incidunt magnam nihil officiis perferendis quae\n      quasi qui quia quos reprehenderit temporibus, vero voluptatum. Lorem ipsum dolor sit amet,\n      consectetur adipisicing elit. Aspernatur delectus doloremque dolores eius eligendi fugiat\n      illum incidunt magnam nihil officiis perferendis quae quasi qui quia quos reprehenderit\n      temporibus, vero voluptatum. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Atque\n      distinctio eius hic perspiciatis, reiciendis repellat rerum tenetur voluptate. Aspernatur\n      autem eligendi impedit ipsam odio odit quas repudiandae sapiente similique vitae! Lorem ipsum\n      dolor sit amet, consectetur adipisicing elit. Adipisci, aliquam aliquid animi dicta\n      dignissimos dolore doloremque ducimus facilis harum incidunt iure iusto labore laboriosam\n      necessitatibus, quasi, repudiandae suscipit temporibus velit!\n    </Typography.Paragraph>\n    <Typography.Prompt>\n      Prompt <br /> Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur delectus\n      doloremque dolores eius eligendi fugiat illum incidunt magnam nihil officiis perferendis quae\n      quasi qui quia quos reprehenderit temporibus, vero voluptatum.\n    </Typography.Prompt>\n  </div>\n)'
          }
        },
        Default.parameters
      )),
        (typography_stories_Title.parameters = Object(objectSpread2.a)(
          { storySource: { source: '() => <Typography.Title>H1 Title</Typography.Title>' } },
          typography_stories_Title.parameters
        )),
        (typography_stories_Subtitle.parameters = Object(objectSpread2.a)(
          {
            storySource: { source: '() => <Typography.Subtitle>H2 Subtitle</Typography.Subtitle>' }
          },
          typography_stories_Subtitle.parameters
        )),
        (typography_stories_H3.parameters = Object(objectSpread2.a)(
          { storySource: { source: '() => <Typography.H3>H3 headline</Typography.H3>' } },
          typography_stories_H3.parameters
        )),
        (typography_stories_H4.parameters = Object(objectSpread2.a)(
          { storySource: { source: '() => <Typography.H4>H4 headline</Typography.H4>' } },
          typography_stories_H4.parameters
        )),
        (typography_stories_Paragraph.parameters = Object(objectSpread2.a)(
          {
            storySource: {
              source:
                '() => (\n  <Typography.Paragraph>\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur delectus doloremque dolores\n    eius eligendi fugiat illum incidunt magnam nihil officiis perferendis quae quasi qui quia quos\n    reprehenderit temporibus, vero voluptatum. Lorem ipsum dolor sit amet, consectetur adipisicing\n    elit. Aspernatur delectus doloremque dolores eius eligendi fugiat illum incidunt magnam nihil\n    officiis perferendis quae quasi qui quia quos reprehenderit temporibus, vero voluptatum. Lorem\n    ipsum dolor sit amet, consectetur adipisicing elit. Atque distinctio eius hic perspiciatis,\n    reiciendis repellat rerum tenetur voluptate. Aspernatur autem eligendi impedit ipsam odio odit\n    quas repudiandae sapiente similique vitae! Lorem ipsum dolor sit amet, consectetur adipisicing\n    elit. Adipisci, aliquam aliquid animi dicta dignissimos dolore doloremque ducimus facilis harum\n    incidunt iure iusto labore laboriosam necessitatibus, quasi, repudiandae suscipit temporibus\n    velit!\n  </Typography.Paragraph>\n)'
            }
          },
          typography_stories_Paragraph.parameters
        )),
        (typography_stories_Prompt.parameters = Object(objectSpread2.a)(
          {
            storySource: {
              source:
                '() => (\n  <Typography.Prompt>\n    Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aspernatur delectus doloremque dolores\n    eius eligendi fugiat illum incidunt magnam nihil officiis perferendis quae quasi qui quia quos\n    reprehenderit temporibus, vero voluptatum.\n  </Typography.Prompt>\n)'
            }
          },
          typography_stories_Prompt.parameters
        ));
    },
    1150: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__);
      var preview_namespaceObject = {};
      __webpack_require__.r(preview_namespaceObject),
        __webpack_require__.d(preview_namespaceObject, 'decorators', function() {
          return decorators;
        }),
        __webpack_require__.d(preview_namespaceObject, 'parameters', function() {
          return parameters;
        });
      var client_api = __webpack_require__(1161),
        esm = __webpack_require__(12),
        react = __webpack_require__(0),
        react_default = __webpack_require__.n(react),
        decorators =
          (__webpack_require__(384),
          [
            function(Story) {
              return react_default.a.createElement(Story, null);
            }
          ]),
        parameters = { actions: { argTypesRegex: '^on[A-Z].*' } };
      function ownKeys(object, enumerableOnly) {
        var keys = Object.keys(object);
        if (Object.getOwnPropertySymbols) {
          var symbols = Object.getOwnPropertySymbols(object);
          enumerableOnly &&
            (symbols = symbols.filter(function(sym) {
              return Object.getOwnPropertyDescriptor(object, sym).enumerable;
            })),
            keys.push.apply(keys, symbols);
        }
        return keys;
      }
      function _defineProperty(obj, key, value) {
        return (
          key in obj
            ? Object.defineProperty(obj, key, {
                value: value,
                enumerable: !0,
                configurable: !0,
                writable: !0
              })
            : (obj[key] = value),
          obj
        );
      }
      Object.keys(preview_namespaceObject).forEach(function(key) {
        var value = preview_namespaceObject[key];
        switch (key) {
          case 'args':
          case 'argTypes':
            return esm.a.warn('Invalid args/argTypes in config, ignoring.', JSON.stringify(value));
          case 'decorators':
            return value.forEach(function(decorator) {
              return Object(client_api.b)(decorator, !1);
            });
          case 'loaders':
            return value.forEach(function(loader) {
              return Object(client_api.c)(loader, !1);
            });
          case 'parameters':
            return Object(client_api.d)(
              (function _objectSpread(target) {
                for (var i = 1; i < arguments.length; i++) {
                  var source = null != arguments[i] ? arguments[i] : {};
                  i % 2
                    ? ownKeys(Object(source), !0).forEach(function(key) {
                        _defineProperty(target, key, source[key]);
                      })
                    : Object.getOwnPropertyDescriptors
                    ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source))
                    : ownKeys(Object(source)).forEach(function(key) {
                        Object.defineProperty(
                          target,
                          key,
                          Object.getOwnPropertyDescriptor(source, key)
                        );
                      });
                }
                return target;
              })({}, value),
              !1
            );
          case 'argTypesEnhancers':
            return value.forEach(function(enhancer) {
              return Object(client_api.a)(enhancer);
            });
          case 'globals':
          case 'globalTypes':
            var v = {};
            return (v[key] = value), Object(client_api.d)(v, !1);
          default:
            return console.log(key + ' was not supported :( !');
        }
      });
    },
    1151: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, 'NdsRadioWithProps', function() {
          return NdsRadio_stories_NdsRadioWithProps;
        });
      var objectSpread2 = __webpack_require__(38),
        react = __webpack_require__(0),
        react_default = __webpack_require__.n(react),
        esm = __webpack_require__(24),
        blocks = (__webpack_require__(182), __webpack_require__(10)),
        lib_form = (__webpack_require__(160), __webpack_require__(67)),
        form_default = __webpack_require__.n(lib_form),
        lib_radio = (__webpack_require__(393), __webpack_require__(153)),
        radio_default = __webpack_require__.n(lib_radio),
        objectWithoutProperties = __webpack_require__(167),
        ndsradio_NdsRadio =
          (__webpack_require__(384),
          function NdsRadio(_ref) {
            var disabled = _ref.disabled,
              required = _ref.required,
              props = Object(objectWithoutProperties.a)(_ref, ['disabled', 'required']);
            return react_default.a.createElement(
              form_default.a.Item,
              Object.assign({}, props, {
                rules: required && !disabled ? [{ required: !0, message: 'Обязательное поле' }] : []
              }),
              react_default.a.createElement(
                radio_default.a.Group,
                { name: 'nds' },
                react_default.a.createElement(
                  radio_default.a,
                  { value: 0, disabled: disabled },
                  '0%'
                ),
                react_default.a.createElement(
                  radio_default.a,
                  { value: 0.1, disabled: disabled },
                  '10%'
                ),
                react_default.a.createElement(
                  radio_default.a,
                  { value: 0.2, disabled: disabled },
                  '20%'
                )
              )
            );
          }),
        DefaultNdsRadio =
          ((__webpack_exports__.default = {
            title: 'Components/Радио кнопки для выбора значения НДС',
            component: ndsradio_NdsRadio,
            decorators: [
              function(Story) {
                return react.createElement(
                  'div',
                  { style: { margin: '3em' } },
                  react.createElement(Story, null)
                );
              },
              esm.e
            ],
            argTypes: { onChange: { action: 'changed' } },
            parameters: {
              docs: {
                page: function page() {
                  return react.createElement(
                    react.Fragment,
                    null,
                    react.createElement(blocks.h, null),
                    react.createElement(
                      blocks.g,
                      null,
                      react.createElement(
                        'a',
                        {
                          href:
                            'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/SuWorld?node-id=429%3A210'
                        },
                        'См в фигме'
                      )
                    ),
                    react.createElement(blocks.b, null, 'Радио кнопки для выбора значения НДС'),
                    react.createElement(blocks.e, null),
                    react.createElement(
                      blocks.b,
                      null,
                      'Выбор значения НДС (с опцией задизейблено)'
                    ),
                    react.createElement(blocks.a, { story: blocks.d, of: ndsradio_NdsRadio }),
                    react.createElement(blocks.f, null)
                  );
                }
              },
              design: {
                type: 'figma',
                url: 'https://www.figma.com/file/MmjzqY2FCWQJvL54hhr5w1/SuWorld?node-id=429%3A210'
              }
            }
          }),
          function Template(args) {
            return react.createElement(ndsradio_NdsRadio, args);
          }.bind({})),
        NdsRadio_stories_NdsRadioWithProps = function NdsRadioWithProps() {
          return react.createElement(
            'div',
            { style: { display: 'flex', width: '400px' } },
            react.createElement(DefaultNdsRadio, {
              label: Object(esm.d)('Label', 'НДС'),
              disabled: Object(esm.a)('disabled', !1),
              required: Object(esm.a)('required', !1)
            })
          );
        };
      NdsRadio_stories_NdsRadioWithProps.parameters = Object(objectSpread2.a)(
        {
          storySource: {
            source:
              "() => (\n  <div style={{ display: 'flex', width: '400px' }}>\n    <DefaultNdsRadio\n      label={text('Label', 'НДС')}\n      disabled={boolean('disabled', false)}\n      required={boolean('required', false)}\n    />\n  </div>\n)"
          }
        },
        NdsRadio_stories_NdsRadioWithProps.parameters
      );
    },
    292: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);
      function SvgQuestionCircle(props) {
        return react__WEBPACK_IMPORTED_MODULE_0__.createElement(
          'svg',
          Object.assign({ xmlns: 'http://www.w3.org/2000/svg', viewBox: '0 0 1024 1024' }, props),
          react__WEBPACK_IMPORTED_MODULE_0__.createElement('path', {
            d:
              'M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z'
          }),
          react__WEBPACK_IMPORTED_MODULE_0__.createElement('path', {
            d:
              'M623.6 316.7C593.6 290.4 554 276 512 276s-81.6 14.5-111.6 40.7C369.2 344 352 380.7 352 420v7.6c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V420c0-44.1 43.1-80 96-80s96 35.9 96 80c0 31.1-22 59.6-56.1 72.7-21.2 8.1-39.2 22.3-52.1 40.9-13.1 19-19.9 41.8-19.9 64.9V620c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-22.7a48.3 48.3 0 0130.9-44.8c59-22.7 97.1-74.7 97.1-132.5.1-39.3-17.1-76-48.3-103.3zM472 732a40 40 0 1080 0 40 40 0 10-80 0z'
          })
        );
      }
      __webpack_exports__.a = SvgQuestionCircle;
      try {
        (SvgQuestionCircle.displayName = 'SvgQuestionCircle'),
          (SvgQuestionCircle.__docgenInfo = {
            description: '',
            displayName: 'SvgQuestionCircle',
            props: {
              className: {
                defaultValue: null,
                description: '',
                name: 'className',
                required: !1,
                type: { name: 'string' }
              },
              color: {
                defaultValue: null,
                description: '',
                name: 'color',
                required: !1,
                type: { name: 'string' }
              },
              height: {
                defaultValue: null,
                description: '',
                name: 'height',
                required: !1,
                type: { name: 'string | number' }
              },
              id: {
                defaultValue: null,
                description: '',
                name: 'id',
                required: !1,
                type: { name: 'string' }
              },
              lang: {
                defaultValue: null,
                description: '',
                name: 'lang',
                required: !1,
                type: { name: 'string' }
              },
              max: {
                defaultValue: null,
                description: '',
                name: 'max',
                required: !1,
                type: { name: 'string | number' }
              },
              media: {
                defaultValue: null,
                description: '',
                name: 'media',
                required: !1,
                type: { name: 'string' }
              },
              method: {
                defaultValue: null,
                description: '',
                name: 'method',
                required: !1,
                type: { name: 'string' }
              },
              min: {
                defaultValue: null,
                description: '',
                name: 'min',
                required: !1,
                type: { name: 'string | number' }
              },
              name: {
                defaultValue: null,
                description: '',
                name: 'name',
                required: !1,
                type: { name: 'string' }
              },
              style: {
                defaultValue: null,
                description: '',
                name: 'style',
                required: !1,
                type: { name: 'CSSProperties' }
              },
              target: {
                defaultValue: null,
                description: '',
                name: 'target',
                required: !1,
                type: { name: 'string' }
              },
              type: {
                defaultValue: null,
                description: '',
                name: 'type',
                required: !1,
                type: { name: 'string' }
              },
              width: {
                defaultValue: null,
                description: '',
                name: 'width',
                required: !1,
                type: { name: 'string | number' }
              },
              role: {
                defaultValue: null,
                description: '',
                name: 'role',
                required: !1,
                type: { name: 'string' }
              },
              tabIndex: {
                defaultValue: null,
                description: '',
                name: 'tabIndex',
                required: !1,
                type: { name: 'number' }
              },
              crossOrigin: {
                defaultValue: null,
                description: '',
                name: 'crossOrigin',
                required: !1,
                type: { name: '"" | "anonymous" | "use-credentials"' }
              },
              accentHeight: {
                defaultValue: null,
                description: '',
                name: 'accentHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              accumulate: {
                defaultValue: null,
                description: '',
                name: 'accumulate',
                required: !1,
                type: { name: '"none" | "sum"' }
              },
              additive: {
                defaultValue: null,
                description: '',
                name: 'additive',
                required: !1,
                type: { name: '"sum" | "replace"' }
              },
              alignmentBaseline: {
                defaultValue: null,
                description: '',
                name: 'alignmentBaseline',
                required: !1,
                type: {
                  name:
                    '"inherit" | "middle" | "auto" | "baseline" | "before-edge" | "text-before-edge" | "central" | "after-edge" | "text-after-edge" | "ideographic" | "alphabetic" | "hanging" | "mathematical"'
                }
              },
              allowReorder: {
                defaultValue: null,
                description: '',
                name: 'allowReorder',
                required: !1,
                type: { name: '"yes" | "no"' }
              },
              alphabetic: {
                defaultValue: null,
                description: '',
                name: 'alphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              amplitude: {
                defaultValue: null,
                description: '',
                name: 'amplitude',
                required: !1,
                type: { name: 'string | number' }
              },
              arabicForm: {
                defaultValue: null,
                description: '',
                name: 'arabicForm',
                required: !1,
                type: { name: '"initial" | "medial" | "terminal" | "isolated"' }
              },
              ascent: {
                defaultValue: null,
                description: '',
                name: 'ascent',
                required: !1,
                type: { name: 'string | number' }
              },
              attributeName: {
                defaultValue: null,
                description: '',
                name: 'attributeName',
                required: !1,
                type: { name: 'string' }
              },
              attributeType: {
                defaultValue: null,
                description: '',
                name: 'attributeType',
                required: !1,
                type: { name: 'string' }
              },
              autoReverse: {
                defaultValue: null,
                description: '',
                name: 'autoReverse',
                required: !1,
                type: { name: 'Booleanish' }
              },
              azimuth: {
                defaultValue: null,
                description: '',
                name: 'azimuth',
                required: !1,
                type: { name: 'string | number' }
              },
              baseFrequency: {
                defaultValue: null,
                description: '',
                name: 'baseFrequency',
                required: !1,
                type: { name: 'string | number' }
              },
              baselineShift: {
                defaultValue: null,
                description: '',
                name: 'baselineShift',
                required: !1,
                type: { name: 'string | number' }
              },
              baseProfile: {
                defaultValue: null,
                description: '',
                name: 'baseProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              bbox: {
                defaultValue: null,
                description: '',
                name: 'bbox',
                required: !1,
                type: { name: 'string | number' }
              },
              begin: {
                defaultValue: null,
                description: '',
                name: 'begin',
                required: !1,
                type: { name: 'string | number' }
              },
              bias: {
                defaultValue: null,
                description: '',
                name: 'bias',
                required: !1,
                type: { name: 'string | number' }
              },
              by: {
                defaultValue: null,
                description: '',
                name: 'by',
                required: !1,
                type: { name: 'string | number' }
              },
              calcMode: {
                defaultValue: null,
                description: '',
                name: 'calcMode',
                required: !1,
                type: { name: 'string | number' }
              },
              capHeight: {
                defaultValue: null,
                description: '',
                name: 'capHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              clip: {
                defaultValue: null,
                description: '',
                name: 'clip',
                required: !1,
                type: { name: 'string | number' }
              },
              clipPath: {
                defaultValue: null,
                description: '',
                name: 'clipPath',
                required: !1,
                type: { name: 'string' }
              },
              clipPathUnits: {
                defaultValue: null,
                description: '',
                name: 'clipPathUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              clipRule: {
                defaultValue: null,
                description: '',
                name: 'clipRule',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolation: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolation',
                required: !1,
                type: { name: 'string | number' }
              },
              colorInterpolationFilters: {
                defaultValue: null,
                description: '',
                name: 'colorInterpolationFilters',
                required: !1,
                type: { name: '"inherit" | "auto" | "sRGB" | "linearRGB"' }
              },
              colorProfile: {
                defaultValue: null,
                description: '',
                name: 'colorProfile',
                required: !1,
                type: { name: 'string | number' }
              },
              colorRendering: {
                defaultValue: null,
                description: '',
                name: 'colorRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              contentScriptType: {
                defaultValue: null,
                description: '',
                name: 'contentScriptType',
                required: !1,
                type: { name: 'string | number' }
              },
              contentStyleType: {
                defaultValue: null,
                description: '',
                name: 'contentStyleType',
                required: !1,
                type: { name: 'string | number' }
              },
              cursor: {
                defaultValue: null,
                description: '',
                name: 'cursor',
                required: !1,
                type: { name: 'string | number' }
              },
              cx: {
                defaultValue: null,
                description: '',
                name: 'cx',
                required: !1,
                type: { name: 'string | number' }
              },
              cy: {
                defaultValue: null,
                description: '',
                name: 'cy',
                required: !1,
                type: { name: 'string | number' }
              },
              d: {
                defaultValue: null,
                description: '',
                name: 'd',
                required: !1,
                type: { name: 'string' }
              },
              decelerate: {
                defaultValue: null,
                description: '',
                name: 'decelerate',
                required: !1,
                type: { name: 'string | number' }
              },
              descent: {
                defaultValue: null,
                description: '',
                name: 'descent',
                required: !1,
                type: { name: 'string | number' }
              },
              diffuseConstant: {
                defaultValue: null,
                description: '',
                name: 'diffuseConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              direction: {
                defaultValue: null,
                description: '',
                name: 'direction',
                required: !1,
                type: { name: 'string | number' }
              },
              display: {
                defaultValue: null,
                description: '',
                name: 'display',
                required: !1,
                type: { name: 'string | number' }
              },
              divisor: {
                defaultValue: null,
                description: '',
                name: 'divisor',
                required: !1,
                type: { name: 'string | number' }
              },
              dominantBaseline: {
                defaultValue: null,
                description: '',
                name: 'dominantBaseline',
                required: !1,
                type: { name: 'string | number' }
              },
              dur: {
                defaultValue: null,
                description: '',
                name: 'dur',
                required: !1,
                type: { name: 'string | number' }
              },
              dx: {
                defaultValue: null,
                description: '',
                name: 'dx',
                required: !1,
                type: { name: 'string | number' }
              },
              dy: {
                defaultValue: null,
                description: '',
                name: 'dy',
                required: !1,
                type: { name: 'string | number' }
              },
              edgeMode: {
                defaultValue: null,
                description: '',
                name: 'edgeMode',
                required: !1,
                type: { name: 'string | number' }
              },
              elevation: {
                defaultValue: null,
                description: '',
                name: 'elevation',
                required: !1,
                type: { name: 'string | number' }
              },
              enableBackground: {
                defaultValue: null,
                description: '',
                name: 'enableBackground',
                required: !1,
                type: { name: 'string | number' }
              },
              end: {
                defaultValue: null,
                description: '',
                name: 'end',
                required: !1,
                type: { name: 'string | number' }
              },
              exponent: {
                defaultValue: null,
                description: '',
                name: 'exponent',
                required: !1,
                type: { name: 'string | number' }
              },
              externalResourcesRequired: {
                defaultValue: null,
                description: '',
                name: 'externalResourcesRequired',
                required: !1,
                type: { name: 'Booleanish' }
              },
              fill: {
                defaultValue: null,
                description: '',
                name: 'fill',
                required: !1,
                type: { name: 'string' }
              },
              fillOpacity: {
                defaultValue: null,
                description: '',
                name: 'fillOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              fillRule: {
                defaultValue: null,
                description: '',
                name: 'fillRule',
                required: !1,
                type: { name: '"inherit" | "nonzero" | "evenodd"' }
              },
              filter: {
                defaultValue: null,
                description: '',
                name: 'filter',
                required: !1,
                type: { name: 'string' }
              },
              filterRes: {
                defaultValue: null,
                description: '',
                name: 'filterRes',
                required: !1,
                type: { name: 'string | number' }
              },
              filterUnits: {
                defaultValue: null,
                description: '',
                name: 'filterUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              floodColor: {
                defaultValue: null,
                description: '',
                name: 'floodColor',
                required: !1,
                type: { name: 'string | number' }
              },
              floodOpacity: {
                defaultValue: null,
                description: '',
                name: 'floodOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              focusable: {
                defaultValue: null,
                description: '',
                name: 'focusable',
                required: !1,
                type: { name: 'Booleanish | "auto"' }
              },
              fontFamily: {
                defaultValue: null,
                description: '',
                name: 'fontFamily',
                required: !1,
                type: { name: 'string' }
              },
              fontSize: {
                defaultValue: null,
                description: '',
                name: 'fontSize',
                required: !1,
                type: { name: 'string | number' }
              },
              fontSizeAdjust: {
                defaultValue: null,
                description: '',
                name: 'fontSizeAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStretch: {
                defaultValue: null,
                description: '',
                name: 'fontStretch',
                required: !1,
                type: { name: 'string | number' }
              },
              fontStyle: {
                defaultValue: null,
                description: '',
                name: 'fontStyle',
                required: !1,
                type: { name: 'string | number' }
              },
              fontVariant: {
                defaultValue: null,
                description: '',
                name: 'fontVariant',
                required: !1,
                type: { name: 'string | number' }
              },
              fontWeight: {
                defaultValue: null,
                description: '',
                name: 'fontWeight',
                required: !1,
                type: { name: 'string | number' }
              },
              format: {
                defaultValue: null,
                description: '',
                name: 'format',
                required: !1,
                type: { name: 'string | number' }
              },
              from: {
                defaultValue: null,
                description: '',
                name: 'from',
                required: !1,
                type: { name: 'string | number' }
              },
              fx: {
                defaultValue: null,
                description: '',
                name: 'fx',
                required: !1,
                type: { name: 'string | number' }
              },
              fy: {
                defaultValue: null,
                description: '',
                name: 'fy',
                required: !1,
                type: { name: 'string | number' }
              },
              g1: {
                defaultValue: null,
                description: '',
                name: 'g1',
                required: !1,
                type: { name: 'string | number' }
              },
              g2: {
                defaultValue: null,
                description: '',
                name: 'g2',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphName: {
                defaultValue: null,
                description: '',
                name: 'glyphName',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationHorizontal: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationHorizontal',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphOrientationVertical: {
                defaultValue: null,
                description: '',
                name: 'glyphOrientationVertical',
                required: !1,
                type: { name: 'string | number' }
              },
              glyphRef: {
                defaultValue: null,
                description: '',
                name: 'glyphRef',
                required: !1,
                type: { name: 'string | number' }
              },
              gradientTransform: {
                defaultValue: null,
                description: '',
                name: 'gradientTransform',
                required: !1,
                type: { name: 'string' }
              },
              gradientUnits: {
                defaultValue: null,
                description: '',
                name: 'gradientUnits',
                required: !1,
                type: { name: 'string' }
              },
              hanging: {
                defaultValue: null,
                description: '',
                name: 'hanging',
                required: !1,
                type: { name: 'string | number' }
              },
              horizAdvX: {
                defaultValue: null,
                description: '',
                name: 'horizAdvX',
                required: !1,
                type: { name: 'string | number' }
              },
              horizOriginX: {
                defaultValue: null,
                description: '',
                name: 'horizOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              href: {
                defaultValue: null,
                description: '',
                name: 'href',
                required: !1,
                type: { name: 'string' }
              },
              ideographic: {
                defaultValue: null,
                description: '',
                name: 'ideographic',
                required: !1,
                type: { name: 'string | number' }
              },
              imageRendering: {
                defaultValue: null,
                description: '',
                name: 'imageRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              in2: {
                defaultValue: null,
                description: '',
                name: 'in2',
                required: !1,
                type: { name: 'string | number' }
              },
              in: {
                defaultValue: null,
                description: '',
                name: 'in',
                required: !1,
                type: { name: 'string' }
              },
              intercept: {
                defaultValue: null,
                description: '',
                name: 'intercept',
                required: !1,
                type: { name: 'string | number' }
              },
              k1: {
                defaultValue: null,
                description: '',
                name: 'k1',
                required: !1,
                type: { name: 'string | number' }
              },
              k2: {
                defaultValue: null,
                description: '',
                name: 'k2',
                required: !1,
                type: { name: 'string | number' }
              },
              k3: {
                defaultValue: null,
                description: '',
                name: 'k3',
                required: !1,
                type: { name: 'string | number' }
              },
              k4: {
                defaultValue: null,
                description: '',
                name: 'k4',
                required: !1,
                type: { name: 'string | number' }
              },
              k: {
                defaultValue: null,
                description: '',
                name: 'k',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelMatrix: {
                defaultValue: null,
                description: '',
                name: 'kernelMatrix',
                required: !1,
                type: { name: 'string | number' }
              },
              kernelUnitLength: {
                defaultValue: null,
                description: '',
                name: 'kernelUnitLength',
                required: !1,
                type: { name: 'string | number' }
              },
              kerning: {
                defaultValue: null,
                description: '',
                name: 'kerning',
                required: !1,
                type: { name: 'string | number' }
              },
              keyPoints: {
                defaultValue: null,
                description: '',
                name: 'keyPoints',
                required: !1,
                type: { name: 'string | number' }
              },
              keySplines: {
                defaultValue: null,
                description: '',
                name: 'keySplines',
                required: !1,
                type: { name: 'string | number' }
              },
              keyTimes: {
                defaultValue: null,
                description: '',
                name: 'keyTimes',
                required: !1,
                type: { name: 'string | number' }
              },
              lengthAdjust: {
                defaultValue: null,
                description: '',
                name: 'lengthAdjust',
                required: !1,
                type: { name: 'string | number' }
              },
              letterSpacing: {
                defaultValue: null,
                description: '',
                name: 'letterSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              lightingColor: {
                defaultValue: null,
                description: '',
                name: 'lightingColor',
                required: !1,
                type: { name: 'string | number' }
              },
              limitingConeAngle: {
                defaultValue: null,
                description: '',
                name: 'limitingConeAngle',
                required: !1,
                type: { name: 'string | number' }
              },
              local: {
                defaultValue: null,
                description: '',
                name: 'local',
                required: !1,
                type: { name: 'string | number' }
              },
              markerEnd: {
                defaultValue: null,
                description: '',
                name: 'markerEnd',
                required: !1,
                type: { name: 'string' }
              },
              markerHeight: {
                defaultValue: null,
                description: '',
                name: 'markerHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              markerMid: {
                defaultValue: null,
                description: '',
                name: 'markerMid',
                required: !1,
                type: { name: 'string' }
              },
              markerStart: {
                defaultValue: null,
                description: '',
                name: 'markerStart',
                required: !1,
                type: { name: 'string' }
              },
              markerUnits: {
                defaultValue: null,
                description: '',
                name: 'markerUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              markerWidth: {
                defaultValue: null,
                description: '',
                name: 'markerWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              mask: {
                defaultValue: null,
                description: '',
                name: 'mask',
                required: !1,
                type: { name: 'string' }
              },
              maskContentUnits: {
                defaultValue: null,
                description: '',
                name: 'maskContentUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              maskUnits: {
                defaultValue: null,
                description: '',
                name: 'maskUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              mathematical: {
                defaultValue: null,
                description: '',
                name: 'mathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              mode: {
                defaultValue: null,
                description: '',
                name: 'mode',
                required: !1,
                type: { name: 'string | number' }
              },
              numOctaves: {
                defaultValue: null,
                description: '',
                name: 'numOctaves',
                required: !1,
                type: { name: 'string | number' }
              },
              offset: {
                defaultValue: null,
                description: '',
                name: 'offset',
                required: !1,
                type: { name: 'string | number' }
              },
              opacity: {
                defaultValue: null,
                description: '',
                name: 'opacity',
                required: !1,
                type: { name: 'string | number' }
              },
              operator: {
                defaultValue: null,
                description: '',
                name: 'operator',
                required: !1,
                type: { name: 'string | number' }
              },
              order: {
                defaultValue: null,
                description: '',
                name: 'order',
                required: !1,
                type: { name: 'string | number' }
              },
              orient: {
                defaultValue: null,
                description: '',
                name: 'orient',
                required: !1,
                type: { name: 'string | number' }
              },
              orientation: {
                defaultValue: null,
                description: '',
                name: 'orientation',
                required: !1,
                type: { name: 'string | number' }
              },
              origin: {
                defaultValue: null,
                description: '',
                name: 'origin',
                required: !1,
                type: { name: 'string | number' }
              },
              overflow: {
                defaultValue: null,
                description: '',
                name: 'overflow',
                required: !1,
                type: { name: 'string | number' }
              },
              overlinePosition: {
                defaultValue: null,
                description: '',
                name: 'overlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              overlineThickness: {
                defaultValue: null,
                description: '',
                name: 'overlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              paintOrder: {
                defaultValue: null,
                description: '',
                name: 'paintOrder',
                required: !1,
                type: { name: 'string | number' }
              },
              panose1: {
                defaultValue: null,
                description: '',
                name: 'panose1',
                required: !1,
                type: { name: 'string | number' }
              },
              path: {
                defaultValue: null,
                description: '',
                name: 'path',
                required: !1,
                type: { name: 'string' }
              },
              pathLength: {
                defaultValue: null,
                description: '',
                name: 'pathLength',
                required: !1,
                type: { name: 'string | number' }
              },
              patternContentUnits: {
                defaultValue: null,
                description: '',
                name: 'patternContentUnits',
                required: !1,
                type: { name: 'string' }
              },
              patternTransform: {
                defaultValue: null,
                description: '',
                name: 'patternTransform',
                required: !1,
                type: { name: 'string | number' }
              },
              patternUnits: {
                defaultValue: null,
                description: '',
                name: 'patternUnits',
                required: !1,
                type: { name: 'string' }
              },
              pointerEvents: {
                defaultValue: null,
                description: '',
                name: 'pointerEvents',
                required: !1,
                type: { name: 'string | number' }
              },
              points: {
                defaultValue: null,
                description: '',
                name: 'points',
                required: !1,
                type: { name: 'string' }
              },
              pointsAtX: {
                defaultValue: null,
                description: '',
                name: 'pointsAtX',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtY: {
                defaultValue: null,
                description: '',
                name: 'pointsAtY',
                required: !1,
                type: { name: 'string | number' }
              },
              pointsAtZ: {
                defaultValue: null,
                description: '',
                name: 'pointsAtZ',
                required: !1,
                type: { name: 'string | number' }
              },
              preserveAlpha: {
                defaultValue: null,
                description: '',
                name: 'preserveAlpha',
                required: !1,
                type: { name: 'Booleanish' }
              },
              preserveAspectRatio: {
                defaultValue: null,
                description: '',
                name: 'preserveAspectRatio',
                required: !1,
                type: { name: 'string' }
              },
              primitiveUnits: {
                defaultValue: null,
                description: '',
                name: 'primitiveUnits',
                required: !1,
                type: { name: 'string | number' }
              },
              r: {
                defaultValue: null,
                description: '',
                name: 'r',
                required: !1,
                type: { name: 'string | number' }
              },
              radius: {
                defaultValue: null,
                description: '',
                name: 'radius',
                required: !1,
                type: { name: 'string | number' }
              },
              refX: {
                defaultValue: null,
                description: '',
                name: 'refX',
                required: !1,
                type: { name: 'string | number' }
              },
              refY: {
                defaultValue: null,
                description: '',
                name: 'refY',
                required: !1,
                type: { name: 'string | number' }
              },
              renderingIntent: {
                defaultValue: null,
                description: '',
                name: 'renderingIntent',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatCount: {
                defaultValue: null,
                description: '',
                name: 'repeatCount',
                required: !1,
                type: { name: 'string | number' }
              },
              repeatDur: {
                defaultValue: null,
                description: '',
                name: 'repeatDur',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredExtensions: {
                defaultValue: null,
                description: '',
                name: 'requiredExtensions',
                required: !1,
                type: { name: 'string | number' }
              },
              requiredFeatures: {
                defaultValue: null,
                description: '',
                name: 'requiredFeatures',
                required: !1,
                type: { name: 'string | number' }
              },
              restart: {
                defaultValue: null,
                description: '',
                name: 'restart',
                required: !1,
                type: { name: 'string | number' }
              },
              result: {
                defaultValue: null,
                description: '',
                name: 'result',
                required: !1,
                type: { name: 'string' }
              },
              rotate: {
                defaultValue: null,
                description: '',
                name: 'rotate',
                required: !1,
                type: { name: 'string | number' }
              },
              rx: {
                defaultValue: null,
                description: '',
                name: 'rx',
                required: !1,
                type: { name: 'string | number' }
              },
              ry: {
                defaultValue: null,
                description: '',
                name: 'ry',
                required: !1,
                type: { name: 'string | number' }
              },
              scale: {
                defaultValue: null,
                description: '',
                name: 'scale',
                required: !1,
                type: { name: 'string | number' }
              },
              seed: {
                defaultValue: null,
                description: '',
                name: 'seed',
                required: !1,
                type: { name: 'string | number' }
              },
              shapeRendering: {
                defaultValue: null,
                description: '',
                name: 'shapeRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              slope: {
                defaultValue: null,
                description: '',
                name: 'slope',
                required: !1,
                type: { name: 'string | number' }
              },
              spacing: {
                defaultValue: null,
                description: '',
                name: 'spacing',
                required: !1,
                type: { name: 'string | number' }
              },
              specularConstant: {
                defaultValue: null,
                description: '',
                name: 'specularConstant',
                required: !1,
                type: { name: 'string | number' }
              },
              specularExponent: {
                defaultValue: null,
                description: '',
                name: 'specularExponent',
                required: !1,
                type: { name: 'string | number' }
              },
              speed: {
                defaultValue: null,
                description: '',
                name: 'speed',
                required: !1,
                type: { name: 'string | number' }
              },
              spreadMethod: {
                defaultValue: null,
                description: '',
                name: 'spreadMethod',
                required: !1,
                type: { name: 'string' }
              },
              startOffset: {
                defaultValue: null,
                description: '',
                name: 'startOffset',
                required: !1,
                type: { name: 'string | number' }
              },
              stdDeviation: {
                defaultValue: null,
                description: '',
                name: 'stdDeviation',
                required: !1,
                type: { name: 'string | number' }
              },
              stemh: {
                defaultValue: null,
                description: '',
                name: 'stemh',
                required: !1,
                type: { name: 'string | number' }
              },
              stemv: {
                defaultValue: null,
                description: '',
                name: 'stemv',
                required: !1,
                type: { name: 'string | number' }
              },
              stitchTiles: {
                defaultValue: null,
                description: '',
                name: 'stitchTiles',
                required: !1,
                type: { name: 'string | number' }
              },
              stopColor: {
                defaultValue: null,
                description: '',
                name: 'stopColor',
                required: !1,
                type: { name: 'string' }
              },
              stopOpacity: {
                defaultValue: null,
                description: '',
                name: 'stopOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughPosition: {
                defaultValue: null,
                description: '',
                name: 'strikethroughPosition',
                required: !1,
                type: { name: 'string | number' }
              },
              strikethroughThickness: {
                defaultValue: null,
                description: '',
                name: 'strikethroughThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              string: {
                defaultValue: null,
                description: '',
                name: 'string',
                required: !1,
                type: { name: 'string | number' }
              },
              stroke: {
                defaultValue: null,
                description: '',
                name: 'stroke',
                required: !1,
                type: { name: 'string' }
              },
              strokeDasharray: {
                defaultValue: null,
                description: '',
                name: 'strokeDasharray',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeDashoffset: {
                defaultValue: null,
                description: '',
                name: 'strokeDashoffset',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeLinecap: {
                defaultValue: null,
                description: '',
                name: 'strokeLinecap',
                required: !1,
                type: { name: '"inherit" | "round" | "butt" | "square"' }
              },
              strokeLinejoin: {
                defaultValue: null,
                description: '',
                name: 'strokeLinejoin',
                required: !1,
                type: { name: '"inherit" | "round" | "miter" | "bevel"' }
              },
              strokeMiterlimit: {
                defaultValue: null,
                description: '',
                name: 'strokeMiterlimit',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeOpacity: {
                defaultValue: null,
                description: '',
                name: 'strokeOpacity',
                required: !1,
                type: { name: 'string | number' }
              },
              strokeWidth: {
                defaultValue: null,
                description: '',
                name: 'strokeWidth',
                required: !1,
                type: { name: 'string | number' }
              },
              surfaceScale: {
                defaultValue: null,
                description: '',
                name: 'surfaceScale',
                required: !1,
                type: { name: 'string | number' }
              },
              systemLanguage: {
                defaultValue: null,
                description: '',
                name: 'systemLanguage',
                required: !1,
                type: { name: 'string | number' }
              },
              tableValues: {
                defaultValue: null,
                description: '',
                name: 'tableValues',
                required: !1,
                type: { name: 'string | number' }
              },
              targetX: {
                defaultValue: null,
                description: '',
                name: 'targetX',
                required: !1,
                type: { name: 'string | number' }
              },
              targetY: {
                defaultValue: null,
                description: '',
                name: 'targetY',
                required: !1,
                type: { name: 'string | number' }
              },
              textAnchor: {
                defaultValue: null,
                description: '',
                name: 'textAnchor',
                required: !1,
                type: { name: 'string' }
              },
              textDecoration: {
                defaultValue: null,
                description: '',
                name: 'textDecoration',
                required: !1,
                type: { name: 'string | number' }
              },
              textLength: {
                defaultValue: null,
                description: '',
                name: 'textLength',
                required: !1,
                type: { name: 'string | number' }
              },
              textRendering: {
                defaultValue: null,
                description: '',
                name: 'textRendering',
                required: !1,
                type: { name: 'string | number' }
              },
              to: {
                defaultValue: null,
                description: '',
                name: 'to',
                required: !1,
                type: { name: 'string | number' }
              },
              transform: {
                defaultValue: null,
                description: '',
                name: 'transform',
                required: !1,
                type: { name: 'string' }
              },
              u1: {
                defaultValue: null,
                description: '',
                name: 'u1',
                required: !1,
                type: { name: 'string | number' }
              },
              u2: {
                defaultValue: null,
                description: '',
                name: 'u2',
                required: !1,
                type: { name: 'string | number' }
              },
              underlinePosition: {
                defaultValue: null,
                description: '',
                name: 'underlinePosition',
                required: !1,
                type: { name: 'string | number' }
              },
              underlineThickness: {
                defaultValue: null,
                description: '',
                name: 'underlineThickness',
                required: !1,
                type: { name: 'string | number' }
              },
              unicode: {
                defaultValue: null,
                description: '',
                name: 'unicode',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeBidi: {
                defaultValue: null,
                description: '',
                name: 'unicodeBidi',
                required: !1,
                type: { name: 'string | number' }
              },
              unicodeRange: {
                defaultValue: null,
                description: '',
                name: 'unicodeRange',
                required: !1,
                type: { name: 'string | number' }
              },
              unitsPerEm: {
                defaultValue: null,
                description: '',
                name: 'unitsPerEm',
                required: !1,
                type: { name: 'string | number' }
              },
              vAlphabetic: {
                defaultValue: null,
                description: '',
                name: 'vAlphabetic',
                required: !1,
                type: { name: 'string | number' }
              },
              values: {
                defaultValue: null,
                description: '',
                name: 'values',
                required: !1,
                type: { name: 'string' }
              },
              vectorEffect: {
                defaultValue: null,
                description: '',
                name: 'vectorEffect',
                required: !1,
                type: { name: 'string | number' }
              },
              version: {
                defaultValue: null,
                description: '',
                name: 'version',
                required: !1,
                type: { name: 'string' }
              },
              vertAdvY: {
                defaultValue: null,
                description: '',
                name: 'vertAdvY',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginX: {
                defaultValue: null,
                description: '',
                name: 'vertOriginX',
                required: !1,
                type: { name: 'string | number' }
              },
              vertOriginY: {
                defaultValue: null,
                description: '',
                name: 'vertOriginY',
                required: !1,
                type: { name: 'string | number' }
              },
              vHanging: {
                defaultValue: null,
                description: '',
                name: 'vHanging',
                required: !1,
                type: { name: 'string | number' }
              },
              vIdeographic: {
                defaultValue: null,
                description: '',
                name: 'vIdeographic',
                required: !1,
                type: { name: 'string | number' }
              },
              viewBox: {
                defaultValue: null,
                description: '',
                name: 'viewBox',
                required: !1,
                type: { name: 'string' }
              },
              viewTarget: {
                defaultValue: null,
                description: '',
                name: 'viewTarget',
                required: !1,
                type: { name: 'string | number' }
              },
              visibility: {
                defaultValue: null,
                description: '',
                name: 'visibility',
                required: !1,
                type: { name: 'string | number' }
              },
              vMathematical: {
                defaultValue: null,
                description: '',
                name: 'vMathematical',
                required: !1,
                type: { name: 'string | number' }
              },
              widths: {
                defaultValue: null,
                description: '',
                name: 'widths',
                required: !1,
                type: { name: 'string | number' }
              },
              wordSpacing: {
                defaultValue: null,
                description: '',
                name: 'wordSpacing',
                required: !1,
                type: { name: 'string | number' }
              },
              writingMode: {
                defaultValue: null,
                description: '',
                name: 'writingMode',
                required: !1,
                type: { name: 'string | number' }
              },
              x1: {
                defaultValue: null,
                description: '',
                name: 'x1',
                required: !1,
                type: { name: 'string | number' }
              },
              x2: {
                defaultValue: null,
                description: '',
                name: 'x2',
                required: !1,
                type: { name: 'string | number' }
              },
              x: {
                defaultValue: null,
                description: '',
                name: 'x',
                required: !1,
                type: { name: 'string | number' }
              },
              xChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'xChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              xHeight: {
                defaultValue: null,
                description: '',
                name: 'xHeight',
                required: !1,
                type: { name: 'string | number' }
              },
              xlinkActuate: {
                defaultValue: null,
                description: '',
                name: 'xlinkActuate',
                required: !1,
                type: { name: 'string' }
              },
              xlinkArcrole: {
                defaultValue: null,
                description: '',
                name: 'xlinkArcrole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkHref: {
                defaultValue: null,
                description: '',
                name: 'xlinkHref',
                required: !1,
                type: { name: 'string' }
              },
              xlinkRole: {
                defaultValue: null,
                description: '',
                name: 'xlinkRole',
                required: !1,
                type: { name: 'string' }
              },
              xlinkShow: {
                defaultValue: null,
                description: '',
                name: 'xlinkShow',
                required: !1,
                type: { name: 'string' }
              },
              xlinkTitle: {
                defaultValue: null,
                description: '',
                name: 'xlinkTitle',
                required: !1,
                type: { name: 'string' }
              },
              xlinkType: {
                defaultValue: null,
                description: '',
                name: 'xlinkType',
                required: !1,
                type: { name: 'string' }
              },
              xmlBase: {
                defaultValue: null,
                description: '',
                name: 'xmlBase',
                required: !1,
                type: { name: 'string' }
              },
              xmlLang: {
                defaultValue: null,
                description: '',
                name: 'xmlLang',
                required: !1,
                type: { name: 'string' }
              },
              xmlns: {
                defaultValue: null,
                description: '',
                name: 'xmlns',
                required: !1,
                type: { name: 'string' }
              },
              xmlnsXlink: {
                defaultValue: null,
                description: '',
                name: 'xmlnsXlink',
                required: !1,
                type: { name: 'string' }
              },
              xmlSpace: {
                defaultValue: null,
                description: '',
                name: 'xmlSpace',
                required: !1,
                type: { name: 'string' }
              },
              y1: {
                defaultValue: null,
                description: '',
                name: 'y1',
                required: !1,
                type: { name: 'string | number' }
              },
              y2: {
                defaultValue: null,
                description: '',
                name: 'y2',
                required: !1,
                type: { name: 'string | number' }
              },
              y: {
                defaultValue: null,
                description: '',
                name: 'y',
                required: !1,
                type: { name: 'string | number' }
              },
              yChannelSelector: {
                defaultValue: null,
                description: '',
                name: 'yChannelSelector',
                required: !1,
                type: { name: 'string' }
              },
              z: {
                defaultValue: null,
                description: '',
                name: 'z',
                required: !1,
                type: { name: 'string | number' }
              },
              zoomAndPan: {
                defaultValue: null,
                description: '',
                name: 'zoomAndPan',
                required: !1,
                type: { name: 'string' }
              },
              'aria-activedescendant': {
                defaultValue: null,
                description:
                  'Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.',
                name: 'aria-activedescendant',
                required: !1,
                type: { name: 'string' }
              },
              'aria-atomic': {
                defaultValue: null,
                description:
                  'Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.',
                name: 'aria-atomic',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-autocomplete': {
                defaultValue: null,
                description:
                  "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made.",
                name: 'aria-autocomplete',
                required: !1,
                type: { name: '"none" | "inline" | "list" | "both"' }
              },
              'aria-busy': {
                defaultValue: null,
                description:
                  'Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.',
                name: 'aria-busy',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-checked': {
                defaultValue: null,
                description:
                  'Indicates the current "checked" state of checkboxes, radio buttons, and other widgets.\n@see aria-pressed\n@see aria-selected.',
                name: 'aria-checked',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-colcount': {
                defaultValue: null,
                description:
                  'Defines the total number of columns in a table, grid, or treegrid.\n@see aria-colindex.',
                name: 'aria-colcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colindex': {
                defaultValue: null,
                description:
                  "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.\n@see aria-colcount\n@see aria-colspan.",
                name: 'aria-colindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-colspan': {
                defaultValue: null,
                description:
                  'Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-colindex\n@see aria-rowspan.',
                name: 'aria-colspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-controls': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) whose contents or presence are controlled by the current element.\n@see aria-owns.',
                name: 'aria-controls',
                required: !1,
                type: { name: 'string' }
              },
              'aria-current': {
                defaultValue: null,
                description:
                  'Indicates the element that represents the current item within a container or set of related elements.',
                name: 'aria-current',
                required: !1,
                type: {
                  name:
                    'boolean | "time" | "true" | "false" | "page" | "step" | "location" | "date"'
                }
              },
              'aria-describedby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that describes the object.\n@see aria-labelledby',
                name: 'aria-describedby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-details': {
                defaultValue: null,
                description:
                  'Identifies the element that provides a detailed, extended description for the object.\n@see aria-describedby.',
                name: 'aria-details',
                required: !1,
                type: { name: 'string' }
              },
              'aria-disabled': {
                defaultValue: null,
                description:
                  'Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.\n@see aria-hidden\n@see aria-readonly.',
                name: 'aria-disabled',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-dropeffect': {
                defaultValue: null,
                description:
                  'Indicates what functions can be performed when a dragged object is released on the drop target.\n@deprecated in ARIA 1.1',
                name: 'aria-dropeffect',
                required: !1,
                type: { name: '"link" | "none" | "copy" | "execute" | "move" | "popup"' }
              },
              'aria-errormessage': {
                defaultValue: null,
                description:
                  'Identifies the element that provides an error message for the object.\n@see aria-invalid\n@see aria-describedby.',
                name: 'aria-errormessage',
                required: !1,
                type: { name: 'string' }
              },
              'aria-expanded': {
                defaultValue: null,
                description:
                  'Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.',
                name: 'aria-expanded',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-flowto': {
                defaultValue: null,
                description:
                  "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order.",
                name: 'aria-flowto',
                required: !1,
                type: { name: 'string' }
              },
              'aria-grabbed': {
                defaultValue: null,
                description:
                  'Indicates an element\'s "grabbed" state in a drag-and-drop operation.\n@deprecated in ARIA 1.1',
                name: 'aria-grabbed',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-haspopup': {
                defaultValue: null,
                description:
                  'Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.',
                name: 'aria-haspopup',
                required: !1,
                type: {
                  name:
                    'boolean | "dialog" | "menu" | "true" | "false" | "listbox" | "tree" | "grid"'
                }
              },
              'aria-hidden': {
                defaultValue: null,
                description:
                  'Indicates whether the element is exposed to an accessibility API.\n@see aria-disabled.',
                name: 'aria-hidden',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-invalid': {
                defaultValue: null,
                description:
                  'Indicates the entered value does not conform to the format expected by the application.\n@see aria-errormessage.',
                name: 'aria-invalid',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "grammar" | "spelling"' }
              },
              'aria-keyshortcuts': {
                defaultValue: null,
                description:
                  'Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.',
                name: 'aria-keyshortcuts',
                required: !1,
                type: { name: 'string' }
              },
              'aria-label': {
                defaultValue: null,
                description:
                  'Defines a string value that labels the current element.\n@see aria-labelledby.',
                name: 'aria-label',
                required: !1,
                type: { name: 'string' }
              },
              'aria-labelledby': {
                defaultValue: null,
                description:
                  'Identifies the element (or elements) that labels the current element.\n@see aria-describedby.',
                name: 'aria-labelledby',
                required: !1,
                type: { name: 'string' }
              },
              'aria-level': {
                defaultValue: null,
                description: 'Defines the hierarchical level of an element within a structure.',
                name: 'aria-level',
                required: !1,
                type: { name: 'number' }
              },
              'aria-live': {
                defaultValue: null,
                description:
                  'Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.',
                name: 'aria-live',
                required: !1,
                type: { name: '"off" | "assertive" | "polite"' }
              },
              'aria-modal': {
                defaultValue: null,
                description: 'Indicates whether an element is modal when displayed.',
                name: 'aria-modal',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiline': {
                defaultValue: null,
                description:
                  'Indicates whether a text box accepts multiple lines of input or only a single line.',
                name: 'aria-multiline',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-multiselectable': {
                defaultValue: null,
                description:
                  'Indicates that the user may select more than one item from the current selectable descendants.',
                name: 'aria-multiselectable',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-orientation': {
                defaultValue: null,
                description:
                  "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
                name: 'aria-orientation',
                required: !1,
                type: { name: '"horizontal" | "vertical"' }
              },
              'aria-owns': {
                defaultValue: null,
                description:
                  'Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship.\n@see aria-controls.',
                name: 'aria-owns',
                required: !1,
                type: { name: 'string' }
              },
              'aria-placeholder': {
                defaultValue: null,
                description:
                  'Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format.',
                name: 'aria-placeholder',
                required: !1,
                type: { name: 'string' }
              },
              'aria-posinset': {
                defaultValue: null,
                description:
                  "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-setsize.",
                name: 'aria-posinset',
                required: !1,
                type: { name: 'number' }
              },
              'aria-pressed': {
                defaultValue: null,
                description:
                  'Indicates the current "pressed" state of toggle buttons.\n@see aria-checked\n@see aria-selected.',
                name: 'aria-pressed',
                required: !1,
                type: { name: 'boolean | "true" | "false" | "mixed"' }
              },
              'aria-readonly': {
                defaultValue: null,
                description:
                  'Indicates that the element is not editable, but is otherwise operable.\n@see aria-disabled.',
                name: 'aria-readonly',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-relevant': {
                defaultValue: null,
                description:
                  'Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.\n@see aria-atomic.',
                name: 'aria-relevant',
                required: !1,
                type: {
                  name:
                    '"text" | "additions" | "additions removals" | "additions text" | "all" | "removals" | "removals additions" | "removals text" | "text additions" | "text removals"'
                }
              },
              'aria-required': {
                defaultValue: null,
                description:
                  'Indicates that user input is required on the element before a form may be submitted.',
                name: 'aria-required',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-roledescription': {
                defaultValue: null,
                description:
                  'Defines a human-readable, author-localized description for the role of an element.',
                name: 'aria-roledescription',
                required: !1,
                type: { name: 'string' }
              },
              'aria-rowcount': {
                defaultValue: null,
                description:
                  'Defines the total number of rows in a table, grid, or treegrid.\n@see aria-rowindex.',
                name: 'aria-rowcount',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowindex': {
                defaultValue: null,
                description:
                  "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.\n@see aria-rowcount\n@see aria-rowspan.",
                name: 'aria-rowindex',
                required: !1,
                type: { name: 'number' }
              },
              'aria-rowspan': {
                defaultValue: null,
                description:
                  'Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.\n@see aria-rowindex\n@see aria-colspan.',
                name: 'aria-rowspan',
                required: !1,
                type: { name: 'number' }
              },
              'aria-selected': {
                defaultValue: null,
                description:
                  'Indicates the current "selected" state of various widgets.\n@see aria-checked\n@see aria-pressed.',
                name: 'aria-selected',
                required: !1,
                type: { name: 'boolean | "true" | "false"' }
              },
              'aria-setsize': {
                defaultValue: null,
                description:
                  'Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.\n@see aria-posinset.',
                name: 'aria-setsize',
                required: !1,
                type: { name: 'number' }
              },
              'aria-sort': {
                defaultValue: null,
                description:
                  'Indicates if items in a table or grid are sorted in ascending or descending order.',
                name: 'aria-sort',
                required: !1,
                type: { name: '"none" | "ascending" | "descending" | "other"' }
              },
              'aria-valuemax': {
                defaultValue: null,
                description: 'Defines the maximum allowed value for a range widget.',
                name: 'aria-valuemax',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuemin': {
                defaultValue: null,
                description: 'Defines the minimum allowed value for a range widget.',
                name: 'aria-valuemin',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuenow': {
                defaultValue: null,
                description: 'Defines the current value for a range widget.\n@see aria-valuetext.',
                name: 'aria-valuenow',
                required: !1,
                type: { name: 'number' }
              },
              'aria-valuetext': {
                defaultValue: null,
                description:
                  'Defines the human readable text alternative of aria-valuenow for a range widget.',
                name: 'aria-valuetext',
                required: !1,
                type: { name: 'string' }
              },
              dangerouslySetInnerHTML: {
                defaultValue: null,
                description: '',
                name: 'dangerouslySetInnerHTML',
                required: !1,
                type: { name: '{ __html: string; }' }
              },
              onCopy: {
                defaultValue: null,
                description: '',
                name: 'onCopy',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCopyCapture: {
                defaultValue: null,
                description: '',
                name: 'onCopyCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCut: {
                defaultValue: null,
                description: '',
                name: 'onCut',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCutCapture: {
                defaultValue: null,
                description: '',
                name: 'onCutCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPaste: {
                defaultValue: null,
                description: '',
                name: 'onPaste',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onPasteCapture: {
                defaultValue: null,
                description: '',
                name: 'onPasteCapture',
                required: !1,
                type: { name: 'ClipboardEventHandler<SVGSVGElement>' }
              },
              onCompositionEnd: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEnd',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionEndCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStart: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStart',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionStartCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdate: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdate',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onCompositionUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onCompositionUpdateCapture',
                required: !1,
                type: { name: 'CompositionEventHandler<SVGSVGElement>' }
              },
              onFocus: {
                defaultValue: null,
                description: '',
                name: 'onFocus',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onFocusCapture: {
                defaultValue: null,
                description: '',
                name: 'onFocusCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlur: {
                defaultValue: null,
                description: '',
                name: 'onBlur',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onBlurCapture: {
                defaultValue: null,
                description: '',
                name: 'onBlurCapture',
                required: !1,
                type: { name: 'FocusEventHandler<SVGSVGElement>' }
              },
              onChange: {
                defaultValue: null,
                description: '',
                name: 'onChange',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onChangeCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInput: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onBeforeInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onBeforeInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInput: {
                defaultValue: null,
                description: '',
                name: 'onInput',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInputCapture: {
                defaultValue: null,
                description: '',
                name: 'onInputCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onReset: {
                defaultValue: null,
                description: '',
                name: 'onReset',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onResetCapture: {
                defaultValue: null,
                description: '',
                name: 'onResetCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmit: {
                defaultValue: null,
                description: '',
                name: 'onSubmit',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onSubmitCapture: {
                defaultValue: null,
                description: '',
                name: 'onSubmitCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalid: {
                defaultValue: null,
                description: '',
                name: 'onInvalid',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onInvalidCapture: {
                defaultValue: null,
                description: '',
                name: 'onInvalidCapture',
                required: !1,
                type: { name: 'FormEventHandler<SVGSVGElement>' }
              },
              onLoad: {
                defaultValue: null,
                description: '',
                name: 'onLoad',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onError: {
                defaultValue: null,
                description: '',
                name: 'onError',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onErrorCapture: {
                defaultValue: null,
                description: '',
                name: 'onErrorCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onKeyDown: {
                defaultValue: null,
                description: '',
                name: 'onKeyDown',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyDownCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPress: {
                defaultValue: null,
                description: '',
                name: 'onKeyPress',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyPressCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyPressCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUp: {
                defaultValue: null,
                description: '',
                name: 'onKeyUp',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onKeyUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onKeyUpCapture',
                required: !1,
                type: { name: 'KeyboardEventHandler<SVGSVGElement>' }
              },
              onAbort: {
                defaultValue: null,
                description: '',
                name: 'onAbort',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAbortCapture: {
                defaultValue: null,
                description: '',
                name: 'onAbortCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlay: {
                defaultValue: null,
                description: '',
                name: 'onCanPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThrough: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThrough',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onCanPlayThroughCapture: {
                defaultValue: null,
                description: '',
                name: 'onCanPlayThroughCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChange: {
                defaultValue: null,
                description: '',
                name: 'onDurationChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onDurationChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onDurationChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptied: {
                defaultValue: null,
                description: '',
                name: 'onEmptied',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEmptiedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEmptiedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncrypted: {
                defaultValue: null,
                description: '',
                name: 'onEncrypted',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEncryptedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEncryptedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEnded: {
                defaultValue: null,
                description: '',
                name: 'onEnded',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onEndedCapture: {
                defaultValue: null,
                description: '',
                name: 'onEndedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedData: {
                defaultValue: null,
                description: '',
                name: 'onLoadedData',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedDataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedDataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadata: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadata',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadedMetadataCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadedMetadataCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStart: {
                defaultValue: null,
                description: '',
                name: 'onLoadStart',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onLoadStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onLoadStartCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPause: {
                defaultValue: null,
                description: '',
                name: 'onPause',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPauseCapture: {
                defaultValue: null,
                description: '',
                name: 'onPauseCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlay: {
                defaultValue: null,
                description: '',
                name: 'onPlay',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlaying: {
                defaultValue: null,
                description: '',
                name: 'onPlaying',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onPlayingCapture: {
                defaultValue: null,
                description: '',
                name: 'onPlayingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgress: {
                defaultValue: null,
                description: '',
                name: 'onProgress',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onProgressCapture: {
                defaultValue: null,
                description: '',
                name: 'onProgressCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChange: {
                defaultValue: null,
                description: '',
                name: 'onRateChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onRateChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onRateChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeked: {
                defaultValue: null,
                description: '',
                name: 'onSeeked',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekedCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekedCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeeking: {
                defaultValue: null,
                description: '',
                name: 'onSeeking',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSeekingCapture: {
                defaultValue: null,
                description: '',
                name: 'onSeekingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalled: {
                defaultValue: null,
                description: '',
                name: 'onStalled',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onStalledCapture: {
                defaultValue: null,
                description: '',
                name: 'onStalledCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspend: {
                defaultValue: null,
                description: '',
                name: 'onSuspend',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSuspendCapture: {
                defaultValue: null,
                description: '',
                name: 'onSuspendCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdate: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdate',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTimeUpdateCapture: {
                defaultValue: null,
                description: '',
                name: 'onTimeUpdateCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChange: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChange',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onVolumeChangeCapture: {
                defaultValue: null,
                description: '',
                name: 'onVolumeChangeCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaiting: {
                defaultValue: null,
                description: '',
                name: 'onWaiting',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onWaitingCapture: {
                defaultValue: null,
                description: '',
                name: 'onWaitingCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onAuxClick: {
                defaultValue: null,
                description: '',
                name: 'onAuxClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onAuxClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onAuxClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClick: {
                defaultValue: null,
                description: '',
                name: 'onClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenu: {
                defaultValue: null,
                description: '',
                name: 'onContextMenu',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onContextMenuCapture: {
                defaultValue: null,
                description: '',
                name: 'onContextMenuCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClick: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClick',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDoubleClickCapture: {
                defaultValue: null,
                description: '',
                name: 'onDoubleClickCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onDrag: {
                defaultValue: null,
                description: '',
                name: 'onDrag',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnd: {
                defaultValue: null,
                description: '',
                name: 'onDragEnd',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEndCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnter: {
                defaultValue: null,
                description: '',
                name: 'onDragEnter',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragEnterCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExit: {
                defaultValue: null,
                description: '',
                name: 'onDragExit',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragExitCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragExitCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeave: {
                defaultValue: null,
                description: '',
                name: 'onDragLeave',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragLeaveCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOver: {
                defaultValue: null,
                description: '',
                name: 'onDragOver',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragOverCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStart: {
                defaultValue: null,
                description: '',
                name: 'onDragStart',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDragStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onDragStartCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDrop: {
                defaultValue: null,
                description: '',
                name: 'onDrop',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onDropCapture: {
                defaultValue: null,
                description: '',
                name: 'onDropCapture',
                required: !1,
                type: { name: 'DragEventHandler<SVGSVGElement>' }
              },
              onMouseDown: {
                defaultValue: null,
                description: '',
                name: 'onMouseDown',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseDownCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseEnter: {
                defaultValue: null,
                description: '',
                name: 'onMouseEnter',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseLeave: {
                defaultValue: null,
                description: '',
                name: 'onMouseLeave',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMove: {
                defaultValue: null,
                description: '',
                name: 'onMouseMove',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseMoveCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOut: {
                defaultValue: null,
                description: '',
                name: 'onMouseOut',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOutCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOver: {
                defaultValue: null,
                description: '',
                name: 'onMouseOver',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseOverCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUp: {
                defaultValue: null,
                description: '',
                name: 'onMouseUp',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onMouseUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onMouseUpCapture',
                required: !1,
                type: { name: 'MouseEventHandler<SVGSVGElement>' }
              },
              onSelect: {
                defaultValue: null,
                description: '',
                name: 'onSelect',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onSelectCapture: {
                defaultValue: null,
                description: '',
                name: 'onSelectCapture',
                required: !1,
                type: { name: 'ReactEventHandler<SVGSVGElement>' }
              },
              onTouchCancel: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancel',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchCancelCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEnd: {
                defaultValue: null,
                description: '',
                name: 'onTouchEnd',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchEndCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMove: {
                defaultValue: null,
                description: '',
                name: 'onTouchMove',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchMoveCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStart: {
                defaultValue: null,
                description: '',
                name: 'onTouchStart',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onTouchStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onTouchStartCapture',
                required: !1,
                type: { name: 'TouchEventHandler<SVGSVGElement>' }
              },
              onPointerDown: {
                defaultValue: null,
                description: '',
                name: 'onPointerDown',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerDownCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerDownCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMove: {
                defaultValue: null,
                description: '',
                name: 'onPointerMove',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerMoveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerMoveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUp: {
                defaultValue: null,
                description: '',
                name: 'onPointerUp',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerUpCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerUpCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancel: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancel',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerCancelCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerCancelCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnter: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnter',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerEnterCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerEnterCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeave: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeave',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerLeaveCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerLeaveCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOver: {
                defaultValue: null,
                description: '',
                name: 'onPointerOver',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOverCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOverCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOut: {
                defaultValue: null,
                description: '',
                name: 'onPointerOut',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onPointerOutCapture: {
                defaultValue: null,
                description: '',
                name: 'onPointerOutCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onGotPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onGotPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onLostPointerCaptureCapture: {
                defaultValue: null,
                description: '',
                name: 'onLostPointerCaptureCapture',
                required: !1,
                type: { name: 'PointerEventHandler<SVGSVGElement>' }
              },
              onScroll: {
                defaultValue: null,
                description: '',
                name: 'onScroll',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onScrollCapture: {
                defaultValue: null,
                description: '',
                name: 'onScrollCapture',
                required: !1,
                type: { name: 'UIEventHandler<SVGSVGElement>' }
              },
              onWheel: {
                defaultValue: null,
                description: '',
                name: 'onWheel',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onWheelCapture: {
                defaultValue: null,
                description: '',
                name: 'onWheelCapture',
                required: !1,
                type: { name: 'WheelEventHandler<SVGSVGElement>' }
              },
              onAnimationStart: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStart',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationStartCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationStartCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEnd: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEnd',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationEndCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIteration: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIteration',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onAnimationIterationCapture: {
                defaultValue: null,
                description: '',
                name: 'onAnimationIterationCapture',
                required: !1,
                type: { name: 'AnimationEventHandler<SVGSVGElement>' }
              },
              onTransitionEnd: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEnd',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              onTransitionEndCapture: {
                defaultValue: null,
                description: '',
                name: 'onTransitionEndCapture',
                required: !1,
                type: { name: 'TransitionEventHandler<SVGSVGElement>' }
              },
              css: {
                defaultValue: null,
                description: '',
                name: 'css',
                required: !1,
                type: { name: 'InterpolationWithTheme<any>' }
              },
              ref: {
                defaultValue: null,
                description: '',
                name: 'ref',
                required: !1,
                type: { name: 'LegacyRef<SVGSVGElement>' }
              },
              key: {
                defaultValue: null,
                description: '',
                name: 'key',
                required: !1,
                type: { name: 'Key' }
              }
            }
          }),
          'undefined' != typeof STORYBOOK_REACT_CLASSES &&
            (STORYBOOK_REACT_CLASSES['src/icons/QuestionCircle.tsx#SvgQuestionCircle'] = {
              docgenInfo: SvgQuestionCircle.__docgenInfo,
              name: 'SvgQuestionCircle',
              path: 'src/icons/QuestionCircle.tsx#SvgQuestionCircle'
            });
      } catch (__react_docgen_typescript_loader_error) {}
    },
    53: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.d(__webpack_exports__, 'c', function() {
        return xs;
      }),
        __webpack_require__.d(__webpack_exports__, 'a', function() {
          return md;
        }),
        __webpack_require__.d(__webpack_exports__, 'b', function() {
          return xl;
        });
      var xs = '480px',
        md = '768px',
        xl = '1200px';
    },
    56: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      var Colors;
      __webpack_require__.d(__webpack_exports__, 'a', function() {
        return Colors;
      }),
        (function(Colors) {
          (Colors.blue = '#1890FF'),
            (Colors.lightBlue = '#A8CCFF'),
            (Colors.black = '#333333'),
            (Colors.red = '#F83E32'),
            (Colors.green = '#8FBA14'),
            (Colors.silver = '#A9A9A9'),
            (Colors.orange = '#FF7F03'),
            (Colors.background = '#eff4ff'),
            (Colors.yellow = '#FFD600');
        })(Colors || (Colors = {}));
    },
    624: function(module, exports, __webpack_require__) {
      __webpack_require__(625),
        __webpack_require__(782),
        __webpack_require__(783),
        __webpack_require__(1136),
        __webpack_require__(1127),
        __webpack_require__(1146),
        __webpack_require__(1147),
        __webpack_require__(1139),
        __webpack_require__(1132),
        __webpack_require__(1148),
        __webpack_require__(1149),
        __webpack_require__(1150),
        (module.exports = __webpack_require__(982));
    },
    692: function(module, exports) {},
    783: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__);
      __webpack_require__(451);
    },
    982: function(module, exports, __webpack_require__) {
      'use strict';
      (function(module) {
        (0, __webpack_require__(451).configure)(
          [__webpack_require__(983), __webpack_require__(993)],
          module,
          !1
        );
      }.call(this, __webpack_require__(274)(module)));
    },
    983: function(module, exports, __webpack_require__) {
      var map = { './example/Introduction.stories.mdx': 984 };
      function webpackContext(req) {
        var id = webpackContextResolve(req);
        return __webpack_require__(id);
      }
      function webpackContextResolve(req) {
        if (!__webpack_require__.o(map, req)) {
          var e = new Error("Cannot find module '" + req + "'");
          throw ((e.code = 'MODULE_NOT_FOUND'), e);
        }
        return map[req];
      }
      (webpackContext.keys = function webpackContextKeys() {
        return Object.keys(map);
      }),
        (webpackContext.resolve = webpackContextResolve),
        (module.exports = webpackContext),
        (webpackContext.id = 983);
    },
    984: function(module, __webpack_exports__, __webpack_require__) {
      'use strict';
      __webpack_require__.r(__webpack_exports__),
        __webpack_require__.d(__webpack_exports__, '__page', function() {
          return __page;
        });
      __webpack_require__(0);
      var _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(131),
        _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(595),
        _storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(10);
      __webpack_require__(985),
        __webpack_require__(986),
        __webpack_require__(987),
        __webpack_require__(988),
        __webpack_require__(989),
        __webpack_require__(990),
        __webpack_require__(991),
        __webpack_require__(992);
      function _extends() {
        return (_extends =
          Object.assign ||
          function(target) {
            for (var i = 1; i < arguments.length; i++) {
              var source = arguments[i];
              for (var key in source)
                Object.prototype.hasOwnProperty.call(source, key) && (target[key] = source[key]);
            }
            return target;
          }).apply(this, arguments);
      }
      const layoutProps = {};
      function MDXContent({ components: components, ...props }) {
        return Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(
          'wrapper',
          _extends({}, layoutProps, props, { components: components, mdxType: 'MDXLayout' }),
          Object(
            _mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b
          )(_storybook_addon_docs_blocks__WEBPACK_IMPORTED_MODULE_3__.c, {
            title: 'About/Welcome',
            mdxType: 'Meta'
          })
        );
      }
      MDXContent.isMDXComponent = !0;
      const __page = () => {
        throw new Error('Docs-only story');
      };
      __page.parameters = { docsOnly: !0 };
      const componentMeta = { title: 'About/Welcome', includeStories: ['__page'] },
        mdxStoryNameToKey = {};
      (componentMeta.parameters = componentMeta.parameters || {}),
        (componentMeta.parameters.docs = {
          ...(componentMeta.parameters.docs || {}),
          page: () =>
            Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(
              _storybook_addon_docs__WEBPACK_IMPORTED_MODULE_2__.a,
              { mdxStoryNameToKey: mdxStoryNameToKey, mdxComponentMeta: componentMeta },
              Object(_mdx_js_react__WEBPACK_IMPORTED_MODULE_1__.b)(MDXContent, null)
            )
        }),
        (__webpack_exports__.default = componentMeta);
    },
    985: function(module, exports, __webpack_require__) {
      module.exports = __webpack_require__.p + 'static/media/code-brackets.d43eb968.svg';
    },
    986: function(module, exports, __webpack_require__) {
      module.exports = __webpack_require__.p + 'static/media/colors.8104e6f5.svg';
    },
    987: function(module, exports, __webpack_require__) {
      module.exports = __webpack_require__.p + 'static/media/comments.3f9a1398.svg';
    },
    988: function(module, exports, __webpack_require__) {
      module.exports = __webpack_require__.p + 'static/media/direction.d3dc567b.svg';
    },
    989: function(module, exports, __webpack_require__) {
      module.exports = __webpack_require__.p + 'static/media/flow.e3812c4f.svg';
    },
    990: function(module, exports, __webpack_require__) {
      module.exports = __webpack_require__.p + 'static/media/plugin.5ba97e9b.svg';
    },
    991: function(module, exports, __webpack_require__) {
      module.exports = __webpack_require__.p + 'static/media/repo.3452b916.svg';
    },
    992: function(module, exports, __webpack_require__) {
      module.exports = __webpack_require__.p + 'static/media/stackalt.66f4b748.svg';
    },
    993: function(module, exports, __webpack_require__) {
      var map = {
        './components/autocomplete/AutoComplete.stories.tsx': 1133,
        './components/budgetBlock/AdvBudgetBlock.stories.tsx': 1129,
        './components/button/button.stories.tsx': 1134,
        './components/checkbox/checkbox.stories.tsx': 1137,
        './components/inputNumber/inputNumber.stories.tsx': 1140,
        './components/layout/layout.stories.tsx': 1128,
        './components/ndsradio/NdsRadio.stories.tsx': 1151,
        './components/popover/popover.stories.tsx': 1141,
        './components/rqType/rqType.stories.tsx': 1142,
        './components/search/search.stories.tsx': 1135,
        './components/tabs/tabs.stories.tsx': 1143,
        './components/typography/typography.stories.tsx': 1144
      };
      function webpackContext(req) {
        var id = webpackContextResolve(req);
        return __webpack_require__(id);
      }
      function webpackContextResolve(req) {
        if (!__webpack_require__.o(map, req)) {
          var e = new Error("Cannot find module '" + req + "'");
          throw ((e.code = 'MODULE_NOT_FOUND'), e);
        }
        return map[req];
      }
      (webpackContext.keys = function webpackContextKeys() {
        return Object.keys(map);
      }),
        (webpackContext.resolve = webpackContextResolve),
        (module.exports = webpackContext),
        (webpackContext.id = 993);
    }
  },
  [[624, 2, 3]]
]);
